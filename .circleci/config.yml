version: 2.1
executors:
  python:
    parameters:
      version:
        type: string
        default: lastest
    docker:
      - image: circleci/python:<< parameters.version >>

commands:
  setup:
    parameters:
      version:
        type: string
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python<< parameters.version >>

  install-and-cache:
    description: "Install dependencies"
    parameters:
      version:
        type: string
    steps:
      - setup:
          version: << parameters.version >>
      - restore_cache:
          key: python<< parameters.version >>-requirements-{{ checksum "requirements.txt" }}
      - run: pip install -e .
      - run: python --version
      - save_cache:
          key: python<< parameters.version >>-requirements-{{ checksum "requirements.txt" }}
          paths:
            - "~/.cache/pip"
            - "/usr/local/lib/python<< parameters.version >>/site-packges"
            - "/usr/local/lib/site-python"



jobs:
  linting:
    parameters:
      version:
          type: string
    executor:
      name: python
      version: << parameters.version >>
    working_directory: ~/lumapps-sdk
    steps:
      - setup:
          version: << parameters.versions >>
      - run: 
          name: Install dependencies
          command: |
            pip install flake8 flake8_formatter_junit_xml
            if [ << parameters.version >> > "3.6" ] ; then pip install flake8-bugbear ; fi
      - run:
          name: run flake8
          command: |
            mkdir -p test-results
            flake8 lumapps_api_* --format junit-xml --output-file test-results/flake8.xml
      - run:
          name: run bandit
          command: |
            pip install bandit
            bandit -r -f xml -o test-results/security.xml lumapps*
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: flake8-artifacts

  build:
    parameters:
      version:
        type: string
    executor:
      name: python
      version: << parameters.version >>
    working_directory: ~/lumapps-sdk
    steps:
      - install-and-cache:
          version: << parameters.version >>


  test-and-coverage:
    parameters:
      version:
        type: string
    executor:
      name: python
      version: << parameters.version >>
    steps:
      - install-and-cache:
          version: << parameters.version >>
      - run: 
          name: Install test and coverage librairies
          command: pip install pytest coverage
      - run:
          name: Run tests
          command: |
            mkdir -p test-reports/pytest
            coverage run -m pytest --junitxml=test-results/pytest/results.xml -v
            coverage report
      - run:
          name: Upload to codecov
          command: bash <(curl -s https://codecov.io/bash) -cF Build${CIRCLE_BUILD_NUM}
      - store_test_results:
          path: test-results
  
  code-formatting:
    executor:
      name: python
      version: "3.6"
    working_directory: ~/lumapps-sdk
    steps:
      - setup:
          version: "3.6"
      - run:
          name: Install black
          command: pip install black
      - run:
          name: Formatting
          command: black --check *.py

  documentation:
    parameters:
      version:
        type: string
    executor:
      name: python
      version: << parameters.version >>
    steps:
      - install-and-cache:
          version: << parameters.version >>
      - run:
          name: Install dependencies
          command: pip install -r requirements_dev.txt
      - run:
          name: build doc
          command: cd docs && make clean html

workflows:
  version: 2.1
  
  workflow-python27:
    jobs:
      - build:
          name: "Build-27"
          version: "2.7"

      - linting:
          name: "Linting-27"
          version: "2.7"
      
      - test-and-coverage:
          name: "Tests-27"
          version: "2.7"
          requires:
            - "Linting-27"
    

 
    
  workflow-python36:
    jobs:
      - build:
          name: "Build-36"
          version: "3.6"

      - linting:
          name: "Linting-36"
          version: "3.6"
          requires:
            - "Build-36"
      
      - code-formatting:
          name: "Code formatting"
          requires:
              - "Build-36"
      
      - test-and-coverage:
          name: "Test-36"
          version: "3.6"
          requires:
            - "Build-36"
            - "Linting-36"
      
      - documentation:
          name: "Building documentation"
          version: "3.6"
          requires:
            - "Test-36"

