{
    "auth": {
      "oauth2": {
        "scopes": {
          "https://www.googleapis.com/auth/userinfo.email": {
            "description": "View your email address"
          }
        }
      }
    },
    "basePath": "/_ah/api/lumsites/v1/",
    "baseUrl": "https://lumsites.appspot.com/_ah/api/lumsites/v1/",
    "batchPath": "batch",
    "description": "LumApps API",
    "discoveryVersion": "v1",
    "documentationLink": "https://api.lumapps.com/",
    "icons": {
      "x16": "https://www.gstatic.com/images/branding/product/1x/googleg_16dp.png",
      "x32": "https://www.gstatic.com/images/branding/product/1x/googleg_32dp.png"
    },
    "id": "lumsites:v1",
    "kind": "discovery#restDescription",
    "name": "lumsites",
    "parameters": {
      "alt": {
        "default": "json",
        "description": "Data format for the response.",
        "enum": [
          "json"
        ],
        "enumDescriptions": [
          "Responses with Content-Type of application/json"
        ],
        "location": "query",
        "type": "string"
      },
      "fields": {
        "description": "Selector specifying which fields to include in a partial response.",
        "location": "query",
        "type": "string"
      },
      "key": {
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
        "location": "query",
        "type": "string"
      },
      "oauth_token": {
        "description": "OAuth 2.0 token for the current user.",
        "location": "query",
        "type": "string"
      },
      "prettyPrint": {
        "default": "true",
        "description": "Returns response with indentations and line breaks.",
        "location": "query",
        "type": "boolean"
      },
      "quotaUser": {
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
        "location": "query",
        "type": "string"
      },
      "userIp": {
        "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
        "location": "query",
        "type": "string"
      }
    },
    "protocol": "rest",
    "resources": {
      "analytics": {
        "methods": {
          "indicators": {
            "description": "\n        Retrieve the requested production adoption analytic indicators.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.analytics.indicators",
            "path": "analytics/get_indicators",
            "request": {
              "$ref": "ServerAnalyticsIndicatorsMessagesAnalyticsRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerAnalyticsIndicatorsMessagesGenericAnalyticsResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "analyticsv2": {
        "resources": {
          "platform": {
            "methods": {
              "indicators": {
                "description": "\n        Retrieve the requested production adoption analytic indicators.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.analyticsv2.platform.indicators",
                "path": "analyticsv2/get_indicators",
                "request": {
                  "$ref": "ServerAnalyticsv2IndicatorsMessagesAnalyticsPlatformRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerAnalyticsv2IndicatorsMessagesGenericAnalyticsResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "benchmark": {
        "methods": {
          "noop": {
            "description": "\n        Do nothing, use it to measure archi overhead.\n\n        Args:\n            request (VoidMessage): The empty message.\n\n        Returns:\n            VoidMessage: The empty message.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.benchmark.noop",
            "path": "benchmark/noop",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "calendar": {
        "methods": {
          "get": {
            "description": "\n        Get a Google calendar.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.calendar.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "calendar/get",
            "response": {
              "$ref": "ServerCalendarCalendarMessagesCalendarGetResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List Google Calendar calendars.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.calendar.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "200",
                "format": "int32",
                "location": "query",
                "type": "integer"
              }
            },
            "path": "calendar/list",
            "response": {
              "$ref": "ServerCalendarCalendarMessagesCalendarListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "event": {
            "methods": {
              "list": {
                "description": "\n        List Calendar events.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.calendar.event.list",
                "parameters": {
                  "calendarId": {
                    "location": "query",
                    "type": "string"
                  },
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "endDate": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "query": {
                    "location": "query",
                    "type": "string"
                  },
                  "startDate": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "calendar/event/list",
                "response": {
                  "$ref": "ServerCalendarCalendarMessagesCalendarEventListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "classroom": {
        "resources": {
          "courseWork": {
            "methods": {
              "list": {
                "description": "\n        Lists coursework of the first course.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.classroom.courseWork.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "courseId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int64",
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "classroom/courseWork/list",
                "response": {
                  "$ref": "ServerClassroomClassroomMessagesCourseWorkListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "courses": {
            "methods": {
              "list": {
                "description": "\n        List courses of a specific user.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.classroom.courses.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int64",
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "classroom/courses/list",
                "response": {
                  "$ref": "ServerClassroomClassroomMessagesCourseListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "grade": {
            "methods": {
              "list": {
                "description": "\n        Lists grades of the first course.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.classroom.grade.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "courseId": {
                    "location": "query",
                    "type": "string"
                  },
                  "courseWorkId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int64",
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "classroom/grade/list",
                "response": {
                  "$ref": "ServerClassroomClassroomMessagesGradeListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "submissions": {
            "methods": {
              "list": {
                "description": "\n        Lists submissions of the first course.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.classroom.submissions.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "courseId": {
                    "location": "query",
                    "type": "string"
                  },
                  "courseWorkId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int64",
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "classroom/submissions/list",
                "response": {
                  "$ref": "ServerClassroomClassroomMessagesSubmissionListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "userProfiles": {
            "methods": {
              "get": {
                "description": "\n        Get specific user profile.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.classroom.userProfiles.get",
                "parameters": {
                  "courseId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int64",
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "classroom/userProfiles/get",
                "response": {
                  "$ref": "ServerClassroomClassroomMessagesUserProfile"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "cloudsearch": {
        "methods": {
          "search": {
            "description": "\n        *alpha* Execute a query on the CloudSearch Query API (search).\n        ",
            "httpMethod": "POST",
            "id": "lumsites.cloudsearch.search",
            "path": "cloudsearch/search",
            "request": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchQueryRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchQueryResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "suggest": {
            "description": "\n        *alpha* Execute a query on the CloudSearch Query API (search).\n        ",
            "httpMethod": "POST",
            "id": "lumsites.cloudsearch.suggest",
            "path": "cloudsearch/suggest",
            "request": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSuggestRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSuggestResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "customfields": {
            "methods": {
              "list": {
                "description": "\n        *alpha* Save the given datasource settings.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.cloudsearch.customfields.list",
                "path": "cloudsearch/customfields/list",
                "request": {
                  "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSourceIdRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSourceCustomFieldsResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "datasourceconfig": {
            "methods": {
              "get": {
                "description": "\n        *alpha* List the available CloudSearch datasets.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.cloudsearch.datasourceconfig.get",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "customerId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "cloudsearch/datasourceconfig/get",
                "response": {
                  "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDataSourceListMessage"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        *alpha* Save the given datasource settings.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.cloudsearch.datasourceconfig.save",
                "path": "cloudsearch/datasourceconfig/save",
                "request": {
                  "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDataSourceListMessage",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDataSourceListMessage"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "comment": {
        "methods": {
          "get": {
            "description": "\n        Get a comment.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.comment.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "comment/get",
            "response": {
              "$ref": "Comment"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "like": {
            "description": "\n        Like a comment\n        ",
            "httpMethod": "POST",
            "id": "lumsites.comment.like",
            "path": "comment/like",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKey",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Comment"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List comments.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.comment.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "content": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "parent": {
                "location": "query",
                "type": "string"
              },
              "sortOrder": {
                "location": "query",
                "type": "string"
              },
              "withAnswers": {
                "location": "query",
                "type": "boolean"
              }
            },
            "path": "comment/list",
            "response": {
              "$ref": "ServerCommentCommentMessagesCommentListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "markRelevant": {
            "description": "\n        Mark a comment as relevant\n        ",
            "httpMethod": "POST",
            "id": "lumsites.comment.markRelevant",
            "path": "comment/markRelevant",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKey",
              "parameterName": "resource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "httpMethod": "POST",
            "id": "lumsites.comment.save",
            "parameters": {
              "updateFields": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "comment/save",
            "request": {
              "$ref": "Comment",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Comment"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "unlike": {
            "description": "\n        Unlike a comment\n        ",
            "httpMethod": "POST",
            "id": "lumsites.comment.unlike",
            "path": "comment/unlike",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKey",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Comment"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "unmarkRelevant": {
            "description": "\n        Mark a comment as relevant\n        ",
            "httpMethod": "POST",
            "id": "lumsites.comment.unmarkRelevant",
            "path": "comment/unmarkRelevant",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKey",
              "parameterName": "resource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "community": {
        "methods": {
          "delete": {
            "description": "\n        Delete a community.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.community.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "community/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete a list of community.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.community.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "community/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "follow": {
            "description": "\n        Follow a community, dedicated and simple endpoint to easily follow a community without subscription management\n        on client side.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.community.follow",
            "parameterOrder": [
              "id"
            ],
            "parameters": {
              "id": {
                "location": "path",
                "type": "string"
              },
              "notify": {
                "location": "query",
                "type": "boolean"
              }
            },
            "path": "community/{id}/follow",
            "response": {
              "$ref": "Subscription"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a community.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.community.get",
            "parameters": {
              "action": {
                "enum": [
                  "PAGE_READ",
                  "PAGE_EDIT",
                  "PAGE_DELETE",
                  "NEWS_READ",
                  "NEWS_EDIT",
                  "NEWS_DELETE",
                  "PAGE_ARCHIVE",
                  "PAGE_PUBLISH",
                  "NEWS_PUBLISH",
                  "METADATA_EDIT",
                  "METADATA_DELETE",
                  "ROLE_READ",
                  "ROLE_EDIT",
                  "ROLE_DELETE",
                  "NEWS_LIST_READ",
                  "NEWS_LIST_EDIT",
                  "NEWS_LIST_DELETE",
                  "DIRECTORY_READ",
                  "DIRECTORY_EDIT",
                  "DIRECTORY_DELETE",
                  "MENU_READ",
                  "MENU_EDIT",
                  "MENU_DELETE",
                  "TEMPLATE_READ",
                  "TEMPLATE_EDIT",
                  "TEMPLATE_DELETE",
                  "INSTANCE_EDIT",
                  "INSTANCE_DELETE",
                  "FEED_EDIT",
                  "FEED_DELETE",
                  "MEDIA_EDIT",
                  "MEDIA_DELETE",
                  "USER_READ",
                  "USER_EDIT",
                  "USER_DELETE",
                  "RESELLER_READ",
                  "RESELLER_EDIT",
                  "POST_EDIT",
                  "GROUP_EDIT",
                  "DIRECTORY_ENTRY_FAVORITES_EDIT",
                  "NEWSLETTER_READ",
                  "NEWSLETTER_EDIT",
                  "NEWSLETTER_DELETE",
                  "CUSTOM_CONTENT_TYPE_EDIT",
                  "CUSTOM_CONTENT_TYPE_DELETE",
                  "CUSTOM_CONTENT_READ",
                  "CUSTOM_CONTENT_PUBLISH",
                  "CUSTOM_CONTENT_EDIT",
                  "CUSTOM_CONTENT_DELETE",
                  "CUSTOM_LIST_READ",
                  "CUSTOM_LIST_EDIT",
                  "CUSTOM_LIST_DELETE",
                  "CUSTOM_LIST_PUBLISH",
                  "COMMUNITY_READ",
                  "COMMUNITY_EDIT",
                  "COMMUNITY_DELETE",
                  "USER_DIRECTORY_READ",
                  "USER_DIRECTORY_EDIT",
                  "USER_DIRECTORY_DELETE",
                  "CUSTOM_READ",
                  "CUSTOM_EDIT",
                  "CUSTOM_DELETE",
                  "TUTORIAL_READ",
                  "TUTORIAL_EDIT",
                  "TUTORIAL_DELETE",
                  "POST_READ",
                  "POST_DELETE",
                  "CUSTOM_CONTENT_ARCHIVE",
                  "MENU_DROP",
                  "STYLE_READ",
                  "STYLE_EDIT",
                  "STYLE_DELETE",
                  "GLOBAL_WIDGET_EDIT",
                  "TARGET_EDIT",
                  "DIRECTORY_ENTRY_READ",
                  "DIRECTORY_ENTRY_EDIT",
                  "DIRECTORY_ENTRY_DELETE",
                  "COMMUNITY_PUBLISH",
                  "ANALYTICS_READ",
                  "GAMIFICATION_ADMIN"
                ],
                "enumDescriptions": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "location": "query",
                "type": "string"
              },
              "callId": {
                "location": "query",
                "type": "string"
              },
              "customerHost": {
                "location": "query",
                "type": "string"
              },
              "customerSlug": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "instanceSlug": {
                "location": "query",
                "type": "string"
              },
              "lang": {
                "location": "query",
                "type": "string"
              },
              "slug": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "community/get",
            "response": {
              "$ref": "Community"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List communities.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.community.list",
            "parameters": {
              "fields": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "community/list",
            "request": {
              "$ref": "ServerContentCommunityCommunityMessagesCommunityListRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerContentCommunityCommunityMessagesCommunityListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a community.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.community.save",
            "path": "community/save",
            "request": {
              "$ref": "Community",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Community"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "unfollow": {
            "description": "\n        Unfollow a community, dedicated and simple endpoint to easily unfollow a community without subscription\n        management on client side.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.community.unfollow",
            "parameterOrder": [
              "id"
            ],
            "parameters": {
              "id": {
                "location": "path",
                "type": "string"
              }
            },
            "path": "community/{id}/unfollow",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "notifications": {
            "methods": {
              "disable": {
                "description": "\n        Disable notification on a community.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.notifications.disable",
                "parameterOrder": [
                  "id"
                ],
                "parameters": {
                  "id": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "community/notifications/disable",
                "response": {
                  "$ref": "Subscription"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "enable": {
                "description": "\n        Enable notifications on a community.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.notifications.enable",
                "parameterOrder": [
                  "id"
                ],
                "parameters": {
                  "id": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "community/notifications/enable",
                "response": {
                  "$ref": "Subscription"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "post": {
            "methods": {
              "close": {
                "description": "\n        Close a post.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.post.close",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "community/post/{uid}/close",
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "delete": {
                "description": "\n        Delete a post.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.community.post.delete",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "community/post/delete",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "get": {
                "description": "\n        Get a post by ID.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.community.post.get",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "community/post/get",
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "like": {
                "description": "\n        Like a post.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.post.like",
                "path": "community/post/like",
                "request": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKey",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List posts.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.community.post.list",
                "parameters": {
                  "author": {
                    "location": "query",
                    "type": "string"
                  },
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "contentId": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "currentInstance": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "customerId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "followingOnly": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "hasRelevant": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "ids": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "instanceId": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "isCommunityAdmin": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "isMergePending": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "isMerged": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "isOpen": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "isPinned": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "lang": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "maxScore": {
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "minScore": {
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "postStatus": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "postType": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "query": {
                    "location": "query",
                    "type": "string"
                  },
                  "reportStatus": {
                    "location": "query",
                    "type": "string"
                  },
                  "sortOrder": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "tags": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  }
                },
                "path": "community/post/list",
                "response": {
                  "$ref": "ServerContentCommunityPostPostMessagesPostListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "move": {
                "description": "\n        Move a post from a community to another\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.post.move",
                "parameterOrder": [
                  "uid",
                  "communityId"
                ],
                "parameters": {
                  "communityId": {
                    "location": "path",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "community/post/{uid}/move/{communityId}",
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "open": {
                "description": "\n        Reopen a post.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.post.open",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "community/post/{uid}/open",
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "pin": {
                "description": "\n        Mark a post as pinned.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.post.pin",
                "path": "community/post/pin",
                "request": {
                  "$ref": "ServerContentCommunityPostPostMessagesPostPinRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "postStatus": {
                "description": "\n        Update custom status of a post.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.post.postStatus",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "status": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "community/post/{uid}/status",
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save a post.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.post.save",
                "parameters": {
                  "updateFields": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "community/post/save",
                "request": {
                  "$ref": "Post",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "search": {
                "description": "\n        Search posts.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.post.search",
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "community/post/search",
                "request": {
                  "$ref": "ServerContentCommunityPostPostMessagesPostListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerContentCommunityPostPostMessagesPostListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "unlike": {
                "description": "\n        Unlike a post.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.post.unlike",
                "path": "community/post/unlike",
                "request": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKey",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "unpin": {
                "description": "\n        Withdraw a post from pinned posts.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.post.unpin",
                "path": "community/post/unpin",
                "request": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKey",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "unvote": {
                "description": "\n        Remove vote for a post.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.community.post.unvote",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "community/post/{uid}/vote",
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "vote": {
                "description": "\n        Vote up or vote down for a post.\n        ",
                "httpMethod": "PUT",
                "id": "lumsites.community.post.vote",
                "parameterOrder": [
                  "uid",
                  "vote"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "required": true,
                    "type": "string"
                  },
                  "vote": {
                    "default": "up",
                    "enum": [
                      "up",
                      "down"
                    ],
                    "enumDescriptions": [
                      "",
                      ""
                    ],
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "community/post/{uid}/vote/{vote}",
                "response": {
                  "$ref": "Post"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            },
            "resources": {
              "comments": {
                "methods": {
                  "list": {
                    "description": "\n        List comments.\n        ",
                    "httpMethod": "GET",
                    "id": "lumsites.community.post.comments.list",
                    "parameters": {
                      "callId": {
                        "location": "query",
                        "type": "string"
                      },
                      "contentId": {
                        "location": "query",
                        "required": true,
                        "type": "string"
                      },
                      "cursor": {
                        "location": "query",
                        "type": "string"
                      },
                      "fields": {
                        "location": "query",
                        "type": "string"
                      },
                      "maxResults": {
                        "default": "30",
                        "format": "int32",
                        "location": "query",
                        "type": "integer"
                      },
                      "parent": {
                        "location": "query",
                        "type": "string"
                      }
                    },
                    "path": "community/post/comments/list",
                    "response": {
                      "$ref": "ServerCommentCommentMessagesCommentListResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              },
              "merge": {
                "methods": {
                  "approve": {
                    "description": "\n        Approve a merge report.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.community.post.merge.approve",
                    "parameterOrder": [
                      "master_uid"
                    ],
                    "parameters": {
                      "fields": {
                        "location": "query",
                        "type": "string"
                      },
                      "master_uid": {
                        "location": "path",
                        "required": true,
                        "type": "string"
                      },
                      "postUids": {
                        "location": "query",
                        "repeated": true,
                        "type": "string"
                      }
                    },
                    "path": "community/post/{master_uid}/merge/approve",
                    "response": {
                      "$ref": "Post"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  },
                  "reject": {
                    "description": "\n        Reject a merge report.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.community.post.merge.reject",
                    "parameterOrder": [
                      "master_uid"
                    ],
                    "parameters": {
                      "fields": {
                        "location": "query",
                        "type": "string"
                      },
                      "master_uid": {
                        "location": "path",
                        "required": true,
                        "type": "string"
                      }
                    },
                    "path": "community/post/{master_uid}/merge/reject",
                    "response": {
                      "$ref": "Post"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  },
                  "report": {
                    "description": "\n        Report some posts as duplicated and create a merge report.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.community.post.merge.report",
                    "parameterOrder": [
                      "master_uid"
                    ],
                    "parameters": {
                      "fields": {
                        "location": "query",
                        "type": "string"
                      },
                      "master_uid": {
                        "location": "path",
                        "required": true,
                        "type": "string"
                      },
                      "postUids": {
                        "location": "query",
                        "repeated": true,
                        "type": "string"
                      }
                    },
                    "path": "community/post/{master_uid}/merge/report",
                    "response": {
                      "$ref": "Post"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              },
              "report": {
                "methods": {
                  "list": {
                    "description": "\n        List report for each post matching criteria. can be use with postId OR spammerId.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.community.post.report.list",
                    "path": "community/post/report/list",
                    "request": {
                      "$ref": "ServerContentCommunityPostReportReportMessagesReportListRequest",
                      "parameterName": "resource"
                    },
                    "response": {
                      "$ref": "ServerContentCommunityPostReportReportMessagesReportListResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  },
                  "moderate": {
                    "description": "\n        Moderate a post.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.community.post.report.moderate",
                    "parameters": {
                      "fields": {
                        "location": "query",
                        "type": "string"
                      }
                    },
                    "path": "community/post/report/moderate",
                    "request": {
                      "$ref": "ServerContentCommunityPostReportReportMessagesModerateRequest",
                      "parameterName": "resource"
                    },
                    "response": {
                      "$ref": "Moderation"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  },
                  "save": {
                    "description": "\n        Save a report.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.community.post.report.save",
                    "parameters": {
                      "fields": {
                        "location": "query",
                        "type": "string"
                      }
                    },
                    "path": "community/post/report/save",
                    "request": {
                      "$ref": "ServerContentCommunityPostReportReportMessagesReportRequest",
                      "parameterName": "resource"
                    },
                    "response": {
                      "$ref": "Moderation"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              }
            }
          },
          "request": {
            "methods": {
              "approve": {
                "description": "\n        Approve a community access request.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.request.approve",
                "path": "community/request/approve",
                "request": {
                  "$ref": "ServerContentCommunityCommunityRequestCommunityRequestMessagesCommunityRequestStatusRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "get": {
                "description": "\n        Get a community access request.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.community.request.get",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "communityId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "community/request/get",
                "response": {
                  "$ref": "CommunityRequest"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List community access requests.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.community.request.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "communityId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "requestStatus": {
                    "default": "pending",
                    "location": "query",
                    "type": "string"
                  },
                  "userId": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "community/request/list",
                "response": {
                  "$ref": "ServerContentCommunityCommunityRequestCommunityRequestMessagesCommunityRequestListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "reject": {
                "description": "\n        Reject a community access request.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.request.reject",
                "path": "community/request/reject",
                "request": {
                  "$ref": "ServerContentCommunityCommunityRequestCommunityRequestMessagesCommunityRequestStatusRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save a community access request.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.request.save",
                "path": "community/request/save",
                "request": {
                  "$ref": "CommunityRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "CommunityRequest"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "user": {
            "methods": {
              "list": {
                "description": "\n        List all users that can publish in a community.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.community.user.list",
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "community/user/list",
                "request": {
                  "$ref": "ServerContentCommunityCommunityMessagesCommunityUserListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerUserUserMessagesUserListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "communitytemplate": {
        "methods": {
          "delete": {
            "description": "\n        Delete a template.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.communitytemplate.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "communitytemplate/delete",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete a list of templates.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.communitytemplate.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "communitytemplate/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a template by ID.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.communitytemplate.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "communitytemplate/get",
            "response": {
              "$ref": "CommunityTemplate"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List templates.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.communitytemplate.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "instanceId": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "query": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "communitytemplate/list",
            "response": {
              "$ref": "ServerCommunityTemplateCommunityTemplateMessagesCommunityTemplateListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a template.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.communitytemplate.save",
            "path": "communitytemplate/save",
            "request": {
              "$ref": "CommunityTemplate",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "CommunityTemplate"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "content": {
        "methods": {
          "archive": {
            "description": "\n        Archive a content.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.content.archive",
            "path": "content/archive",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKey",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Content"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "delete": {
            "description": "\n        Delete a content.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.content.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "content/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete a list of contents.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.content.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "content/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "follow": {
            "description": "\n        Follow a Content, dedicated and simple endpoint to easily follow a Content without subscription management\n        on client side.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.content.follow",
            "parameterOrder": [
              "id"
            ],
            "parameters": {
              "id": {
                "location": "path",
                "type": "string"
              },
              "notify": {
                "location": "query",
                "type": "boolean"
              }
            },
            "path": "content/{id}/follow",
            "response": {
              "$ref": "Subscription"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a content.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.content.get",
            "parameters": {
              "action": {
                "enum": [
                  "PAGE_READ",
                  "PAGE_EDIT",
                  "PAGE_DELETE",
                  "NEWS_READ",
                  "NEWS_EDIT",
                  "NEWS_DELETE",
                  "PAGE_ARCHIVE",
                  "PAGE_PUBLISH",
                  "NEWS_PUBLISH",
                  "METADATA_EDIT",
                  "METADATA_DELETE",
                  "ROLE_READ",
                  "ROLE_EDIT",
                  "ROLE_DELETE",
                  "NEWS_LIST_READ",
                  "NEWS_LIST_EDIT",
                  "NEWS_LIST_DELETE",
                  "DIRECTORY_READ",
                  "DIRECTORY_EDIT",
                  "DIRECTORY_DELETE",
                  "MENU_READ",
                  "MENU_EDIT",
                  "MENU_DELETE",
                  "TEMPLATE_READ",
                  "TEMPLATE_EDIT",
                  "TEMPLATE_DELETE",
                  "INSTANCE_EDIT",
                  "INSTANCE_DELETE",
                  "FEED_EDIT",
                  "FEED_DELETE",
                  "MEDIA_EDIT",
                  "MEDIA_DELETE",
                  "USER_READ",
                  "USER_EDIT",
                  "USER_DELETE",
                  "RESELLER_READ",
                  "RESELLER_EDIT",
                  "POST_EDIT",
                  "GROUP_EDIT",
                  "DIRECTORY_ENTRY_FAVORITES_EDIT",
                  "NEWSLETTER_READ",
                  "NEWSLETTER_EDIT",
                  "NEWSLETTER_DELETE",
                  "CUSTOM_CONTENT_TYPE_EDIT",
                  "CUSTOM_CONTENT_TYPE_DELETE",
                  "CUSTOM_CONTENT_READ",
                  "CUSTOM_CONTENT_PUBLISH",
                  "CUSTOM_CONTENT_EDIT",
                  "CUSTOM_CONTENT_DELETE",
                  "CUSTOM_LIST_READ",
                  "CUSTOM_LIST_EDIT",
                  "CUSTOM_LIST_DELETE",
                  "CUSTOM_LIST_PUBLISH",
                  "COMMUNITY_READ",
                  "COMMUNITY_EDIT",
                  "COMMUNITY_DELETE",
                  "USER_DIRECTORY_READ",
                  "USER_DIRECTORY_EDIT",
                  "USER_DIRECTORY_DELETE",
                  "CUSTOM_READ",
                  "CUSTOM_EDIT",
                  "CUSTOM_DELETE",
                  "TUTORIAL_READ",
                  "TUTORIAL_EDIT",
                  "TUTORIAL_DELETE",
                  "POST_READ",
                  "POST_DELETE",
                  "CUSTOM_CONTENT_ARCHIVE",
                  "MENU_DROP",
                  "STYLE_READ",
                  "STYLE_EDIT",
                  "STYLE_DELETE",
                  "GLOBAL_WIDGET_EDIT",
                  "TARGET_EDIT",
                  "DIRECTORY_ENTRY_READ",
                  "DIRECTORY_ENTRY_EDIT",
                  "DIRECTORY_ENTRY_DELETE",
                  "COMMUNITY_PUBLISH",
                  "ANALYTICS_READ",
                  "GAMIFICATION_ADMIN"
                ],
                "enumDescriptions": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "location": "query",
                "type": "string"
              },
              "callId": {
                "location": "query",
                "type": "string"
              },
              "customerHost": {
                "location": "query",
                "type": "string"
              },
              "customerSlug": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "instanceSlug": {
                "location": "query",
                "type": "string"
              },
              "lang": {
                "location": "query",
                "type": "string"
              },
              "slug": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "content/get",
            "response": {
              "$ref": "Content"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "like": {
            "description": "\n        Like a content.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.content.like",
            "path": "content/like",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKey",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Content"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of contents.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.content.list",
            "parameters": {
              "fields": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "content/list",
            "request": {
              "$ref": "ServerContentContentMessagesContentListRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerContentContentMessagesContentListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a content.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.content.save",
            "path": "content/save",
            "request": {
              "$ref": "Content",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Content"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "saveMulti": {
            "description": "\n        Save a list of contents.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.content.saveMulti",
            "path": "content/saveMulti",
            "request": {
              "$ref": "ServerContentContentMessagesSaveContentMultiRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerContentContentMessagesContentListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "setHomepage": {
            "description": "\n        Set a content as home page.<br>\n        This is only available for a super admin or an instance admin.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.content.setHomepage",
            "path": "content/setHomepage",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKey",
              "parameterName": "resource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "unarchive": {
            "description": "\n        Unarchive a content.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.content.unarchive",
            "path": "content/unarchive",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKey",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Content"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "unfollow": {
            "description": "\n        Unfollow a Content, dedicated and simple endpoint to easily unfollow a Content without subscription\n        management on client side.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.content.unfollow",
            "parameterOrder": [
              "id"
            ],
            "parameters": {
              "id": {
                "location": "path",
                "type": "string"
              }
            },
            "path": "content/{id}/unfollow",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "unlike": {
            "description": "\n        Unlike a content.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.content.unlike",
            "path": "content/unlike",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKey",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Content"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "updateStatus": {
            "description": "\n        Update status of a content.<br>\n        This is only available for editors and publishers.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.content.updateStatus",
            "path": "content/updateStatus",
            "request": {
              "$ref": "ServerContentContentMessagesContentStatusRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Content"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "data": {
            "methods": {
              "get": {
                "description": "\n        Get the data from a url.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.content.data.get",
                "parameters": {
                  "raw": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "url": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "content/data/get",
                "response": {
                  "$ref": "ServerContentDataDataMessagesDataResponseMessage"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "interest": {
            "methods": {
              "delete": {
                "description": "\n        Delete a interest.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.content.interest.delete",
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "content/interest/delete",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "find": {
                "description": "\n        Retrieve an interest from its parameters\n        ",
                "httpMethod": "POST",
                "id": "lumsites.content.interest.find",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  }
                },
                "path": "content/interest/find",
                "request": {
                  "$ref": "ServerContentInterestInterestMessagesInterestListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Interest"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "get": {
                "description": "\n        Retrieve an interest from its ID.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.content.interest.get",
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "content/interest/get",
                "response": {
                  "$ref": "Interest"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        Retrieve a list of interests.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.content.interest.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  }
                },
                "path": "content/interest/list",
                "request": {
                  "$ref": "ServerContentInterestInterestMessagesInterestListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerContentInterestInterestMessagesInterestListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Create or update a interest.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.content.interest.save",
                "path": "content/interest/save",
                "request": {
                  "$ref": "Interest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Interest"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "menu": {
            "methods": {
              "get": {
                "description": "\n        Retrieve menu items.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.content.menu.get",
                "parameters": {
                  "action": {
                    "enum": [
                      "PAGE_READ",
                      "PAGE_EDIT",
                      "PAGE_DELETE",
                      "NEWS_READ",
                      "NEWS_EDIT",
                      "NEWS_DELETE",
                      "PAGE_ARCHIVE",
                      "PAGE_PUBLISH",
                      "NEWS_PUBLISH",
                      "METADATA_EDIT",
                      "METADATA_DELETE",
                      "ROLE_READ",
                      "ROLE_EDIT",
                      "ROLE_DELETE",
                      "NEWS_LIST_READ",
                      "NEWS_LIST_EDIT",
                      "NEWS_LIST_DELETE",
                      "DIRECTORY_READ",
                      "DIRECTORY_EDIT",
                      "DIRECTORY_DELETE",
                      "MENU_READ",
                      "MENU_EDIT",
                      "MENU_DELETE",
                      "TEMPLATE_READ",
                      "TEMPLATE_EDIT",
                      "TEMPLATE_DELETE",
                      "INSTANCE_EDIT",
                      "INSTANCE_DELETE",
                      "FEED_EDIT",
                      "FEED_DELETE",
                      "MEDIA_EDIT",
                      "MEDIA_DELETE",
                      "USER_READ",
                      "USER_EDIT",
                      "USER_DELETE",
                      "RESELLER_READ",
                      "RESELLER_EDIT",
                      "POST_EDIT",
                      "GROUP_EDIT",
                      "DIRECTORY_ENTRY_FAVORITES_EDIT",
                      "NEWSLETTER_READ",
                      "NEWSLETTER_EDIT",
                      "NEWSLETTER_DELETE",
                      "CUSTOM_CONTENT_TYPE_EDIT",
                      "CUSTOM_CONTENT_TYPE_DELETE",
                      "CUSTOM_CONTENT_READ",
                      "CUSTOM_CONTENT_PUBLISH",
                      "CUSTOM_CONTENT_EDIT",
                      "CUSTOM_CONTENT_DELETE",
                      "CUSTOM_LIST_READ",
                      "CUSTOM_LIST_EDIT",
                      "CUSTOM_LIST_DELETE",
                      "CUSTOM_LIST_PUBLISH",
                      "COMMUNITY_READ",
                      "COMMUNITY_EDIT",
                      "COMMUNITY_DELETE",
                      "USER_DIRECTORY_READ",
                      "USER_DIRECTORY_EDIT",
                      "USER_DIRECTORY_DELETE",
                      "CUSTOM_READ",
                      "CUSTOM_EDIT",
                      "CUSTOM_DELETE",
                      "TUTORIAL_READ",
                      "TUTORIAL_EDIT",
                      "TUTORIAL_DELETE",
                      "POST_READ",
                      "POST_DELETE",
                      "CUSTOM_CONTENT_ARCHIVE",
                      "MENU_DROP",
                      "STYLE_READ",
                      "STYLE_EDIT",
                      "STYLE_DELETE",
                      "GLOBAL_WIDGET_EDIT",
                      "TARGET_EDIT",
                      "DIRECTORY_ENTRY_READ",
                      "DIRECTORY_ENTRY_EDIT",
                      "DIRECTORY_ENTRY_DELETE",
                      "COMMUNITY_PUBLISH",
                      "ANALYTICS_READ",
                      "GAMIFICATION_ADMIN"
                    ],
                    "enumDescriptions": [
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      ""
                    ],
                    "location": "query",
                    "type": "string"
                  },
                  "alternativeLang": {
                    "location": "query",
                    "type": "string"
                  },
                  "customer": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "instance": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "lang": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "content/menu/get",
                "response": {
                  "$ref": "ContentMenuList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save a list of menu items.\n        Only parent, hidden, hideChildren, isNavItem, menuTitle, and children attributes are saved.\n        Other parameters are not saved, but they are returned in response.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.content.menu.save",
                "path": "content/menu/save",
                "request": {
                  "$ref": "ServerContentContentMessagesSaveContentMenuRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerContentContentMessagesSaveContentMenuRequest"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "revision": {
            "methods": {
              "get": {
                "description": "\n        Get a specific revision of a content.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.content.revision.get",
                "parameters": {
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "version": {
                    "format": "int32",
                    "location": "query",
                    "required": true,
                    "type": "integer"
                  }
                },
                "path": "content/revision/get",
                "response": {
                  "$ref": "ContentRevision"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        Get a list of content versions.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.content.revision.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "contentId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  }
                },
                "path": "content/revision/list",
                "response": {
                  "$ref": "ServerContentContentRevisionContentRevisionMessagesContentRevisionListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "restore": {
                "description": "\n        Restore a revision of a content.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.content.revision.restore",
                "path": "content/revision/restore",
                "request": {
                  "$ref": "ServerContentContentRevisionContentRevisionMessagesContentRevisionKeyMessage",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Content"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "rss": {
            "methods": {
              "get": {
                "description": "\n        Get the content of a RSS feed.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.content.rss.get",
                "parameters": {
                  "url": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "content/rss/get",
                "response": {
                  "$ref": "ServerContentRssRssMessagesRssResponseMessage"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "custom": {
        "resources": {
          "apps": {
            "methods": {
              "list": {
                "description": "\n        Get a list of apps\n\n        Returns:\n            a AppsListResponse\n        ",
                "httpMethod": "GET",
                "id": "lumsites.custom.apps.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "custom/apps/list",
                "response": {
                  "$ref": "ServerCustomAppsAppsMessagesAppsListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "concept": {
            "methods": {
              "save": {
                "description": "\n        Save a concept\n\n        Returns:\n            a ConceptResource\n        ",
                "httpMethod": "POST",
                "id": "lumsites.custom.concept.save",
                "path": "custom/concept/save",
                "request": {
                  "$ref": "ServerCustomConceptConceptMessagesConceptResource",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerCustomConceptConceptMessagesConceptResource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "update": {
                "description": "\n        Update the team\n\n        Returns:\n            a TeamResource\n        ",
                "httpMethod": "POST",
                "id": "lumsites.custom.concept.update",
                "path": "custom/concept/update",
                "request": {
                  "$ref": "ServerCustomConceptConceptMessagesTeamResource",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerCustomConceptConceptMessagesTeamResource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "directory": {
            "resources": {
              "entry": {
                "resources": {
                  "favorite": {
                    "methods": {
                      "add": {
                        "description": "\n        Set a directory entry as favorite.\n\n        Args:\n            request: the directory entry to update\n        ",
                        "httpMethod": "POST",
                        "id": "lumsites.custom.directory.entry.favorite.add",
                        "path": "custom/directory/entry/favorite/add",
                        "request": {
                          "$ref": "ServerCommonEndpointMessagesDatastoreKey",
                          "parameterName": "resource"
                        },
                        "scopes": [
                          "https://www.googleapis.com/auth/userinfo.email"
                        ]
                      },
                      "remove": {
                        "description": "\n        Remove a directory entry from favorite.\n\n        Args:\n            request: the directory entry to update\n        ",
                        "httpMethod": "POST",
                        "id": "lumsites.custom.directory.entry.favorite.remove",
                        "path": "custom/directory/entry/favorite/remove",
                        "request": {
                          "$ref": "ServerCommonEndpointMessagesDatastoreKey",
                          "parameterName": "resource"
                        },
                        "scopes": [
                          "https://www.googleapis.com/auth/userinfo.email"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "form": {
            "methods": {
              "saveCop21Form": {
                "httpMethod": "POST",
                "id": "lumsites.custom.form.saveCop21Form",
                "path": "custom/form/saveCop21Form",
                "request": {
                  "$ref": "ServerCustomFormFormMessagesCop21FormRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "saveJobOffersForm": {
                "httpMethod": "POST",
                "id": "lumsites.custom.form.saveJobOffersForm",
                "path": "custom/form/saveJobOffersForm",
                "request": {
                  "$ref": "ServerCustomFormFormMessagesSaveJobOffersFormRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "saveVeoliaEnvironmentForm": {
                "httpMethod": "POST",
                "id": "lumsites.custom.form.saveVeoliaEnvironmentForm",
                "path": "custom/form/saveVeoliaEnvironmentForm",
                "request": {
                  "$ref": "ServerCustomFormFormMessagesVeoliaEnvironmentFormRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "saveVeoliaEnvironmentSimpleForm": {
                "httpMethod": "POST",
                "id": "lumsites.custom.form.saveVeoliaEnvironmentSimpleForm",
                "path": "custom/form/saveVeoliaEnvironmentSimpleForm",
                "request": {
                  "$ref": "ServerCustomFormFormMessagesVeoliaEnvironmentSimpleFormRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "gsite": {
            "methods": {
              "getByInstance": {
                "description": "\n        Retrieve a GSite from its instance id\n        ",
                "httpMethod": "GET",
                "id": "lumsites.custom.gsite.getByInstance",
                "parameters": {
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "custom/gsite/getByInstance",
                "response": {
                  "$ref": "GSite"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "new": {
                "description": "\n        Create or update a GSite\n\n        Args:\n            request: GSite data\n        ",
                "httpMethod": "POST",
                "id": "lumsites.custom.gsite.new",
                "path": "custom/gsite/new",
                "request": {
                  "$ref": "ServerCustomGsiteGsiteMessagesGSiteFormRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerCustomGsiteGsiteMessagesGSiteFormResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            },
            "resources": {
              "media": {
                "methods": {
                  "search": {
                    "description": "\n        Search for attachments in GSites\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.custom.gsite.media.search",
                    "path": "custom/gsite/media/search",
                    "request": {
                      "$ref": "ServerCustomGsiteGsiteMessagesGSiteSearchRequest",
                      "parameterName": "resource"
                    },
                    "response": {
                      "$ref": "ServerCustomGsiteGsiteMessagesGSiteSearchMediaResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              },
              "news": {
                "methods": {
                  "list": {
                    "description": "\n        List news for a GSite widget\n        ",
                    "httpMethod": "GET",
                    "id": "lumsites.custom.gsite.news.list",
                    "parameters": {
                      "cursor": {
                        "location": "query",
                        "type": "string"
                      },
                      "lang": {
                        "location": "query",
                        "type": "string"
                      },
                      "maxResults": {
                        "default": "30",
                        "format": "int32",
                        "location": "query",
                        "type": "integer"
                      },
                      "parent": {
                        "location": "query",
                        "type": "string"
                      }
                    },
                    "path": "custom/gsite/news/list",
                    "response": {
                      "$ref": "ServerCustomGsiteGsiteMessagesGSiteNewsResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              },
              "pages": {
                "methods": {
                  "search": {
                    "description": "\n        Search for text in GSite content pages.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.custom.gsite.pages.search",
                    "path": "custom/gsite/pages/search",
                    "request": {
                      "$ref": "ServerCustomGsiteGsiteMessagesGSiteSearchRequest",
                      "parameterName": "resource"
                    },
                    "response": {
                      "$ref": "ServerCustomGsiteGsiteMessagesGSiteSearchContentResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              }
            }
          },
          "newsweight": {
            "methods": {
              "list": {
                "httpMethod": "GET",
                "id": "lumsites.custom.newsweight.list",
                "parameters": {
                  "author": {
                    "location": "query",
                    "type": "string"
                  },
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "customerId": {
                    "location": "query",
                    "type": "string"
                  },
                  "excludeType": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "feed": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "instanceIds": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "lang": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "metadata": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "type": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  }
                },
                "path": "custom/newsweight/list",
                "response": {
                  "$ref": "ServerContentContentMessagesContentListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "profile": {
            "methods": {
              "get": {
                "httpMethod": "POST",
                "id": "lumsites.custom.profile.get",
                "path": "custom/profile/get",
                "response": {
                  "$ref": "ServerCustomProfileProfileMessagesProfileResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "stockmarket": {
            "methods": {
              "get": {
                "description": "\n        Register a device\n\n        Returns:\n            a StockMarketResource\n        ",
                "httpMethod": "GET",
                "id": "lumsites.custom.stockmarket.get",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "custom/stockmarket/get",
                "response": {
                  "$ref": "ServerCustomStockMarketStockMarketMessagesStockMarketResource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "customcontenttype": {
        "methods": {
          "delete": {
            "description": "\n        Delete a custom content type.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.customcontenttype.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "customcontenttype/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete a list of custom content types.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.customcontenttype.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "customcontenttype/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a custom content type.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.customcontenttype.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "customcontenttype/get",
            "response": {
              "$ref": "CustomContentType"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "getMulti": {
            "description": "\n        Get a custom content type.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.customcontenttype.getMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uids": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "customcontenttype/getMulti",
            "response": {
              "$ref": "ServerCustomContentTypeCustomContentTypeMessagesCustomContentTypeListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of custom content types.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.customcontenttype.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "includeInstanceSiblings": {
                "location": "query",
                "type": "boolean"
              },
              "instance": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "name": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "customcontenttype/list",
            "response": {
              "$ref": "ServerCustomContentTypeCustomContentTypeMessagesCustomContentTypeListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a custom content type.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.customcontenttype.save",
            "path": "customcontenttype/save",
            "request": {
              "$ref": "CustomContentType",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "CustomContentType"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "children": {
            "methods": {
              "list": {
                "description": "\n        Get a list of a custom content types children.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.customcontenttype.children.list",
                "parameterOrder": [
                  "parentId"
                ],
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "instanceIds": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "parentId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "customcontenttype/children/list",
                "response": {
                  "$ref": "ServerCustomContentTypeCustomContentTypeMessagesCustomContentTypeListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "tag": {
            "methods": {
              "get": {
                "description": "\n        Get a custom content type tag.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.customcontenttype.tag.get",
                "parameterOrder": [
                  "uuid"
                ],
                "parameters": {
                  "uuid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "customcontenttype/tag/get",
                "response": {
                  "$ref": "CustomContentTypeTag"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List a custom content type tags\n        ",
                "httpMethod": "GET",
                "id": "lumsites.customcontenttype.tag.list",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "customcontenttype/tag/list",
                "response": {
                  "$ref": "ServerCustomContentTypeCustomContentTypeMessagesListCustomContentTypeTagResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "customer": {
        "methods": {
          "get": {
            "description": "\n        Get a customer.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.customer.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "customerHost": {
                "location": "query",
                "type": "string"
              },
              "customerSlug": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "id": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "customer/get",
            "response": {
              "$ref": "Customer"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of customers.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.customer.list",
            "parameters": {
              "fields": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "customer/list",
            "request": {
              "$ref": "ServerCustomerCustomerMessagesCustomerListRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerCustomerCustomerMessagesCustomerListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "registrationLink": {
            "description": "\n        Generate a customer registration link.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.customer.registrationLink",
            "parameters": {
              "kind": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "customer/registrationLink",
            "response": {
              "$ref": "ServerCustomerCustomerMessagesRegistrationLinkResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Create or update a customer.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.customer.save",
            "path": "customer/save",
            "request": {
              "$ref": "Customer",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Customer"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "status": {
            "description": "\n        Return a customer status or a customer error.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.customer.status",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "customer": {
                "location": "query",
                "type": "string"
              },
              "token": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "customer/status",
            "response": {
              "$ref": "ServerCustomerCustomerMessagesCustomerStatusResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "admin": {
            "methods": {
              "add": {
                "description": "\n        Add an administrator.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.customer.admin.add",
                "path": "customer/admin/add",
                "request": {
                  "$ref": "ServerCustomerCustomerMessagesAdminRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "delete": {
                "description": "\n        Delete an administrator.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.customer.admin.delete",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "email": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "customer/admin/delete",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        Get a list of administrators.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.customer.admin.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "sortOrder": {
                    "location": "query",
                    "type": "string"
                  },
                  "status": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "customer/admin/list",
                "response": {
                  "$ref": "ServerCustomerCustomerMessagesAdminListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "identityprovider": {
            "methods": {
              "delete": {
                "description": "\n        Delete an identity provider.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.customer.identityprovider.delete",
                "parameters": {
                  "customerId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uuid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "customer/identityprovider/delete",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "get": {
                "description": "\n        Get an identity provider from its uuid.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.customer.identityprovider.get",
                "parameters": {
                  "customerId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uuid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "customer/identityprovider/get",
                "response": {
                  "$ref": "CustomerIdentityProvider"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List the customer's identity providers.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.customer.identityprovider.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "customerId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "customer/identityprovider/list",
                "response": {
                  "$ref": "ServerCustomerCustomerMessagesCustomerIDPListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save an identity provider.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.customer.identityprovider.save",
                "path": "customer/identityprovider/save",
                "request": {
                  "$ref": "CustomerIdentityProvider",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "CustomerIdentityProvider"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "properties": {
            "methods": {
              "save": {
                "description": "\n        Create or update a customer.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.customer.properties.save",
                "path": "customer/properties/save",
                "request": {
                  "$ref": "ServerCustomerCustomerMessagesAdminPropertiesRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Customer"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "directory": {
        "methods": {
          "delete": {
            "description": "\n        Delete a directory.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.directory.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "directory/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete a list of directory.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.directory.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "directory/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a directory.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.directory.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "directory/get",
            "response": {
              "$ref": "Directory"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of directory.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.directory.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "status": {
                "default": "LIVE",
                "enum": [
                  "DRAFT",
                  "REFUSED",
                  "TO_VALIDATE",
                  "LIVE",
                  "ARCHIVE",
                  "DELETED",
                  "PENDING"
                ],
                "enumDescriptions": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "location": "query",
                "type": "string"
              },
              "type": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "directory/list",
            "response": {
              "$ref": "ServerDirectoryDirectoryMessagesDirectoryListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a directory.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.directory.save",
            "path": "directory/save",
            "request": {
              "$ref": "Directory",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Directory"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "entry": {
            "methods": {
              "delete": {
                "description": "\n        Delete a directory entry.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.directory.entry.delete",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "directory/entry/delete",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "deleteMulti": {
                "description": "\n        Delete a list of directory entries.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.directory.entry.deleteMulti",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  }
                },
                "path": "directory/entry/deleteMulti",
                "response": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "get": {
                "description": "\n        Get a directory entry.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.directory.entry.get",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "directory/entry/get",
                "response": {
                  "$ref": "DirectoryEntry"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        Get a list of directory entries.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.directory.entry.list",
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "directory/entry/list",
                "request": {
                  "$ref": "ServerDirectoryDirectoryEntryDirectoryEntryMessagesDirectoryEntryListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerDirectoryDirectoryEntryDirectoryEntryMessagesDirectoryEntryListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "listByExternalKey": {
                "description": "\n        Get a list of directory entries linked to a specific external object.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.directory.entry.listByExternalKey",
                "parameters": {
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "kind": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "directory/entry/listByExternalKey",
                "response": {
                  "$ref": "ServerDirectoryDirectoryEntryDirectoryEntryMessagesDirectoryEntryListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save a directory entry.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.directory.entry.save",
                "path": "directory/entry/save",
                "request": {
                  "$ref": "DirectoryEntry",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "DirectoryEntry"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            },
            "resources": {
              "user": {
                "methods": {
                  "delete": {
                    "description": "\n        Delete a directory entry restricted to the current user.\n        ",
                    "httpMethod": "DELETE",
                    "id": "lumsites.directory.entry.user.delete",
                    "parameters": {
                      "callId": {
                        "location": "query",
                        "type": "string"
                      },
                      "fields": {
                        "location": "query",
                        "type": "string"
                      },
                      "uid": {
                        "location": "query",
                        "required": true,
                        "type": "string"
                      }
                    },
                    "path": "directory/entry/user/delete",
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  },
                  "deleteMulti": {
                    "description": "\n        Delete a list of directory entries restricted to the current user.\n        ",
                    "httpMethod": "DELETE",
                    "id": "lumsites.directory.entry.user.deleteMulti",
                    "parameters": {
                      "callId": {
                        "location": "query",
                        "type": "string"
                      },
                      "fields": {
                        "location": "query",
                        "type": "string"
                      },
                      "uid": {
                        "location": "query",
                        "repeated": true,
                        "type": "string"
                      }
                    },
                    "path": "directory/entry/user/deleteMulti",
                    "response": {
                      "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  },
                  "list": {
                    "description": "\n        Get a list of directory entries restricted to the current user.\n        ",
                    "httpMethod": "GET",
                    "id": "lumsites.directory.entry.user.list",
                    "parameters": {
                      "callId": {
                        "location": "query",
                        "type": "string"
                      },
                      "cursor": {
                        "location": "query",
                        "type": "string"
                      },
                      "directory": {
                        "location": "query",
                        "type": "string"
                      },
                      "maxResults": {
                        "default": "30",
                        "format": "int32",
                        "location": "query",
                        "type": "integer"
                      },
                      "status": {
                        "enum": [
                          "DRAFT",
                          "REFUSED",
                          "TO_VALIDATE",
                          "LIVE",
                          "ARCHIVE",
                          "DELETED",
                          "PENDING"
                        ],
                        "enumDescriptions": [
                          "",
                          "",
                          "",
                          "",
                          "",
                          "",
                          ""
                        ],
                        "location": "query",
                        "type": "string"
                      }
                    },
                    "path": "directory/entry/user/list",
                    "response": {
                      "$ref": "ServerDirectoryDirectoryEntryDirectoryEntryMessagesDirectoryEntryListResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  },
                  "save": {
                    "description": "\n        Create or update a directory entry restricted to the current user.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.directory.entry.user.save",
                    "path": "directory/entry/user/save",
                    "request": {
                      "$ref": "DirectoryEntryProtoIdNameValuesMetadataStatusDirectoryThumbnailCreatedAtUpdatedAtLinkTags",
                      "parameterName": "resource"
                    },
                    "response": {
                      "$ref": "DirectoryEntryProtoIdNameValuesMetadataStatusDirectoryThumbnailCreatedAtUpdatedAtUserLinkTags"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "document": {
        "methods": {
          "get": {
            "description": "\n        *beta* Return one document available to the user.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.document.get",
            "path": "document/get",
            "request": {
              "$ref": "ServerDocumentDocumentMessagesDocumentActionRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Media"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "getMulti": {
            "description": "\n        *beta* Return a list of documents available to the user.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.document.getMulti",
            "path": "document/getMulti",
            "request": {
              "$ref": "ServerDocumentDocumentMessagesDocumentGetMultiRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerDocumentDocumentMessagesDocumentList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        *beta* Return a list of documents available to the user.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.document.list",
            "path": "document/list",
            "request": {
              "$ref": "ServerDocumentDocumentMessagesDocumentListRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerDocumentDocumentMessagesDocumentListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "move": {
            "description": "\n        *beta* Move a document.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.document.move",
            "path": "document/move",
            "request": {
              "$ref": "ServerDocumentDocumentMessagesDocumentMoveRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerDocumentDocumentMessagesEmptyResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "restore": {
            "description": "\n        *beta* Restore a trashed document.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.document.restore",
            "path": "document/restore",
            "request": {
              "$ref": "ServerDocumentDocumentMessagesDocumentActionRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerDocumentDocumentMessagesEmptyResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "trash": {
            "description": "\n        *beta* Trash a document.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.document.trash",
            "path": "document/trash",
            "request": {
              "$ref": "ServerDocumentDocumentMessagesDocumentActionRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerDocumentDocumentMessagesEmptyResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "update": {
            "description": "\n        *beta* Update a document.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.document.update",
            "path": "document/update",
            "request": {
              "$ref": "Media",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Media"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "folder": {
            "methods": {
              "save": {
                "description": "\n        *beta* Create a folder.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.document.folder.save",
                "path": "document/folder/save",
                "request": {
                  "$ref": "ServerDocumentDocumentMessagesCreateFolderRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Media"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "trash": {
            "methods": {
              "empty": {
                "description": "\n        *beta* Empty the trash.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.document.trash.empty",
                "path": "document/trash/empty",
                "request": {
                  "$ref": "ServerDocumentDocumentMessagesEmptyTrashRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerDocumentDocumentMessagesEmptyResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "uploadUrl": {
            "methods": {
              "get": {
                "description": "\n        *beta* Create a new document upload session.\n        This will return an upload URL where the client can send the binary data.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.document.uploadUrl.get",
                "path": "document/uploadUrl/get",
                "request": {
                  "$ref": "ServerDocumentDocumentMessagesDocumentUploadRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerDocumentDocumentMessagesDocumentUploadResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "drive": {
        "methods": {
          "getToken": {
            "description": "\n        Get a token to call the Google Drive API.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.drive.getToken",
            "path": "drive/getToken",
            "response": {
              "$ref": "ServerDriveDriveMessagesTokenResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "files": {
            "methods": {
              "copy": {
                "description": "\n        Copy a Google drive file.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.drive.files.copy",
                "path": "drive/files/copy",
                "request": {
                  "$ref": "ServerDriveDriveMessagesDriveCopyFileRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerDriveDriveMessagesDriveFileResource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "destroy": {
                "description": "\n        Permanently deletes a Google Drive file owned by the user without moving it to the trash.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.drive.files.destroy",
                "path": "drive/files/destroy",
                "request": {
                  "$ref": "ServerDriveDriveMessagesDriveFileIdRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "get": {
                "description": "\n        Get a file's metadata by ID.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.drive.files.get",
                "parameters": {
                  "fileId": {
                    "location": "query",
                    "type": "string"
                  },
                  "kind": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "drive/files/get",
                "response": {
                  "$ref": "ServerDriveDriveMessagesDriveFileResource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "insert": {
                "description": "\n        Create a new Google Drive file.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.drive.files.insert",
                "path": "drive/files/insert",
                "request": {
                  "$ref": "ServerDriveDriveMessagesDriveInsertRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerDriveDriveMessagesDriveFileResource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List files from a specific Google Drive folder.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.drive.files.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "complete": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "fetchAll": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "folderId": {
                    "location": "query",
                    "type": "string"
                  },
                  "folderOnly": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "kind": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int64",
                    "location": "query",
                    "type": "string"
                  },
                  "mimeType": {
                    "location": "query",
                    "type": "string"
                  },
                  "orderBy": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "drive/files/list",
                "response": {
                  "$ref": "ServerDriveDriveMessagesDriveListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "move": {
                "description": "\n        Move a Google drive file in another folder.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.drive.files.move",
                "path": "drive/files/move",
                "request": {
                  "$ref": "ServerDriveDriveMessagesDriveMoveFileRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "search": {
                "description": "\n        Search files from Google Drive.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.drive.files.search",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "folderId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fullText": {
                    "location": "query",
                    "type": "string"
                  },
                  "fullTextQuery": {
                    "location": "query",
                    "type": "string"
                  },
                  "kind": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "mimeType": {
                    "location": "query",
                    "type": "string"
                  },
                  "sharedWithMe": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "starred": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "title": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "drive/files/search",
                "response": {
                  "$ref": "ServerDriveDriveMessagesDriveListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "trash": {
                "description": "\n        Put a Google Drive file in the trash folder.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.drive.files.trash",
                "path": "drive/files/trash",
                "request": {
                  "$ref": "ServerDriveDriveMessagesDriveFileIdRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "untrash": {
                "description": "\n        Restore a Google Drive file from the trash folder.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.drive.files.untrash",
                "path": "drive/files/untrash",
                "request": {
                  "$ref": "ServerDriveDriveMessagesDriveFileIdRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "update": {
                "description": "\n        Update a Google Drive file metadata or content.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.drive.files.update",
                "path": "drive/files/update",
                "request": {
                  "$ref": "ServerDriveDriveMessagesDriveUpdateFileRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerDriveDriveMessagesDriveFileResource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "email": {
        "methods": {
          "send": {
            "description": "\n        Send an email\n        ",
            "httpMethod": "POST",
            "id": "lumsites.email.send",
            "path": "email/send",
            "request": {
              "$ref": "ServerEmailEmailMessagesEmailSendRequest",
              "parameterName": "resource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "eventstream": {
        "resources": {
          "querystring": {
            "methods": {
              "complete": {
                "description": "\n        Return the most popular query strings matching the user query\n\n        Args:\n            request (SearchSuggestionRequest): the request to serve, containing the user's query string, and\n                enough information to track the query string emitter\n\n        Returns:\n            SearchSuggestionResponse: the response, including the most popular query strings matching the user query\n            and the request callId\n        ",
                "httpMethod": "POST",
                "id": "lumsites.eventstream.querystring.complete",
                "path": "eventstream/querystring/complete",
                "request": {
                  "$ref": "ServerEventstreamEventstreamMessagesSearchSuggestionRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerEventstreamEventstreamMessagesSearchSuggestionResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "pertinent": {
                "description": "\n        Register a pertinent result for a given query string\n\n        Args:\n            request (RegisterInterestingSearchResultRequest): tells the result id and type, and the corresponding query\n\n        Returns:\n            response (RegisterRelevantSearchResultResponse)\n        ",
                "httpMethod": "POST",
                "id": "lumsites.eventstream.querystring.pertinent",
                "path": "eventstream/querystring/pertinent",
                "request": {
                  "$ref": "ServerEventstreamEventstreamMessagesRegisterInterestingSearchResultRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerEventstreamEventstreamMessagesRegisterInterestingSearchResultResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "relevant": {
                "description": "\n        Register a relevant result for a given query string\n\n        Args:\n            request (RegisterInterestingSearchResultRequest): tells the result id and type, and the corresponding query\n\n        Returns:\n            response (RegisterRelevantSearchResultResponse)\n        ",
                "httpMethod": "POST",
                "id": "lumsites.eventstream.querystring.relevant",
                "path": "eventstream/querystring/relevant",
                "request": {
                  "$ref": "ServerEventstreamEventstreamMessagesRegisterInterestingSearchResultRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerEventstreamEventstreamMessagesRegisterInterestingSearchResultResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "results": {
                "description": "\n        Return the most popular query strings matching the user query\n\n        Args:\n            request (SearchSuggestionRequest): the request to serve, containing the user's query string, and\n                enough information to track the query string emitter\n\n        Returns:\n            SearchSuggestionResponse: the response, including the most popular query strings matching the user query\n            and the request callId\n        ",
                "httpMethod": "POST",
                "id": "lumsites.eventstream.querystring.results",
                "path": "eventstream/querystring/results",
                "request": {
                  "$ref": "ServerEventstreamEventstreamMessagesSearchSuggestionRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerEventstreamEventstreamMessagesResultsSuggestionResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "favorite": {
        "methods": {
          "delete_having_target": {
            "description": "Delete the favorites with the given target.",
            "httpMethod": "DELETE",
            "id": "lumsites.favorite.delete_having_target",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "kind": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "favorite/having_target",
            "response": {
              "$ref": "ServerFavoriteFavoriteMessagesFavoriteListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "Return the requested favorite.",
            "httpMethod": "GET",
            "id": "lumsites.favorite.get",
            "parameterOrder": [
              "uid"
            ],
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "path",
                "required": true,
                "type": "string"
              }
            },
            "path": "favorite/{uid}",
            "response": {
              "$ref": "Favorite"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list_targets": {
            "description": "List the entities which have been marked as favorite.",
            "httpMethod": "POST",
            "id": "lumsites.favorite.list_targets",
            "path": "favorite/targets",
            "request": {
              "$ref": "ServerFavoriteFavoriteMessagesFavoriteListRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerFavoriteFavoriteMessagesRehydratedFavoriteListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "mark_as_favorite": {
            "description": "Mark as favorite the given entity. Returns a favorite for each owner.",
            "httpMethod": "POST",
            "id": "lumsites.favorite.mark_as_favorite",
            "path": "favorite/mark",
            "request": {
              "$ref": "ServerFavoriteFavoriteMessagesMarkAsFavoriteRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerFavoriteFavoriteMessagesFavoriteListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "feed": {
        "methods": {
          "delete": {
            "description": "\n        Delete a feed.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.feed.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "feed/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Retrieve a feed from its ID\n        ",
            "httpMethod": "GET",
            "id": "lumsites.feed.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "feed/get",
            "response": {
              "$ref": "Feed"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "getMulti": {
            "description": "\n        List feeds by their IDs.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.feed.getMulti",
            "path": "feed/getMulti",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyList",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "FeedCollection"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List feeds.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.feed.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "exceptFeeds": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "hasGroup": {
                "location": "query",
                "type": "boolean"
              },
              "herited": {
                "default": "True",
                "location": "query",
                "type": "boolean"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "query": {
                "location": "query",
                "type": "string"
              },
              "restrictToFeeds": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "type": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "feed/list",
            "response": {
              "$ref": "ServerFeedFeedMessagesFeedListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a feed.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.feed.save",
            "path": "feed/save",
            "request": {
              "$ref": "Feed",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Feed"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "search": {
            "description": "\n        Search feeds.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.feed.search",
            "path": "feed/search",
            "request": {
              "$ref": "ServerFeedFeedMessagesFeedListRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerFeedFeedMessagesFeedListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "synchronize": {
            "description": "\n        Synchronize the Google group members in the feed.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.feed.synchronize",
            "path": "feed/synchronize",
            "request": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKey",
              "parameterName": "resource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "subscribers": {
            "methods": {
              "save": {
                "description": "\n        Save the list of users in a feed.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.feed.subscribers.save",
                "path": "feed/subscribers/save",
                "request": {
                  "$ref": "ServerFeedFeedMessagesFeedSubscribersRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "user": {
            "resources": {
              "subscription": {
                "methods": {
                  "list": {
                    "description": "\n        Get subscription feeds of a user.\n        ",
                    "httpMethod": "GET",
                    "id": "lumsites.feed.user.subscription.list",
                    "parameters": {
                      "callId": {
                        "location": "query",
                        "type": "string"
                      },
                      "fields": {
                        "location": "query",
                        "type": "string"
                      },
                      "userId": {
                        "location": "query",
                        "required": true,
                        "type": "string"
                      }
                    },
                    "path": "feed/user/subscription/list",
                    "response": {
                      "$ref": "ServerFeedFeedMessagesFeedListResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "feedtype": {
        "methods": {
          "delete": {
            "description": "\n        Delete a feed type.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.feedtype.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "feedtype/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List the feed types.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.feedtype.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "customer": {
                "location": "query",
                "type": "string"
              },
              "herited": {
                "default": "True",
                "location": "query",
                "type": "boolean"
              },
              "instance": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "feedtype/list",
            "response": {
              "$ref": "ServerFeedFeedtypeMessagesFeedTypeListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a feed type.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.feedtype.save",
            "path": "feedtype/save",
            "request": {
              "$ref": "FeedType",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "FeedType"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "file": {
        "methods": {
          "uploadUrl": {
            "description": "\n        Generate an url to use for file uploading\n        ",
            "httpMethod": "GET",
            "id": "lumsites.file.uploadUrl",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "success": {
                "default": "/upload",
                "location": "query",
                "type": "string"
              }
            },
            "path": "file/uploadUrl",
            "response": {
              "$ref": "ServerFileFileMessagesGenerateUrlResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "gamification": {
        "resources": {
          "goal": {
            "methods": {
              "deleteMulti": {
                "description": "\n        Delete a list of goals.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.gamification.goal.deleteMulti",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  }
                },
                "path": "gamification/goal/deleteMulti",
                "response": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "get": {
                "description": "\n        Get a goal.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.gamification.goal.get",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/goal/get/{uid}",
                "response": {
                  "$ref": "Goal"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List Goals.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.goal.list",
                "path": "gamification/goal/list",
                "request": {
                  "$ref": "ServerGamificationGoalGoalMessagesGoalListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerGamificationGoalGoalMessagesGoalListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save a Goal.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.goal.save",
                "path": "gamification/goal/save",
                "request": {
                  "$ref": "Goal",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Goal"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "leaderboard": {
            "methods": {
              "get": {
                "description": "\n        Get a leaderboard.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.gamification.leaderboard.get",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxEntries": {
                    "default": "10",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/leaderboard/get/{uid}",
                "response": {
                  "$ref": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "getByScope": {
                "description": "\n        Get a leaderboard by scope.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.gamification.leaderboard.getByScope",
                "parameterOrder": [
                  "customerId",
                  "instanceId"
                ],
                "parameters": {
                  "allTime": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "customerId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "instanceId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "maxEntries": {
                    "default": "10",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "otherPoints": {
                    "default": "True",
                    "location": "query",
                    "type": "boolean"
                  },
                  "scopeId": {
                    "location": "query",
                    "type": "string"
                  },
                  "scopeKind": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "gamification/leaderboard/getByScope",
                "response": {
                  "$ref": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardByScopeResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List Leaderboards.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.leaderboard.list",
                "path": "gamification/leaderboard/list",
                "request": {
                  "$ref": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            },
            "resources": {
              "season": {
                "methods": {
                  "get": {
                    "description": "\n        Get a season.\n        ",
                    "httpMethod": "GET",
                    "id": "lumsites.gamification.leaderboard.season.get",
                    "parameterOrder": [
                      "uid"
                    ],
                    "parameters": {
                      "fields": {
                        "location": "query",
                        "type": "string"
                      },
                      "uid": {
                        "location": "path",
                        "type": "string"
                      }
                    },
                    "path": "gamification/leaderboard/season/get/{uid}",
                    "response": {
                      "$ref": "LeaderboardSeason"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  },
                  "list": {
                    "description": "\n        List Leaderboards seasons.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.gamification.leaderboard.season.list",
                    "path": "gamification/leaderboard/season/list",
                    "request": {
                      "$ref": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardSeasonListRequest",
                      "parameterName": "resource"
                    },
                    "response": {
                      "$ref": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardSeasonListResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  },
                  "save": {
                    "description": "\n        Save a LeaderboardSeason.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.gamification.leaderboard.season.save",
                    "path": "gamification/leaderboard/season/save",
                    "request": {
                      "$ref": "LeaderboardSeason",
                      "parameterName": "resource"
                    },
                    "response": {
                      "$ref": "LeaderboardSeason"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              }
            }
          },
          "quest": {
            "methods": {
              "delete": {
                "description": "\n        Delete a Quest.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.gamification.quest.delete",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/quest/delete/{uid}",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "deleteMulti": {
                "description": "\n        Delete a list of quests.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.gamification.quest.deleteMulti",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  }
                },
                "path": "gamification/quest/deleteMulti",
                "response": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "end": {
                "description": "\n        End a Quest.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.quest.end",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/quest/end/{uid}",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "endMulti": {
                "description": "\n        Validate a list of quests.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.quest.endMulti",
                "path": "gamification/quest/endMulti",
                "request": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKeyList",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "get": {
                "description": "\n        Get a quest.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.gamification.quest.get",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/quest/get/{uid}",
                "response": {
                  "$ref": "Quest"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List Quests.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.quest.list",
                "path": "gamification/quest/list",
                "request": {
                  "$ref": "ServerGamificationQuestQuestMessagesQuestListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerGamificationQuestQuestMessagesQuestListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "mine": {
                "description": "\n        List my Quests: completed, in progress and available quests.\n\n        TODO: implements pagination, maybe with a list of cursor and a list of more\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.quest.mine",
                "path": "gamification/quest/mine",
                "request": {
                  "$ref": "ServerGamificationQuestQuestMessagesQuestMineRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerGamificationQuestQuestMessagesQuestListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save a Quest.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.quest.save",
                "path": "gamification/quest/save",
                "request": {
                  "$ref": "Quest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Quest"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "validate": {
                "description": "\n        Validate a quest.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.quest.validate",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/quest/validate/{uid}",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "validateMulti": {
                "description": "\n        Validate a list of quests.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.quest.validateMulti",
                "path": "gamification/quest/validateMulti",
                "request": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKeyList",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "reward": {
            "methods": {
              "delete": {
                "description": "\n        Delete a reward.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.gamification.reward.delete",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/reward/delete/{uid}",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "deleteMulti": {
                "description": "\n        Delete a list of rewards.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.gamification.reward.deleteMulti",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  }
                },
                "path": "gamification/reward/deleteMulti",
                "response": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "get": {
                "description": "\n        Get a reward.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.gamification.reward.get",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/reward/get/{uid}",
                "response": {
                  "$ref": "Reward"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List Rewards.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.reward.list",
                "path": "gamification/reward/list",
                "request": {
                  "$ref": "ServerGamificationRewardRewardMessagesRewardListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerGamificationRewardRewardMessagesRewardListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save a Reward.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.reward.save",
                "path": "gamification/reward/save",
                "request": {
                  "$ref": "Reward",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Reward"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "usergoalresult": {
            "methods": {
              "delete": {
                "description": "\n        Delete a UserGoalResult.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.gamification.usergoalresult.delete",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/usergoalresult/delete/{uid}",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "deleteMulti": {
                "description": "\n        Delete a list of quests.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.gamification.usergoalresult.deleteMulti",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  }
                },
                "path": "gamification/usergoalresult/deleteMulti",
                "response": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List Quests.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.usergoalresult.list",
                "path": "gamification/usergoalresult/list",
                "request": {
                  "$ref": "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save a UserGoalResult.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.usergoalresult.save",
                "path": "gamification/usergoalresult/save",
                "request": {
                  "$ref": "UserGoalResult",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "UserGoalResult"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "saveMulti": {
                "description": "\n        Save multiple UserGoalResult.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.usergoalresult.saveMulti",
                "path": "gamification/usergoalresult/saveMulti",
                "request": {
                  "$ref": "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultSaveMultiRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            },
            "resources": {
              "save": {
                "methods": {
                  "points": {
                    "description": "\n        Add points to multiple users.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.gamification.usergoalresult.save.points",
                    "path": "gamification/usergoalresult/save/points",
                    "request": {
                      "$ref": "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultPointsRequest",
                      "parameterName": "resource"
                    },
                    "response": {
                      "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              }
            }
          },
          "userreward": {
            "methods": {
              "delete": {
                "description": "\n        Delete a UserReward.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.gamification.userreward.delete",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/userreward/delete/{uid}",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "deleteMulti": {
                "description": "\n        Save multiple user rewards to multiple users.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.gamification.userreward.deleteMulti",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "rewardIds": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "userIds": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  }
                },
                "path": "gamification/userreward/deleteMulti",
                "response": {
                  "$ref": "ServerGamificationUserRewardUserRewardMessagesDatastoreKeyPairWithErrorList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "display": {
                "description": "\n        Display a hidden UserReward.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.userreward.display",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/userreward/display/{uid}",
                "response": {
                  "$ref": "UserReward"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "hide": {
                "description": "\n        Hide a visible UserReward.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.userreward.hide",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/userreward/hide/{uid}",
                "response": {
                  "$ref": "UserReward"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List UserRewards.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.userreward.list",
                "path": "gamification/userreward/list",
                "request": {
                  "$ref": "ServerGamificationUserRewardUserRewardMessagesUserRewardListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerGamificationUserRewardUserRewardMessagesUserRewardListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save a UserReward.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.userreward.save",
                "path": "gamification/userreward/save",
                "request": {
                  "$ref": "UserReward",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "UserReward"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "saveMulti": {
                "description": "\n        Save multiple user rewards to multiple users.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.userreward.saveMulti",
                "path": "gamification/userreward/saveMulti",
                "request": {
                  "$ref": "ServerGamificationUserRewardUserRewardMessagesUserRewardMultiRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerGamificationUserRewardUserRewardMessagesDatastoreKeyPairWithErrorList"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "showOff": {
                "description": "\n        Make a UserReward as show off.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.gamification.userreward.showOff",
                "parameterOrder": [
                  "uid"
                ],
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "path",
                    "type": "string"
                  }
                },
                "path": "gamification/userreward/showOff/{uid}",
                "response": {
                  "$ref": "UserReward"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            },
            "resources": {
              "showOff": {
                "methods": {
                  "delete": {
                    "description": "\n        Remove the reward the user is showing off.\n        ",
                    "httpMethod": "DELETE",
                    "id": "lumsites.gamification.userreward.showOff.delete",
                    "parameterOrder": [
                      "uid"
                    ],
                    "parameters": {
                      "fields": {
                        "location": "query",
                        "type": "string"
                      },
                      "uid": {
                        "location": "path",
                        "type": "string"
                      }
                    },
                    "path": "gamification/userreward/showOff/{uid}",
                    "response": {
                      "$ref": "UserReward"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "gmail": {
        "methods": {
          "list": {
            "description": "\n        List emails.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.gmail.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "query": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "gmail/list",
            "response": {
              "$ref": "ServerGmailGmailMessagesGmailListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "header": {
        "methods": {
          "delete": {
            "description": "\n        Delete a header.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.header.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "header/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a header by ID.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.header.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "header/get",
            "response": {
              "$ref": "Header"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List headers.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.header.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "name": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "header/list",
            "response": {
              "$ref": "ServerHeaderHeaderMessagesHeaderListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a header.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.header.save",
            "path": "header/save",
            "request": {
              "$ref": "Header",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Header"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "instance": {
        "methods": {
          "copy": {
            "description": "\n        Duplicate an instance.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.instance.copy",
            "path": "instance/copy",
            "request": {
              "$ref": "ServerInstanceInstanceMessagesInstanceCopyRequest",
              "parameterName": "resource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "delete": {
            "description": "\n        Delete an instance.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.instance.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "instance/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete a list of instances.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.instance.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "instance/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get an instance.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.instance.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "customerHost": {
                "location": "query",
                "type": "string"
              },
              "customerSlug": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "slug": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "instance/get",
            "response": {
              "$ref": "Instance"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of instances.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.instance.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "combinedMetadata.metadata": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "considerUserIdentity": {
                "default": "True",
                "location": "query",
                "type": "boolean"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "emptyParent": {
                "location": "query",
                "type": "boolean"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "ids": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "name": {
                "location": "query",
                "type": "string"
              },
              "parent": {
                "location": "query",
                "type": "string"
              },
              "sortOrder": {
                "location": "query",
                "type": "string"
              },
              "status": {
                "enum": [
                  "DRAFT",
                  "REFUSED",
                  "TO_VALIDATE",
                  "LIVE",
                  "ARCHIVE",
                  "DELETED",
                  "PENDING"
                ],
                "enumDescriptions": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "location": "query",
                "type": "string"
              },
              "userFavoritesOnly": {
                "location": "query",
                "type": "boolean"
              }
            },
            "path": "instance/list",
            "response": {
              "$ref": "ServerInstanceInstanceMessagesInstanceListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save an instance.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.instance.save",
            "path": "instance/save",
            "request": {
              "$ref": "Instance",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Instance"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "search": {
            "description": "\n        Get a list of instances.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.instance.search",
            "path": "instance/search",
            "request": {
              "$ref": "ServerInstanceInstanceMessagesInstanceListRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerInstanceInstanceMessagesInstanceListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "admin": {
            "methods": {
              "add": {
                "description": "\n        Add an instance administrator.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.instance.admin.add",
                "path": "instance/admin/add",
                "request": {
                  "$ref": "ServerInstanceInstanceMessagesInstanceAdminRequest",
                  "parameterName": "resource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "delete": {
                "description": "\n        Delete an instance administrator.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.instance.admin.delete",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "email": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "instance/admin/delete",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        Get a list of instance administrators.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.instance.admin.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "status": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "instance/admin/list",
                "response": {
                  "$ref": "ServerInstanceInstanceMessagesInstanceAdminListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "metadata": {
            "methods": {
              "list": {
                "description": "\n        List the metadata for a given instance.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.instance.metadata.list",
                "path": "instance/metadata/list",
                "request": {
                  "$ref": "ServerInstanceInstanceMessagesInstanceListMetadataRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerInstanceInstanceMessagesInstanceListMetadataResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "script": {
            "methods": {
              "get": {
                "description": "\n        Get an instance script.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.instance.script.get",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "content": {
                    "location": "query",
                    "type": "string"
                  },
                  "footer": {
                    "location": "query",
                    "type": "string"
                  },
                  "kind": {
                    "default": "custom",
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "instance/script/get",
                "response": {
                  "$ref": "ServerInstanceInstanceMessagesInstanceScriptRequest"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save an instance script.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.instance.script.save",
                "path": "instance/script/save",
                "request": {
                  "$ref": "ServerInstanceInstanceMessagesInstanceScriptRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerInstanceInstanceMessagesInstanceScriptRequest"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "siblings": {
            "methods": {
              "list": {
                "description": "\n        Get a list of pairing instances (siblings).\n        ",
                "httpMethod": "GET",
                "id": "lumsites.instance.siblings.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "instanceId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "instance/siblings/list",
                "response": {
                  "$ref": "ServerInstanceInstanceMessagesInstanceSiblingsListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "lumwork": {
        "resources": {
          "document": {
            "methods": {
              "search": {
                "description": "\n        Search documents from LumWork.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.lumwork.document.search",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int64",
                    "location": "query",
                    "type": "string"
                  },
                  "offset": {
                    "format": "int64",
                    "location": "query",
                    "type": "string"
                  },
                  "searchPattern": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "lumwork/document/search",
                "response": {
                  "$ref": "ServerLumworkLumworkMessagesDocumentListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "space": {
            "methods": {
              "get": {
                "description": "\n        Get a LumWork space.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.lumwork.space.get",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "lumwork/space/get",
                "response": {
                  "$ref": "ServerLumworkLumworkMessagesSpaceResource"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List LumWork spaces.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.lumwork.space.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int64",
                    "location": "query",
                    "type": "string"
                  },
                  "more": {
                    "location": "query",
                    "required": true,
                    "type": "boolean"
                  }
                },
                "path": "lumwork/space/list",
                "response": {
                  "$ref": "ServerLumworkLumworkMessagesSpaceListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "media": {
        "methods": {
          "delete": {
            "description": "\n        Delete a media. (deprecated)\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.media.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "media/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete multiple media. (deprecated)\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.media.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "media/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "folder": {
            "description": "\n        *deprecated* Create (or update) a folder.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.media.folder",
            "path": "media/folder",
            "request": {
              "$ref": "Folder",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Folder"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a media.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.media.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "media/get",
            "response": {
              "$ref": "Media"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of media.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.media.list",
            "parameters": {
              "attached": {
                "location": "query",
                "type": "boolean"
              },
              "callId": {
                "location": "query",
                "type": "string"
              },
              "contentKey": {
                "location": "query",
                "type": "string"
              },
              "currentInstance": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "customer": {
                "location": "query",
                "type": "string"
              },
              "ext": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "ids": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "instance": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "lang": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "mimeType": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "name": {
                "location": "query",
                "type": "string"
              },
              "parentFolder": {
                "location": "query",
                "type": "string"
              },
              "query": {
                "location": "query",
                "type": "string"
              },
              "queryType": {
                "location": "query",
                "type": "string"
              },
              "recursive": {
                "location": "query",
                "type": "boolean"
              },
              "sortOrder": {
                "location": "query",
                "type": "string"
              },
              "tags": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "trashed": {
                "location": "query",
                "type": "boolean"
              },
              "type": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "media/list",
            "response": {
              "$ref": "ServerMediaMediaMessagesMediaListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a media.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.media.save",
            "path": "media/save",
            "request": {
              "$ref": "Media",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Media"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "saveMulti": {
            "description": "\n        Save multiple media.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.media.saveMulti",
            "path": "media/saveMulti",
            "request": {
              "$ref": "ServerMediaMediaMessagesSaveMediaMultiRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerMediaMediaMessagesMediaListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "untrash": {
            "description": "\n        Restore the given items (given that they have been trashed at some point).\n        ",
            "httpMethod": "POST",
            "id": "lumsites.media.untrash",
            "path": "media/untrash",
            "request": {
              "$ref": "ServerMediaMediaMessagesFileSystemItemsKeysRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerMediaMediaMessagesItemsListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "folder": {
            "methods": {
              "list": {
                "description": "\n        List all folder matching the request.\n\n        Args:\n            request (FolderListRequest): The request.\n\n        Returns:\n            FolderListResponse: The response.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.media.folder.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "currentInstance": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "customer": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "ids": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "instance": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "lang": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "name": {
                    "location": "query",
                    "type": "string"
                  },
                  "parentFolder": {
                    "location": "query",
                    "type": "string"
                  },
                  "query": {
                    "location": "query",
                    "type": "string"
                  },
                  "queryType": {
                    "location": "query",
                    "type": "string"
                  },
                  "recursive": {
                    "location": "query",
                    "type": "boolean"
                  },
                  "sortOrder": {
                    "location": "query",
                    "type": "string"
                  },
                  "tags": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "trashed": {
                    "location": "query",
                    "type": "boolean"
                  }
                },
                "path": "media/folder/list",
                "response": {
                  "$ref": "ServerMediaMediaMessagesFolderListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "move": {
                "description": "\n        Move a folder.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.media.folder.move",
                "path": "media/folder/move",
                "request": {
                  "$ref": "ServerMediaMediaMessagesFileSystemItemMoveRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Folder"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Create (or update) a folder.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.media.folder.save",
                "path": "media/folder/save",
                "request": {
                  "$ref": "Folder",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Folder"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "fsitems": {
            "methods": {
              "delete": {
                "description": "\n        Delete one or more filesystem item(s).\n\n        Args:\n            request (FileSystemItemsDeleteRequest): The request.\n\n        Returns;\n            ErrorsResponse: The list of encountered errors.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.media.fsitems.delete",
                "path": "media/fsitems/delete",
                "request": {
                  "$ref": "ServerMediaMediaMessagesFileSystemItemsDeleteRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerMediaMediaMessagesErrorsResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List all file systems items matching the request.\n\n        Args:\n            request (FileSystemItemsListRequest): The request.\n\n        Returns:\n            FileSystemItemsListResponse: The response.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.media.fsitems.list",
                "path": "media/fsitems/list",
                "request": {
                  "$ref": "ServerMediaMediaMessagesFileSystemItemsListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerMediaMediaMessagesFileSystemItemsListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "media": {
            "methods": {
              "move": {
                "description": "\n        Move a media.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.media.media.move",
                "path": "media/media/move",
                "request": {
                  "$ref": "ServerMediaMediaMessagesFileSystemItemMoveRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Media"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "trashbin": {
            "methods": {
              "empty": {
                "description": "\n        Empty the trash bin.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.media.trashbin.empty",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "instance": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  }
                },
                "path": "media/trash/empty",
                "response": {
                  "$ref": "ServerMediaMediaMessagesErrorsResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "metadata": {
        "methods": {
          "delete": {
            "description": "\n        Delete a metadata.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.metadata.delete",
            "parameters": {
              "instance": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "metadata/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a metadata.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.metadata.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "metadata/get",
            "response": {
              "$ref": "Metadata"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of metadata.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.metadata.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "emptyParent": {
                "location": "query",
                "type": "boolean"
              },
              "familyId": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "name": {
                "location": "query",
                "type": "string"
              },
              "parent": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "metadata/list",
            "response": {
              "$ref": "ServerMetadataMetadataMessagesMetadataListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a metadata.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.metadata.save",
            "path": "metadata/save",
            "request": {
              "$ref": "Metadata",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Metadata"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "saveMulti": {
            "description": "\n        Save a list of metadata.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.metadata.saveMulti",
            "path": "metadata/saveMulti",
            "request": {
              "$ref": "ServerMetadataMetadataMessagesSaveMetadataMultiRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerMetadataMetadataMessagesMetadataListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "misc": {
        "methods": {
          "metric": {
            "description": "\n        Log a metric in stackdriver\n        ",
            "httpMethod": "POST",
            "id": "lumsites.misc.metric",
            "path": "misc/metric",
            "request": {
              "$ref": "ServerMiscMiscMessagesMetricRequest",
              "parameterName": "resource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "urlinfo": {
            "description": "\n        Fetch website info\n        ",
            "httpMethod": "GET",
            "id": "lumsites.misc.urlinfo",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "url": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "misc/urlinfo",
            "response": {
              "$ref": "ServerMiscMiscMessagesUrlinfoResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "mlearning": {
        "resources": {
          "language": {
            "methods": {
              "detect": {
                "httpMethod": "POST",
                "id": "lumsites.mlearning.language.detect",
                "path": "mlearning/language/detect",
                "request": {
                  "$ref": "ServerMlearningMlearningMessagesLanguageDetectionRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerMlearningMlearningMessagesLanguageDetectionResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "prediction": {
            "methods": {
              "tags": {
                "httpMethod": "POST",
                "id": "lumsites.mlearning.prediction.tags",
                "parameters": {
                  "contentType": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "mlearning/prediction/tags",
                "request": {
                  "$ref": "ServerMlearningMlearningMessagesTagsPredictionRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerMlearningMlearningMessagesTagsPredictionResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "newsletter": {
        "methods": {
          "delete": {
            "description": "\n        Delete a newsletter.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.newsletter.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "newsletter/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete a list of newsletters.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.newsletter.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "newsletter/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a newsletter by ID.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.newsletter.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "newsletter/get",
            "response": {
              "$ref": "Newsletter"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List newsletters.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.newsletter.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "customer": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "name": {
                "location": "query",
                "type": "string"
              },
              "sortOrder": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "newsletter/list",
            "response": {
              "$ref": "ServerNewsletterNewsletterMessagesNewsletterListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a newsletter.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.newsletter.save",
            "path": "newsletter/save",
            "request": {
              "$ref": "Newsletter",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Newsletter"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "send": {
            "description": "\n        Send a newsletter.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.newsletter.send",
            "path": "newsletter/send",
            "request": {
              "$ref": "ServerNewsletterNewsletterMessagesSendNewsletterRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerNewsletterNewsletterMessagesSendNewsletterResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "notification": {
        "methods": {
          "get": {
            "description": "\n        Get a notification by ID.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.notification.get",
            "parameters": {
              "functionalInnerId": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "notification/get",
            "response": {
              "$ref": "ServerNotificationNotificationMessagesNotificationGroupResource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List notifications of the user.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.notification.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              }
            },
            "path": "notification/list",
            "request": {
              "$ref": "ServerNotificationNotificationMessagesNotificationListRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerNotificationNotificationMessagesNotificationListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "send": {
            "description": "\n        Create a notification.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.notification.send",
            "path": "notification/send",
            "request": {
              "$ref": "ServerNotificationNotificationMessagesSendNotificationRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerNotificationNotificationMessagesNotificationListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "setAllAsRead": {
            "description": "\n        Mark all notifications as read by the user.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.notification.setAllAsRead",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "notification/setAllAsRead",
            "request": {
              "$ref": "ServerNotificationNotificationMessagesSetAllNotificationsReadRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerNotificationNotificationMessagesNotificationIdsResource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "setRead": {
            "description": "\n        Mark a notification as read by the user.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.notification.setRead",
            "path": "notification/setRead",
            "request": {
              "$ref": "ServerNotificationNotificationMessagesSetNotificationReadRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerNotificationNotificationMessagesNotificationGroupResource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "onedrive": {
        "resources": {
          "site": {
            "methods": {
              "list": {
                "description": "\n        List onedrive sites.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.onedrive.site.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "format": "int64",
                    "location": "query",
                    "type": "string"
                  },
                  "search": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "onedrive/site/list",
                "response": {
                  "$ref": "ServerDocumentOnedriveMessagesOneDriveSiteListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            },
            "resources": {
              "drive": {
                "methods": {
                  "list": {
                    "description": "\n        List onedrive site drives.\n        ",
                    "httpMethod": "GET",
                    "id": "lumsites.onedrive.site.drive.list",
                    "parameters": {
                      "callId": {
                        "location": "query",
                        "type": "string"
                      },
                      "cursor": {
                        "location": "query",
                        "type": "string"
                      },
                      "maxResults": {
                        "format": "int64",
                        "location": "query",
                        "type": "string"
                      },
                      "siteId": {
                        "location": "query",
                        "required": true,
                        "type": "string"
                      }
                    },
                    "path": "onedrive/site/drive/list",
                    "response": {
                      "$ref": "ServerDocumentOnedriveMessagesOneDriveSiteDriveListResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "permission": {
        "resources": {
          "content": {
            "methods": {
              "who": {
                "description": "\n        Check who can access to a content.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.permission.content.who",
                "parameters": {
                  "action": {
                    "enum": [
                      "PAGE_READ",
                      "PAGE_EDIT",
                      "PAGE_DELETE",
                      "NEWS_READ",
                      "NEWS_EDIT",
                      "NEWS_DELETE",
                      "PAGE_ARCHIVE",
                      "PAGE_PUBLISH",
                      "NEWS_PUBLISH",
                      "METADATA_EDIT",
                      "METADATA_DELETE",
                      "ROLE_READ",
                      "ROLE_EDIT",
                      "ROLE_DELETE",
                      "NEWS_LIST_READ",
                      "NEWS_LIST_EDIT",
                      "NEWS_LIST_DELETE",
                      "DIRECTORY_READ",
                      "DIRECTORY_EDIT",
                      "DIRECTORY_DELETE",
                      "MENU_READ",
                      "MENU_EDIT",
                      "MENU_DELETE",
                      "TEMPLATE_READ",
                      "TEMPLATE_EDIT",
                      "TEMPLATE_DELETE",
                      "INSTANCE_EDIT",
                      "INSTANCE_DELETE",
                      "FEED_EDIT",
                      "FEED_DELETE",
                      "MEDIA_EDIT",
                      "MEDIA_DELETE",
                      "USER_READ",
                      "USER_EDIT",
                      "USER_DELETE",
                      "RESELLER_READ",
                      "RESELLER_EDIT",
                      "POST_EDIT",
                      "GROUP_EDIT",
                      "DIRECTORY_ENTRY_FAVORITES_EDIT",
                      "NEWSLETTER_READ",
                      "NEWSLETTER_EDIT",
                      "NEWSLETTER_DELETE",
                      "CUSTOM_CONTENT_TYPE_EDIT",
                      "CUSTOM_CONTENT_TYPE_DELETE",
                      "CUSTOM_CONTENT_READ",
                      "CUSTOM_CONTENT_PUBLISH",
                      "CUSTOM_CONTENT_EDIT",
                      "CUSTOM_CONTENT_DELETE",
                      "CUSTOM_LIST_READ",
                      "CUSTOM_LIST_EDIT",
                      "CUSTOM_LIST_DELETE",
                      "CUSTOM_LIST_PUBLISH",
                      "COMMUNITY_READ",
                      "COMMUNITY_EDIT",
                      "COMMUNITY_DELETE",
                      "USER_DIRECTORY_READ",
                      "USER_DIRECTORY_EDIT",
                      "USER_DIRECTORY_DELETE",
                      "CUSTOM_READ",
                      "CUSTOM_EDIT",
                      "CUSTOM_DELETE",
                      "TUTORIAL_READ",
                      "TUTORIAL_EDIT",
                      "TUTORIAL_DELETE",
                      "POST_READ",
                      "POST_DELETE",
                      "CUSTOM_CONTENT_ARCHIVE",
                      "MENU_DROP",
                      "STYLE_READ",
                      "STYLE_EDIT",
                      "STYLE_DELETE",
                      "GLOBAL_WIDGET_EDIT",
                      "TARGET_EDIT",
                      "DIRECTORY_ENTRY_READ",
                      "DIRECTORY_ENTRY_EDIT",
                      "DIRECTORY_ENTRY_DELETE",
                      "COMMUNITY_PUBLISH",
                      "ANALYTICS_READ",
                      "GAMIFICATION_ADMIN"
                    ],
                    "enumDescriptions": [
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      ""
                    ],
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "contentId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "permission/content/who",
                "response": {
                  "$ref": "ServerPermissionPermissionMessagesWhoCanAccessContentResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "why": {
                "description": "\n        Check why a user can access to a content.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.permission.content.why",
                "parameters": {
                  "action": {
                    "enum": [
                      "PAGE_READ",
                      "PAGE_EDIT",
                      "PAGE_DELETE",
                      "NEWS_READ",
                      "NEWS_EDIT",
                      "NEWS_DELETE",
                      "PAGE_ARCHIVE",
                      "PAGE_PUBLISH",
                      "NEWS_PUBLISH",
                      "METADATA_EDIT",
                      "METADATA_DELETE",
                      "ROLE_READ",
                      "ROLE_EDIT",
                      "ROLE_DELETE",
                      "NEWS_LIST_READ",
                      "NEWS_LIST_EDIT",
                      "NEWS_LIST_DELETE",
                      "DIRECTORY_READ",
                      "DIRECTORY_EDIT",
                      "DIRECTORY_DELETE",
                      "MENU_READ",
                      "MENU_EDIT",
                      "MENU_DELETE",
                      "TEMPLATE_READ",
                      "TEMPLATE_EDIT",
                      "TEMPLATE_DELETE",
                      "INSTANCE_EDIT",
                      "INSTANCE_DELETE",
                      "FEED_EDIT",
                      "FEED_DELETE",
                      "MEDIA_EDIT",
                      "MEDIA_DELETE",
                      "USER_READ",
                      "USER_EDIT",
                      "USER_DELETE",
                      "RESELLER_READ",
                      "RESELLER_EDIT",
                      "POST_EDIT",
                      "GROUP_EDIT",
                      "DIRECTORY_ENTRY_FAVORITES_EDIT",
                      "NEWSLETTER_READ",
                      "NEWSLETTER_EDIT",
                      "NEWSLETTER_DELETE",
                      "CUSTOM_CONTENT_TYPE_EDIT",
                      "CUSTOM_CONTENT_TYPE_DELETE",
                      "CUSTOM_CONTENT_READ",
                      "CUSTOM_CONTENT_PUBLISH",
                      "CUSTOM_CONTENT_EDIT",
                      "CUSTOM_CONTENT_DELETE",
                      "CUSTOM_LIST_READ",
                      "CUSTOM_LIST_EDIT",
                      "CUSTOM_LIST_DELETE",
                      "CUSTOM_LIST_PUBLISH",
                      "COMMUNITY_READ",
                      "COMMUNITY_EDIT",
                      "COMMUNITY_DELETE",
                      "USER_DIRECTORY_READ",
                      "USER_DIRECTORY_EDIT",
                      "USER_DIRECTORY_DELETE",
                      "CUSTOM_READ",
                      "CUSTOM_EDIT",
                      "CUSTOM_DELETE",
                      "TUTORIAL_READ",
                      "TUTORIAL_EDIT",
                      "TUTORIAL_DELETE",
                      "POST_READ",
                      "POST_DELETE",
                      "CUSTOM_CONTENT_ARCHIVE",
                      "MENU_DROP",
                      "STYLE_READ",
                      "STYLE_EDIT",
                      "STYLE_DELETE",
                      "GLOBAL_WIDGET_EDIT",
                      "TARGET_EDIT",
                      "DIRECTORY_ENTRY_READ",
                      "DIRECTORY_ENTRY_EDIT",
                      "DIRECTORY_ENTRY_DELETE",
                      "COMMUNITY_PUBLISH",
                      "ANALYTICS_READ",
                      "GAMIFICATION_ADMIN"
                    ],
                    "enumDescriptions": [
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      ""
                    ],
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "contentId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "userId": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "permission/content/why",
                "response": {
                  "$ref": "ServerPermissionPermissionMessagesWhyCanUserAccessContentResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "realtime": {
        "methods": {
          "getToken": {
            "description": "\n        Check who can access to a content.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.realtime.getToken",
            "path": "realtime/getToken",
            "response": {
              "$ref": "ServerRealtimeRealtimeMessagesGetTokenResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "reseller": {
        "methods": {
          "list": {
            "description": "\n        List all resellers.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.reseller.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "lang": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "query": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "reseller/list",
            "response": {
              "$ref": "ServerResellerResellerMessagesResellerListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "customer": {
            "methods": {
              "get": {
                "description": "\n        Get a customer managed by a reseller\n\n        Args:\n            request: the customer id\n\n        Returns:\n            the customer, if allowed.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.reseller.customer.get",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "reseller/customer/get",
                "response": {
                  "$ref": "CustomerProtoIdUidNameDomainAccountStatusCustomerIdSlugSynchronizedHostsExternalDirectoryGoogleCustomerNbUsersLicenseNumberLicenseExpirationDateResellerIsResellerResellerDataThemesConfigurationsOverridesSsoEnabledHttpsOnlyLicenseTypeTrustedTesterFeaturesExcludedFeaturesCreatedAtMobileInstanceKeysMobileCustomizationMobileSearchInstanceKeysContactFirstNameContactLastNameContactEmailContactPhoneCountrySizeHasGoogleSsoIdentityProvidersLoginProviderOnly"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List all customers managed by a reseller, if user is allowed\n\n        Args:\n            request: request parameters (cursor and nb results)\n\n        Returns:\n            a list of customers, a cursor and a boolean to know if there are more results to load.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.reseller.customer.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "domain": {
                    "location": "query",
                    "type": "string"
                  },
                  "lang": {
                    "location": "query",
                    "type": "string"
                  },
                  "licenseType": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "name": {
                    "location": "query",
                    "type": "string"
                  },
                  "status": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "reseller/customer/list",
                "response": {
                  "$ref": "ServerResellerResellerMessagesResellerCustomerListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Update customer parameters, is user is a reseller and is allowed to edit customer.\n\n        Args:\n            request: the customer settings\n\n        Returns:\n            the saved customer parameters\n        ",
                "httpMethod": "POST",
                "id": "lumsites.reseller.customer.save",
                "path": "reseller/customer/save",
                "request": {
                  "$ref": "CustomerProtoIdUidNameDomainAccountStatusCustomerIdSlugSynchronizedHostsExternalDirectoryGoogleCustomerNbUsersLicenseNumberLicenseExpirationDateResellerIsResellerResellerDataThemesConfigurationsOverridesSsoEnabledHttpsOnlyLicenseTypeTrustedTesterFeaturesExcludedFeaturesCreatedAtMobileInstanceKeysMobileCustomizationMobileSearchInstanceKeysContactFirstNameContactLastNameContactEmailContactPhoneCountrySizeHasGoogleSsoIdentityProvidersLoginProviderOnly",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "CustomerProtoIdUidNameDomainAccountStatusCustomerIdSlugSynchronizedHostsExternalDirectoryGoogleCustomerNbUsersLicenseNumberLicenseExpirationDateResellerIsResellerResellerDataThemesConfigurationsOverridesSsoEnabledHttpsOnlyLicenseTypeTrustedTesterFeaturesExcludedFeaturesCreatedAtMobileInstanceKeysMobileCustomizationMobileSearchInstanceKeysContactFirstNameContactLastNameContactEmailContactPhoneCountrySizeHasGoogleSsoIdentityProvidersLoginProviderOnly"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "role": {
        "methods": {
          "check": {
            "description": "\n        Check if a user is allowed to do an action.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.role.check",
            "path": "role/check",
            "request": {
              "$ref": "ServerRoleRoleMessagesRoleCheckRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerRoleRoleMessagesRoleCheckResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "delete": {
            "description": "\n        Delete a role.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.role.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "role/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a role.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.role.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "role/get",
            "response": {
              "$ref": "Role"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of roles.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.role.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "name": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "role/list",
            "response": {
              "$ref": "ServerRoleRoleMessagesRoleListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "listWithFeeds": {
            "description": "\n        Get a list of roles and corresponding feeds.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.role.listWithFeeds",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "name": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "role/listWithFeeds",
            "response": {
              "$ref": "ServerRoleRoleMessagesRoleListWithFeedResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a role.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.role.save",
            "path": "role/save",
            "request": {
              "$ref": "Role",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Role"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "saveUserRoleWithFeeds": {
            "description": "\n        Save a role with its feeds.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.role.saveUserRoleWithFeeds",
            "path": "role/saveUserRoleWithFeeds",
            "request": {
              "$ref": "Role",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerRoleRoleMessagesRoleResource"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "search": {
        "methods": {
          "community": {
            "description": "\n        List communities matching the search criteria.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.search.community",
            "parameters": {
              "fields": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "search/community",
            "request": {
              "$ref": "ServerSearchSearchMessagesSearchContentRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerContentCommunityCommunityMessagesCommunityListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "content": {
            "description": "\n        List contents matching the search criteria.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.search.content",
            "parameters": {
              "fields": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "search/content",
            "request": {
              "$ref": "ServerSearchSearchMessagesSearchContentRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerContentContentMessagesContentListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "contentandmedia": {
            "description": "\n        List contents and media matching the search criteria.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.search.contentandmedia",
            "path": "search/contentandmedia",
            "request": {
              "$ref": "ServerSearchSearchMessagesSearchContentAndMediaRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerSearchSearchMessagesContentAndMediaListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "directory": {
            "description": "\n        List directories matching the search criteria.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.search.directory",
            "path": "search/directory",
            "request": {
              "$ref": "ServerSearchSearchMessagesSearchDirectoryRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerSearchSearchMessagesSearchDirectoryResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "media": {
            "description": "\n        List media matching the search criteria.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.search.media",
            "path": "search/media",
            "request": {
              "$ref": "ServerSearchSearchMessagesSearchMediaRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerMediaMediaMessagesMediaListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "post": {
            "description": "\n        List posts matching the search criteria.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.search.post",
            "parameters": {
              "fields": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "search/post",
            "request": {
              "$ref": "ServerSearchSearchMessagesSearchContentRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerContentCommunityPostPostMessagesPostListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "directory": {
            "methods": {
              "entry": {
                "description": "\n        List directory entries matching the search criteria.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.search.directory.entry",
                "path": "search/directory/entry",
                "request": {
                  "$ref": "ServerSearchSearchMessagesSearchDirectoryEntryRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerSearchSearchMessagesSearchDirectoryEntryResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "social": {
        "resources": {
          "activity": {
            "methods": {
              "list": {
                "description": "\n        List all activities visible by current user, and group them by content\n        ",
                "httpMethod": "POST",
                "id": "lumsites.social.activity.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  }
                },
                "path": "social/activity/list",
                "request": {
                  "$ref": "ServerSocialActivityActivityMessagesActivityGroupRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerSocialActivityActivityMessagesActivityGroupsResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "subscription": {
            "methods": {
              "delete": {
                "description": "\n        Delete a subscription.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.social.subscription.delete",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "social/subscription/delete",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "get": {
                "description": "\n        Retrieve a subscription from its ID.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.social.subscription.get",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "followingContentKey": {
                    "location": "query",
                    "type": "string"
                  },
                  "followingUserKey": {
                    "location": "query",
                    "type": "string"
                  },
                  "instanceKey": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "social/subscription/get",
                "response": {
                  "$ref": "Subscription"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        Retrieve a list of subscriptions.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.social.subscription.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "followerUserKey": {
                    "location": "query",
                    "type": "string"
                  },
                  "followingContentKey": {
                    "location": "query",
                    "type": "string"
                  },
                  "followingContentType": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "followingUserKey": {
                    "location": "query",
                    "type": "string"
                  },
                  "instanceKey": {
                    "location": "query",
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  }
                },
                "path": "social/subscription/list",
                "response": {
                  "$ref": "ServerSocialSubscriptionSubscriptionMessagesSubscriptionListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Create or update a subscription.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.social.subscription.save",
                "path": "social/subscription/save",
                "request": {
                  "$ref": "Subscription",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Subscription"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            },
            "resources": {
              "content": {
                "methods": {
                  "list": {
                    "description": "\n        List all contents current user is following\n        ",
                    "httpMethod": "GET",
                    "id": "lumsites.social.subscription.content.list",
                    "parameters": {
                      "callId": {
                        "location": "query",
                        "type": "string"
                      },
                      "contentType": {
                        "location": "query",
                        "repeated": true,
                        "type": "string"
                      },
                      "cursor": {
                        "location": "query",
                        "type": "string"
                      },
                      "maxResults": {
                        "default": "30",
                        "format": "int32",
                        "location": "query",
                        "type": "integer"
                      }
                    },
                    "path": "social/subscription/content/list",
                    "response": {
                      "$ref": "ServerSocialSubscriptionSubscriptionMessagesSubscriptionContentsListResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              },
              "follower": {
                "methods": {
                  "list": {
                    "description": "\n        List all users that current user is followed by.\n        ",
                    "httpMethod": "GET",
                    "id": "lumsites.social.subscription.follower.list",
                    "parameters": {
                      "callId": {
                        "location": "query",
                        "type": "string"
                      },
                      "cursor": {
                        "location": "query",
                        "type": "string"
                      },
                      "maxResults": {
                        "default": "30",
                        "format": "int32",
                        "location": "query",
                        "type": "integer"
                      }
                    },
                    "path": "social/subscription/follower/list",
                    "response": {
                      "$ref": "ServerSocialSubscriptionSubscriptionMessagesSubscriptionUsersListResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              },
              "following": {
                "methods": {
                  "list": {
                    "description": "\n        List all users that current user is following.\n        ",
                    "httpMethod": "GET",
                    "id": "lumsites.social.subscription.following.list",
                    "parameters": {
                      "callId": {
                        "location": "query",
                        "type": "string"
                      },
                      "cursor": {
                        "location": "query",
                        "type": "string"
                      },
                      "maxResults": {
                        "default": "30",
                        "format": "int32",
                        "location": "query",
                        "type": "integer"
                      }
                    },
                    "path": "social/subscription/following/list",
                    "response": {
                      "$ref": "ServerSocialSubscriptionSubscriptionMessagesSubscriptionUsersListResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              }
            }
          },
          "user": {
            "methods": {
              "save": {
                "description": "\n        Update social profile of a user.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.social.user.save",
                "path": "social/user/save",
                "request": {
                  "$ref": "UserProtoProfileStatus",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "User"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "stockexchange": {
        "methods": {
          "get": {
            "description": "\n        Get a value by symbol.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.stockexchange.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "symbol": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "stockexchange/get",
            "response": {
              "$ref": "StockExchange"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "stream": {
        "methods": {
          "list": {
            "description": "\n        Retrieve several streams with their top contents\n        ",
            "httpMethod": "POST",
            "id": "lumsites.stream.list",
            "parameters": {
              "fields": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "stream/list",
            "request": {
              "$ref": "ServerStreamStreamMessagesListRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerStreamStreamMessagesListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "configuration": {
            "methods": {
              "delete": {
                "description": "\n        Delete ONE stream configuration.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.stream.configuration.delete",
                "parameters": {
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "stream/configuration/delete",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "deleteMulti": {
                "description": "\n        Delete streams configurations.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.stream.configuration.deleteMulti",
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "stream/configuration/deleteMulti",
                "request": {
                  "$ref": "ServerStreamStreamMessagesConfigurationDeleteMultiRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerStreamStreamMessagesConfigurationMessage"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        Retrieve streams configurations.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.stream.configuration.list",
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "stream/configuration/list",
                "request": {
                  "$ref": "ServerStreamStreamMessagesConfigurationListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerStreamStreamMessagesConfigurationListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save ONE stream configuration.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.stream.configuration.save",
                "path": "stream/configuration/save",
                "request": {
                  "$ref": "StreamConf",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "StreamConf"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "saveMulti": {
                "description": "\n        Save streams configurations.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.stream.configuration.saveMulti",
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "stream/configuration/saveMulti",
                "request": {
                  "$ref": "ServerStreamStreamMessagesConfigurationMessage",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerStreamStreamMessagesConfigurationMessage"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "content": {
            "methods": {
              "list": {
                "description": "\n        Retrieve the contents of a given stream with pagination.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.stream.content.list",
                "parameters": {
                  "fields": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "stream/content/list",
                "request": {
                  "$ref": "ServerStreamStreamMessagesContentListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerStreamStreamMessagesContentListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "style": {
        "methods": {
          "delete": {
            "description": "\n        Delete a style.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.style.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "style/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a style.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.style.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "style/get",
            "response": {
              "$ref": "Style"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of styles.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.style.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "getAll": {
                "location": "query",
                "type": "boolean"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int64",
                "location": "query",
                "type": "string"
              },
              "type": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "style/list",
            "response": {
              "$ref": "ServerStyleStyleMessagesStyleListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Create or update a style.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.style.save",
            "path": "style/save",
            "request": {
              "$ref": "Style",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Style"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "stylesheet": {
            "methods": {
              "save": {
                "description": "\n        Save a stylesheet\n        ",
                "httpMethod": "POST",
                "id": "lumsites.style.stylesheet.save",
                "path": "style/stylesheet/save",
                "request": {
                  "$ref": "ServerStyleStyleMessagesStyleSheetSaveRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Style"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "tag": {
        "methods": {
          "delete": {
            "description": "\n        Delete a tag.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.tag.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "tag/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete a list of tags.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.tag.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "tag/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a tag.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.tag.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "tag/get",
            "response": {
              "$ref": "Tag"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of tags.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.tag.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "ids": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "instance": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "kind": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              }
            },
            "path": "tag/list",
            "response": {
              "$ref": "ServerTagsTagsMessagesTagListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a tag.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.tag.save",
            "path": "tag/save",
            "request": {
              "$ref": "Tag",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Tag"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "template": {
        "methods": {
          "delete": {
            "description": "\n        Delete a template.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.template.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "template/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete a list of templates.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.template.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "template/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a template by ID.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.template.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "template/get",
            "response": {
              "$ref": "Template"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List templates.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.template.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "contentType": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "customContentType": {
                "location": "query",
                "type": "string"
              },
              "herited": {
                "default": "True",
                "location": "query",
                "type": "boolean"
              },
              "instance": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "name": {
                "location": "query",
                "type": "string"
              },
              "properties": {
                "location": "query",
                "type": "string"
              },
              "visibleInheritedOnly": {
                "location": "query",
                "type": "boolean"
              }
            },
            "path": "template/list",
            "response": {
              "$ref": "ServerTemplateTemplateMessagesTemplateListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a template.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.template.save",
            "path": "template/save",
            "request": {
              "$ref": "Template",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Template"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "saveMulti": {
            "description": "\n        Save a list of templates.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.template.saveMulti",
            "path": "template/saveMulti",
            "request": {
              "$ref": "ServerTemplateTemplateMessagesSaveTemplateMultiRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerTemplateTemplateMessagesTemplateListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "translate": {
        "methods": {
          "get": {
            "httpMethod": "POST",
            "id": "lumsites.translate.get",
            "path": "translate/get",
            "request": {
              "$ref": "ServerTranslateTranslateMessagesTranslateRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerTranslateTranslateMessagesTranslateResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "tutorial": {
        "methods": {
          "delete": {
            "description": "\n        Delete a tutorial.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.tutorial.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "tutorial/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a tutorial by ID.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.tutorial.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "tutorial/get",
            "response": {
              "$ref": "Tutorial"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List tutorials.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.tutorial.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "name": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "tutorial/list",
            "response": {
              "$ref": "ServerTutorialTutorialMessagesTutorialListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a tutorial.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.tutorial.save",
            "path": "tutorial/save",
            "request": {
              "$ref": "Tutorial",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Tutorial"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "user": {
        "methods": {
          "follow": {
            "description": "\n        Follow a user.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.user.follow",
            "parameterOrder": [
              "id"
            ],
            "parameters": {
              "id": {
                "location": "path",
                "type": "string"
              }
            },
            "path": "user/{id}/follow",
            "response": {
              "$ref": "Subscription"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a user from its email.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.user.get",
            "parameters": {
              "email": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "user/get",
            "response": {
              "$ref": "User"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "getToken": {
            "description": "\n        Get a token for a user.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.user.getToken",
            "parameters": {
              "customerId": {
                "location": "query",
                "type": "string"
              },
              "email": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "user/getToken",
            "response": {
              "$ref": "ServerUserUserMessagesTokenResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of users.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.user.list",
            "parameters": {
              "action": {
                "enum": [
                  "PAGE_READ",
                  "PAGE_EDIT",
                  "PAGE_DELETE",
                  "NEWS_READ",
                  "NEWS_EDIT",
                  "NEWS_DELETE",
                  "PAGE_ARCHIVE",
                  "PAGE_PUBLISH",
                  "NEWS_PUBLISH",
                  "METADATA_EDIT",
                  "METADATA_DELETE",
                  "ROLE_READ",
                  "ROLE_EDIT",
                  "ROLE_DELETE",
                  "NEWS_LIST_READ",
                  "NEWS_LIST_EDIT",
                  "NEWS_LIST_DELETE",
                  "DIRECTORY_READ",
                  "DIRECTORY_EDIT",
                  "DIRECTORY_DELETE",
                  "MENU_READ",
                  "MENU_EDIT",
                  "MENU_DELETE",
                  "TEMPLATE_READ",
                  "TEMPLATE_EDIT",
                  "TEMPLATE_DELETE",
                  "INSTANCE_EDIT",
                  "INSTANCE_DELETE",
                  "FEED_EDIT",
                  "FEED_DELETE",
                  "MEDIA_EDIT",
                  "MEDIA_DELETE",
                  "USER_READ",
                  "USER_EDIT",
                  "USER_DELETE",
                  "RESELLER_READ",
                  "RESELLER_EDIT",
                  "POST_EDIT",
                  "GROUP_EDIT",
                  "DIRECTORY_ENTRY_FAVORITES_EDIT",
                  "NEWSLETTER_READ",
                  "NEWSLETTER_EDIT",
                  "NEWSLETTER_DELETE",
                  "CUSTOM_CONTENT_TYPE_EDIT",
                  "CUSTOM_CONTENT_TYPE_DELETE",
                  "CUSTOM_CONTENT_READ",
                  "CUSTOM_CONTENT_PUBLISH",
                  "CUSTOM_CONTENT_EDIT",
                  "CUSTOM_CONTENT_DELETE",
                  "CUSTOM_LIST_READ",
                  "CUSTOM_LIST_EDIT",
                  "CUSTOM_LIST_DELETE",
                  "CUSTOM_LIST_PUBLISH",
                  "COMMUNITY_READ",
                  "COMMUNITY_EDIT",
                  "COMMUNITY_DELETE",
                  "USER_DIRECTORY_READ",
                  "USER_DIRECTORY_EDIT",
                  "USER_DIRECTORY_DELETE",
                  "CUSTOM_READ",
                  "CUSTOM_EDIT",
                  "CUSTOM_DELETE",
                  "TUTORIAL_READ",
                  "TUTORIAL_EDIT",
                  "TUTORIAL_DELETE",
                  "POST_READ",
                  "POST_DELETE",
                  "CUSTOM_CONTENT_ARCHIVE",
                  "MENU_DROP",
                  "STYLE_READ",
                  "STYLE_EDIT",
                  "STYLE_DELETE",
                  "GLOBAL_WIDGET_EDIT",
                  "TARGET_EDIT",
                  "DIRECTORY_ENTRY_READ",
                  "DIRECTORY_ENTRY_EDIT",
                  "DIRECTORY_ENTRY_DELETE",
                  "COMMUNITY_PUBLISH",
                  "ANALYTICS_READ",
                  "GAMIFICATION_ADMIN"
                ],
                "enumDescriptions": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "location": "query",
                "type": "string"
              },
              "callId": {
                "location": "query",
                "type": "string"
              },
              "currentInstance": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "email": {
                "location": "query",
                "type": "string"
              },
              "feeds": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "firstName": {
                "location": "query",
                "type": "string"
              },
              "ids": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "lang": {
                "location": "query",
                "type": "string"
              },
              "lastName": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "query": {
                "location": "query",
                "type": "string"
              },
              "queryFields": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "reactedEntityKey": {
                "location": "query",
                "type": "string"
              },
              "reactedEntityKind": {
                "location": "query",
                "type": "string"
              },
              "registeredSince": {
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "showHidden": {
                "location": "query",
                "type": "boolean"
              },
              "sortOrder": {
                "location": "query",
                "type": "string"
              },
              "status": {
                "location": "query",
                "type": "string"
              },
              "types": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "user/list",
            "response": {
              "$ref": "ServerUserUserMessagesUserListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a user into the datastore.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.user.save",
            "path": "user/save",
            "request": {
              "$ref": "UserProtoIdUidUrlProfileIdEmailFirstNameLastNameLangLangsPropertiesSubscriptionsIsSuperAdminApiProfileCustomerSynchronizedDevicesChangePasswordAtNextLoginStatusAccountTypeInstancesSuperAdminDirectoryFavoritesHiddenDirectoryFavoritesCreatedAtUpdatedAtCustomProfileEmailNotificationsProfilePictureIsHiddenAlternateEmailLastSynchronizationExpirationDateProfileStatusExternalDirectoryUrlSettingsUnreadNotificationCountProfilePictureUrlTutorialsGamificationFullNameIsGodIsDesignerMsTokenMsRefreshTokenPasswordRePassword",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "User"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "search": {
            "description": "\n        @depreciated Use user.list\n        ",
            "httpMethod": "GET",
            "id": "lumsites.user.search",
            "parameters": {
              "action": {
                "enum": [
                  "PAGE_READ",
                  "PAGE_EDIT",
                  "PAGE_DELETE",
                  "NEWS_READ",
                  "NEWS_EDIT",
                  "NEWS_DELETE",
                  "PAGE_ARCHIVE",
                  "PAGE_PUBLISH",
                  "NEWS_PUBLISH",
                  "METADATA_EDIT",
                  "METADATA_DELETE",
                  "ROLE_READ",
                  "ROLE_EDIT",
                  "ROLE_DELETE",
                  "NEWS_LIST_READ",
                  "NEWS_LIST_EDIT",
                  "NEWS_LIST_DELETE",
                  "DIRECTORY_READ",
                  "DIRECTORY_EDIT",
                  "DIRECTORY_DELETE",
                  "MENU_READ",
                  "MENU_EDIT",
                  "MENU_DELETE",
                  "TEMPLATE_READ",
                  "TEMPLATE_EDIT",
                  "TEMPLATE_DELETE",
                  "INSTANCE_EDIT",
                  "INSTANCE_DELETE",
                  "FEED_EDIT",
                  "FEED_DELETE",
                  "MEDIA_EDIT",
                  "MEDIA_DELETE",
                  "USER_READ",
                  "USER_EDIT",
                  "USER_DELETE",
                  "RESELLER_READ",
                  "RESELLER_EDIT",
                  "POST_EDIT",
                  "GROUP_EDIT",
                  "DIRECTORY_ENTRY_FAVORITES_EDIT",
                  "NEWSLETTER_READ",
                  "NEWSLETTER_EDIT",
                  "NEWSLETTER_DELETE",
                  "CUSTOM_CONTENT_TYPE_EDIT",
                  "CUSTOM_CONTENT_TYPE_DELETE",
                  "CUSTOM_CONTENT_READ",
                  "CUSTOM_CONTENT_PUBLISH",
                  "CUSTOM_CONTENT_EDIT",
                  "CUSTOM_CONTENT_DELETE",
                  "CUSTOM_LIST_READ",
                  "CUSTOM_LIST_EDIT",
                  "CUSTOM_LIST_DELETE",
                  "CUSTOM_LIST_PUBLISH",
                  "COMMUNITY_READ",
                  "COMMUNITY_EDIT",
                  "COMMUNITY_DELETE",
                  "USER_DIRECTORY_READ",
                  "USER_DIRECTORY_EDIT",
                  "USER_DIRECTORY_DELETE",
                  "CUSTOM_READ",
                  "CUSTOM_EDIT",
                  "CUSTOM_DELETE",
                  "TUTORIAL_READ",
                  "TUTORIAL_EDIT",
                  "TUTORIAL_DELETE",
                  "POST_READ",
                  "POST_DELETE",
                  "CUSTOM_CONTENT_ARCHIVE",
                  "MENU_DROP",
                  "STYLE_READ",
                  "STYLE_EDIT",
                  "STYLE_DELETE",
                  "GLOBAL_WIDGET_EDIT",
                  "TARGET_EDIT",
                  "DIRECTORY_ENTRY_READ",
                  "DIRECTORY_ENTRY_EDIT",
                  "DIRECTORY_ENTRY_DELETE",
                  "COMMUNITY_PUBLISH",
                  "ANALYTICS_READ",
                  "GAMIFICATION_ADMIN"
                ],
                "enumDescriptions": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "location": "query",
                "type": "string"
              },
              "callId": {
                "location": "query",
                "type": "string"
              },
              "currentInstance": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "email": {
                "location": "query",
                "type": "string"
              },
              "feeds": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "firstName": {
                "location": "query",
                "type": "string"
              },
              "ids": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "instance": {
                "location": "query",
                "type": "string"
              },
              "lang": {
                "location": "query",
                "type": "string"
              },
              "lastName": {
                "location": "query",
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "query": {
                "location": "query",
                "type": "string"
              },
              "queryFields": {
                "location": "query",
                "repeated": true,
                "type": "string"
              },
              "reactedEntityKey": {
                "location": "query",
                "type": "string"
              },
              "reactedEntityKind": {
                "location": "query",
                "type": "string"
              },
              "registeredSince": {
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "showHidden": {
                "location": "query",
                "type": "boolean"
              },
              "sortOrder": {
                "location": "query",
                "type": "string"
              },
              "status": {
                "location": "query",
                "type": "string"
              },
              "types": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "user/search",
            "response": {
              "$ref": "ServerUserUserMessagesUserListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "unfollow": {
            "description": "\n        Unfollow a user.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.user.unfollow",
            "parameterOrder": [
              "id"
            ],
            "parameters": {
              "id": {
                "location": "path",
                "type": "string"
              }
            },
            "path": "user/{id}/unfollow",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "device": {
            "methods": {
              "getToken": {
                "description": "\n        *deprecated* Get a token from a code.\n        GET endpoint deprecated, use the POST equivalent user.device.token.get.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.user.device.getToken",
                "parameters": {
                  "code": {
                    "location": "query",
                    "type": "string"
                  },
                  "providerType": {
                    "default": "google",
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "user/device/getToken",
                "response": {
                  "$ref": "ServerDeviceDeviceMessagesTokenResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "init": {
                "description": "\n        Initialize the connection of a user.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.user.device.init",
                "parameters": {
                  "accountType": {
                    "location": "query",
                    "type": "string"
                  },
                  "deviceId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "instance": {
                    "location": "query",
                    "type": "string"
                  },
                  "platform": {
                    "enum": [
                      "ANDROID",
                      "IOS"
                    ],
                    "enumDescriptions": [
                      "",
                      ""
                    ],
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "user/device/init",
                "response": {
                  "$ref": "User"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "register": {
                "description": "\n        Register a device.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.user.device.register",
                "path": "user/device/register",
                "request": {
                  "$ref": "ServerDeviceDeviceMessagesRegistrationRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "Device"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "unregister": {
                "description": "\n        Unregister a device.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.user.device.unregister",
                "parameters": {
                  "deviceId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "instance": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "user/device/unregister",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            },
            "resources": {
              "token": {
                "methods": {
                  "get": {
                    "description": "\n        Get a token from a code or login/password credentials.\n        ",
                    "httpMethod": "POST",
                    "id": "lumsites.user.device.token.get",
                    "path": "user/device/token/get",
                    "request": {
                      "$ref": "ServerDeviceDeviceMessagesAuthTokenRequest",
                      "parameterName": "resource"
                    },
                    "response": {
                      "$ref": "ServerDeviceDeviceMessagesTokenResponse"
                    },
                    "scopes": [
                      "https://www.googleapis.com/auth/userinfo.email"
                    ]
                  }
                }
              }
            }
          },
          "directory": {
            "methods": {
              "get": {
                "description": "\n        Get a user by email.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.user.directory.get",
                "parameters": {
                  "contentId": {
                    "location": "query",
                    "type": "string"
                  },
                  "email": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "user/directory/get",
                "response": {
                  "$ref": "User"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        Search users using search index and Google directory.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.user.directory.list",
                "path": "user/directory/list",
                "request": {
                  "$ref": "ServerUserUserMessagesUserDirectoryListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerUserUserMessagesUserListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Save a user.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.user.directory.save",
                "path": "user/directory/save",
                "request": {
                  "$ref": "UserProtoIdUidUrlProfileIdEmailFirstNameLastNameLangLangsPropertiesSubscriptionsIsSuperAdminApiProfileCustomerSynchronizedDevicesChangePasswordAtNextLoginStatusAccountTypeInstancesSuperAdminDirectoryFavoritesHiddenDirectoryFavoritesCreatedAtUpdatedAtCustomProfileEmailNotificationsProfilePictureIsHiddenAlternateEmailLastSynchronizationExpirationDateProfileStatusExternalDirectoryUrlSettingsUnreadNotificationCountProfilePictureUrlTutorialsGamificationFullNameIsGodIsDesignerMsTokenMsRefreshTokenPasswordContentId",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "User"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "search": {
                "description": "\n        @deprecated Use user.directory.list\n        ",
                "httpMethod": "POST",
                "id": "lumsites.user.directory.search",
                "path": "user/directory/search",
                "request": {
                  "$ref": "ServerUserUserMessagesUserDirectoryListRequest",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "ServerUserUserMessagesUserListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "favorite": {
            "methods": {
              "add": {
                "description": "\n        Add a directory entry as favorite for the current user.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.user.favorite.add",
                "path": "user/favorite/add",
                "request": {
                  "$ref": "ServerCommonEndpointMessagesDatastoreKey",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "DirectoryEntry"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "destroy": {
                "description": "\n        Remove a directory entry from current user's favorite directory entries.\n        ",
                "httpMethod": "DELETE",
                "id": "lumsites.user.favorite.destroy",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "uid": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "user/favorite/destroy",
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "list": {
                "description": "\n        List every directory entry a user has in its favorites.<br>\n        It can be entries user put explicitly, or entries inherited from subscriptions.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.user.favorite.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "cursor": {
                    "location": "query",
                    "type": "string"
                  },
                  "directory": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "instance": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  },
                  "lang": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "maxResults": {
                    "default": "30",
                    "format": "int32",
                    "location": "query",
                    "type": "integer"
                  },
                  "sortOrder": {
                    "location": "query",
                    "type": "string"
                  },
                  "status": {
                    "location": "query",
                    "type": "string"
                  },
                  "tags": {
                    "location": "query",
                    "repeated": true,
                    "type": "string"
                  }
                },
                "path": "user/favorite/list",
                "response": {
                  "$ref": "ServerDirectoryDirectoryEntryDirectoryEntryMessagesDirectoryEntryListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "organizationchart": {
            "methods": {
              "get": {
                "description": "\n        Get the organization chart of a user.\n        It includes the manager, same level users and sub-level users of the user.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.user.organizationchart.get",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "content": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  },
                  "email": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "user/organizationchart/get",
                "response": {
                  "$ref": "ServerUserOrganizationChartOrganizationChartMessagesOrganizationChartResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "role": {
            "methods": {
              "list": {
                "description": "\n        Get a user's roles.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.user.role.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  },
                  "fields": {
                    "location": "query",
                    "type": "string"
                  },
                  "instanceId": {
                    "location": "query",
                    "required": true,
                    "type": "string"
                  }
                },
                "path": "user/role/list",
                "response": {
                  "$ref": "ServerRoleRoleMessagesRoleListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          },
          "settings": {
            "methods": {
              "get": {
                "description": "\n        Get settings of current user.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.user.settings.get",
                "path": "user/settings/get",
                "response": {
                  "$ref": "UserProtoLangLangsPropertiesShowTutorialTutorialsEmailNotificationsPasswordRePasswordCurrentPasswordAlternateEmailSettings"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              },
              "save": {
                "description": "\n        Update profile settings of current user.\n        ",
                "httpMethod": "POST",
                "id": "lumsites.user.settings.save",
                "path": "user/settings/save",
                "request": {
                  "$ref": "UserProtoLangLangsPropertiesShowTutorialTutorialsEmailNotificationsPasswordRePasswordCurrentPasswordAlternateEmailSettings",
                  "parameterName": "resource"
                },
                "response": {
                  "$ref": "UserProtoLangLangsPropertiesShowTutorialTutorialsEmailNotificationsPasswordRePasswordCurrentPasswordAlternateEmailSettings"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "usercontent": {
        "methods": {
          "get": {
            "description": "\n        Get values associated to a content for a user.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.usercontent.get",
            "parameters": {
              "content": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "usercontent/get",
            "response": {
              "$ref": "UserContent"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save values associated to a content for the connected user.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.usercontent.save",
            "path": "usercontent/save",
            "request": {
              "$ref": "UserContent",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "UserContent"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "weather": {
        "methods": {
          "get": {
            "description": "\n        Get a weather for a specific address\n        ",
            "httpMethod": "GET",
            "id": "lumsites.weather.get",
            "parameters": {
              "address": {
                "location": "query",
                "type": "string"
              },
              "callId": {
                "location": "query",
                "type": "string"
              },
              "defaultAddress": {
                "location": "query",
                "type": "string"
              },
              "unit": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "weather/get",
            "response": {
              "$ref": "ServerWeatherWeatherMessagesWeatherResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "webhook": {
        "methods": {
          "delete": {
            "description": "\n        Delete a webhook.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.webhook.delete",
            "parameters": {
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "webhook/delete",
            "response": {
              "$ref": "Webhook"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "disable": {
            "description": "\n        Disable a webhook.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.webhook.disable",
            "path": "webhook/disable",
            "request": {
              "$ref": "WebhookProtoUid",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Webhook"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "enable": {
            "description": "\n        Enable a webhook.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.webhook.enable",
            "path": "webhook/enable",
            "request": {
              "$ref": "WebhookProtoUid",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Webhook"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a webhook.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.webhook.get",
            "parameters": {
              "uid": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "webhook/get",
            "response": {
              "$ref": "Webhook"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List the webhooks.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.webhook.list",
            "path": "webhook/list",
            "request": {
              "$ref": "ServerWebhookWebhookMessagesWebhookListRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerWebhookWebhookMessagesWebhookListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Create or update a webhook.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.webhook.save",
            "parameters": {
              "launchTest": {
                "location": "query",
                "type": "boolean"
              }
            },
            "path": "webhook/save",
            "request": {
              "$ref": "WebhookProtoCustomerNameFamilyUrlDescriptionIdUidStatus",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "WebhookProtoCustomerNameFamilyUrlDescriptionIdUidStatusCreatedAtUpdatedAtSecurityToken"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "test": {
            "description": "\n        Do or re-do the handshake procedure for a webhook.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.webhook.test",
            "path": "webhook/test",
            "request": {
              "$ref": "WebhookProtoUid",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "WebhookProtoCustomerNameFamilyUrlDescriptionIdUidStatusCreatedAtUpdatedAtSecurityToken"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      },
      "widget": {
        "methods": {
          "delete": {
            "description": "\n        Delete a widget.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.widget.delete",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "widget/delete",
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "deleteMulti": {
            "description": "\n        Delete multiple widgets.\n        ",
            "httpMethod": "DELETE",
            "id": "lumsites.widget.deleteMulti",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "repeated": true,
                "type": "string"
              }
            },
            "path": "widget/deleteMulti",
            "response": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyList"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "get": {
            "description": "\n        Get a widget.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.widget.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "fields": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "widget/get",
            "response": {
              "$ref": "Widget"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        Get a list of widgets.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.widget.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "instance": {
                "location": "query",
                "required": true,
                "type": "string"
              },
              "maxResults": {
                "default": "30",
                "format": "int32",
                "location": "query",
                "type": "integer"
              },
              "title": {
                "location": "query",
                "type": "string"
              }
            },
            "path": "widget/list",
            "response": {
              "$ref": "ServerWidgetWidgetMessagesWidgetListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "save": {
            "description": "\n        Save a widget.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.widget.save",
            "path": "widget/save",
            "request": {
              "$ref": "Widget",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "Widget"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        },
        "resources": {
          "type": {
            "methods": {
              "list": {
                "description": "\n        List the widget types.\n        ",
                "httpMethod": "GET",
                "id": "lumsites.widget.type.list",
                "parameters": {
                  "callId": {
                    "location": "query",
                    "type": "string"
                  }
                },
                "path": "widget/type/list",
                "response": {
                  "$ref": "ServerWidgetWidgetMessagesWidgetTypeListResponse"
                },
                "scopes": [
                  "https://www.googleapis.com/auth/userinfo.email"
                ]
              }
            }
          }
        }
      },
      "zendesk": {
        "methods": {
          "get": {
            "description": "\n        Get a Zendesk item by ID.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.zendesk.get",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "uid": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "zendesk/get",
            "response": {
              "$ref": "ServerIntegrationIntegrationMessagesIntegrationGetResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "list": {
            "description": "\n        List Zendesk items by type.\n        ",
            "httpMethod": "GET",
            "id": "lumsites.zendesk.list",
            "parameters": {
              "callId": {
                "location": "query",
                "type": "string"
              },
              "cursor": {
                "location": "query",
                "type": "string"
              },
              "type": {
                "location": "query",
                "required": true,
                "type": "string"
              }
            },
            "path": "zendesk/list",
            "response": {
              "$ref": "ServerIntegrationIntegrationMessagesIntegrationListResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "register": {
            "description": "\n        Register a Zendesk integration.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.zendesk.register",
            "path": "zendesk/register",
            "request": {
              "$ref": "IntegrationConf",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "IntegrationConf"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          },
          "search": {
            "description": "\n        Search through Zendesk items.\n        ",
            "httpMethod": "POST",
            "id": "lumsites.zendesk.search",
            "path": "zendesk/search",
            "request": {
              "$ref": "ServerIntegrationZendeskZendeskMessagesZendeskSearchRequest",
              "parameterName": "resource"
            },
            "response": {
              "$ref": "ServerIntegrationIntegrationMessagesIntegrationSearchResponse"
            },
            "scopes": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        }
      }
    },
    "rootUrl": "https://lumsites.appspot.com/_ah/api/",
    "schemas": {
      "Activity": {
        "id": "Activity",
        "properties": {
          "action": {
            "type": "string"
          },
          "commentDetails": {
            "type": "string"
          },
          "commentId": {
            "type": "string"
          },
          "contentDetails": {
            "type": "string"
          },
          "contentKey": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdByDetails": {
            "type": "string"
          },
          "customerKey": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "forUser": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instanceKey": {
            "type": "string"
          },
          "parentContent": {
            "$ref": "ActivityContent"
          },
          "parentContentDetails": {
            "type": "string"
          },
          "parentContentKey": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "userDetails": {
            "type": "string"
          },
          "userKey": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ActivityContent": {
        "id": "ActivityContent",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AttachedLink": {
        "id": "AttachedLink",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "images": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lang": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "thumbnailIndex": {
            "format": "int64",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "videoId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Authorization": {
        "id": "Authorization",
        "properties": {
          "actions": {
            "items": {
              "$ref": "AuthorizationAction"
            },
            "type": "array"
          },
          "canEditOnlyOwnContent": {
            "type": "boolean"
          },
          "feeds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "navigationUuids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthorizationAction": {
        "id": "AuthorizationAction",
        "properties": {
          "customContentType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Comment": {
        "id": "Comment",
        "properties": {
          "answersNumber": {
            "type": "string"
          },
          "authorProperties": {
            "type": "string"
          },
          "canEdit": {
            "type": "boolean"
          },
          "canHide": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "files": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "images": {
            "items": {
              "$ref": "Media"
            },
            "type": "array"
          },
          "instance": {
            "type": "string"
          },
          "liked": {
            "type": "boolean"
          },
          "likes": {
            "type": "string"
          },
          "links": {
            "items": {
              "$ref": "AttachedLink"
            },
            "type": "array"
          },
          "markedAsRelevant": {
            "format": "int32",
            "type": "integer"
          },
          "mentions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mentionsDetails": {
            "items": {
              "$ref": "User"
            },
            "type": "array"
          },
          "mentionsFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "parent": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Community": {
        "id": "Community",
        "properties": {
          "adminKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "adminsDetails": {
            "items": {
              "$ref": "User"
            },
            "type": "array"
          },
          "analyticsViewSum": {
            "format": "int32",
            "type": "integer"
          },
          "archivers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "author": {
            "type": "string"
          },
          "authorDetails": {
            "type": "string"
          },
          "authorId": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "calendarIdpUuid": {
            "type": "string"
          },
          "calendarSettings": {
            "type": "string"
          },
          "canContribute": {
            "type": "boolean"
          },
          "canFollow": {
            "type": "boolean"
          },
          "canMarkRelevant": {
            "type": "boolean"
          },
          "canReadDescription": {
            "type": "boolean"
          },
          "canReadPosts": {
            "type": "boolean"
          },
          "canRequestAccess": {
            "type": "boolean"
          },
          "canonicalUrl": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "communityFeedKey": {
            "type": "string"
          },
          "count": {
            "format": "int64",
            "type": "string"
          },
          "createCalendar": {
            "type": "boolean"
          },
          "createDrive": {
            "type": "boolean"
          },
          "createTeamDrive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "customContentType": {
            "type": "string"
          },
          "customContentTypeDetails": {
            "type": "string"
          },
          "customContentTypeTags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customer": {
            "type": "string"
          },
          "deleters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "type": "string"
          },
          "driveFolder": {
            "$ref": "DriveFolder"
          },
          "editors": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "endDate": {
            "type": "string"
          },
          "excerpt": {
            "type": "string"
          },
          "externalKey": {
            "type": "string"
          },
          "featuredEndDate": {
            "type": "string"
          },
          "featuredFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "featuredStartDate": {
            "type": "string"
          },
          "feedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "following": {
            "type": "boolean"
          },
          "groups": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "hasCalendarId": {
            "type": "boolean"
          },
          "hasCommentWidget": {
            "type": "boolean"
          },
          "hasDriveFolder": {
            "type": "boolean"
          },
          "hasRelevantComment": {
            "type": "boolean"
          },
          "header": {
            "type": "string"
          },
          "headerDetails": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "isCustomizableLayout": {
            "type": "boolean"
          },
          "isDefaultContentList": {
            "type": "boolean"
          },
          "isDefaultUserDirectory": {
            "type": "boolean"
          },
          "isFeatured": {
            "type": "boolean"
          },
          "isHomepage": {
            "type": "boolean"
          },
          "isNavItem": {
            "type": "boolean"
          },
          "isRequestPending": {
            "type": "boolean"
          },
          "lastRevision": {
            "$ref": "ContentLastRevision"
          },
          "liked": {
            "type": "boolean"
          },
          "likes": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "mediaThumbnail": {
            "$ref": "Media"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "navigation": {
            "items": {
              "$ref": "ContentNavigation"
            },
            "type": "array"
          },
          "notificationsEnabled": {
            "type": "boolean"
          },
          "notifyAuthor": {
            "type": "boolean"
          },
          "notifyFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notifyUsers": {
            "type": "boolean"
          },
          "parentCustomContentType": {
            "type": "string"
          },
          "parentsNavigation": {
            "items": {
              "$ref": "ContentMenuList"
            },
            "type": "array"
          },
          "postStatuses": {
            "items": {
              "$ref": "PostStatus"
            },
            "type": "array"
          },
          "postTypes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "privacy": {
            "default": "restricted",
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "publicationDate": {
            "type": "string"
          },
          "publishers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "readers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "relevantComment": {
            "type": "string"
          },
          "relevantCommentDetails": {
            "$ref": "Comment"
          },
          "slug": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "subscribedFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "subscription": {
            "$ref": "Subscription"
          },
          "subtitle": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tagsDetails": {
            "items": {
              "$ref": "Tag"
            },
            "type": "array"
          },
          "template": {
            "$ref": "Template"
          },
          "templates": {
            "items": {
              "$ref": "Template"
            },
            "type": "array"
          },
          "thumbnail": {
            "type": "string"
          },
          "thumbnailBlobkey": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedByDetails": {
            "type": "string"
          },
          "updatedById": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "userContent": {
            "$ref": "UserContent"
          },
          "userKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "usersDetails": {
            "items": {
              "$ref": "User"
            },
            "type": "array"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          },
          "weight": {
            "format": "double",
            "type": "number"
          },
          "writer": {
            "type": "string"
          },
          "writerDetails": {
            "type": "string"
          },
          "writerId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CommunityRequest": {
        "id": "CommunityRequest",
        "properties": {
          "adminMessage": {
            "type": "string"
          },
          "communityKey": {
            "type": "string"
          },
          "customerKey": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instanceKey": {
            "type": "string"
          },
          "requestStatus": {
            "default": "pending",
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "userDetails": {
            "type": "string"
          },
          "userKey": {
            "type": "string"
          },
          "userMessage": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CommunityTemplate": {
        "id": "CommunityTemplate",
        "properties": {
          "authorDetails": {
            "type": "string"
          },
          "authorId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "postStatuses": {
            "items": {
              "$ref": "PostStatus"
            },
            "type": "array"
          },
          "postTypes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "privacy": {
            "default": "restricted",
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "tagsDetails": {
            "items": {
              "$ref": "Tag"
            },
            "type": "array"
          },
          "templates": {
            "items": {
              "$ref": "Template"
            },
            "type": "array"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedByDetails": {
            "type": "string"
          },
          "updatedById": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Content": {
        "id": "Content",
        "properties": {
          "analyticsViewSum": {
            "format": "int32",
            "type": "integer"
          },
          "archivers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "author": {
            "type": "string"
          },
          "authorDetails": {
            "type": "string"
          },
          "authorId": {
            "type": "string"
          },
          "canMarkRelevant": {
            "type": "boolean"
          },
          "canonicalUrl": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "count": {
            "format": "int64",
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "customContentType": {
            "type": "string"
          },
          "customContentTypeDetails": {
            "type": "string"
          },
          "customContentTypeTags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customer": {
            "type": "string"
          },
          "deleters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "editors": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "endDate": {
            "type": "string"
          },
          "excerpt": {
            "type": "string"
          },
          "externalKey": {
            "type": "string"
          },
          "featuredEndDate": {
            "type": "string"
          },
          "featuredFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "featuredStartDate": {
            "type": "string"
          },
          "feedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "following": {
            "type": "boolean"
          },
          "hasCommentWidget": {
            "type": "boolean"
          },
          "hasRelevantComment": {
            "type": "boolean"
          },
          "header": {
            "type": "string"
          },
          "headerDetails": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "isCustomizableLayout": {
            "type": "boolean"
          },
          "isDefaultContentList": {
            "type": "boolean"
          },
          "isDefaultUserDirectory": {
            "type": "boolean"
          },
          "isFeatured": {
            "type": "boolean"
          },
          "isHomepage": {
            "type": "boolean"
          },
          "isNavItem": {
            "type": "boolean"
          },
          "lastRevision": {
            "$ref": "ContentLastRevision"
          },
          "liked": {
            "type": "boolean"
          },
          "likes": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "mediaThumbnail": {
            "$ref": "Media"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "navigation": {
            "items": {
              "$ref": "ContentNavigation"
            },
            "type": "array"
          },
          "notificationsEnabled": {
            "type": "boolean"
          },
          "notifyAuthor": {
            "type": "boolean"
          },
          "notifyFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notifyUsers": {
            "type": "boolean"
          },
          "parentCustomContentType": {
            "type": "string"
          },
          "parentsNavigation": {
            "items": {
              "$ref": "ContentMenuList"
            },
            "type": "array"
          },
          "properties": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "publicationDate": {
            "type": "string"
          },
          "publishers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "readers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "relevantComment": {
            "type": "string"
          },
          "relevantCommentDetails": {
            "$ref": "Comment"
          },
          "slug": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "subscribedFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "subscription": {
            "$ref": "Subscription"
          },
          "subtitle": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tagsDetails": {
            "items": {
              "$ref": "Tag"
            },
            "type": "array"
          },
          "template": {
            "$ref": "Template"
          },
          "thumbnail": {
            "type": "string"
          },
          "thumbnailBlobkey": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedByDetails": {
            "type": "string"
          },
          "updatedById": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "userContent": {
            "$ref": "UserContent"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          },
          "weight": {
            "format": "double",
            "type": "number"
          },
          "writer": {
            "type": "string"
          },
          "writerDetails": {
            "type": "string"
          },
          "writerId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContentLastRevision": {
        "id": "ContentLastRevision",
        "properties": {
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContentMenuDeletedListItem": {
        "id": "ContentMenuDeletedListItem",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContentMenuList": {
        "id": "ContentMenuList",
        "properties": {
          "deleted": {
            "items": {
              "$ref": "ContentMenuDeletedListItem"
            },
            "type": "array"
          },
          "items": {
            "items": {
              "$ref": "ContentMenuListItem"
            },
            "type": "array"
          },
          "lang": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContentMenuListItem": {
        "id": "ContentMenuListItem",
        "properties": {
          "children": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "color": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "hideChildren": {
            "type": "boolean"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isNavItem": {
            "type": "boolean"
          },
          "link": {
            "type": "string"
          },
          "menuTitle": {
            "type": "string"
          },
          "newTab": {
            "type": "boolean"
          },
          "parentId": {
            "type": "string"
          },
          "parentUuid": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "slugFull": {
            "type": "string"
          },
          "sortOrder": {
            "format": "int32",
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContentNavigation": {
        "id": "ContentNavigation",
        "properties": {
          "color": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "hideChildren": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "menuTitle": {
            "type": "string"
          },
          "newTab": {
            "type": "boolean"
          },
          "parent": {
            "type": "string"
          },
          "parentUuid": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "sortOrder": {
            "format": "int32",
            "type": "integer"
          },
          "uid": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContentRevision": {
        "id": "ContentRevision",
        "properties": {
          "content": {
            "$ref": "Content"
          },
          "contentKey": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdByDetails": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "default": "ARCHIVE",
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContentRevisionProtoIdUidContentKeyVersionStatusCreatedAtCreatedByCreatedByDetails": {
        "id": "ContentRevisionProtoIdUidContentKeyVersionStatusCreatedAtCreatedByCreatedByDetails",
        "properties": {
          "contentKey": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdByDetails": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "default": "ARCHIVE",
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CuratedStream": {
        "id": "CuratedStream",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "customContentTypes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "modelVersion": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomContentType": {
        "id": "CustomContentType",
        "properties": {
          "createFromScratchLocked": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "endDateDelta": {
            "format": "int32",
            "type": "integer"
          },
          "functionalInnerId": {
            "type": "string"
          },
          "hasFeaturedEndDate": {
            "type": "boolean"
          },
          "hasFeaturedStartDate": {
            "type": "boolean"
          },
          "heritable": {
            "type": "boolean"
          },
          "heritableLocked": {
            "type": "boolean"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "isEndDateMandatory": {
            "type": "boolean"
          },
          "isWorkflowEnabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "notifyContributors": {
            "type": "boolean"
          },
          "parentCustomContentType": {
            "type": "string"
          },
          "tags": {
            "items": {
              "$ref": "CustomContentTypeTag"
            },
            "type": "array"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "workflowManagers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomContentTypeTag": {
        "id": "CustomContentTypeTag",
        "properties": {
          "functionalInnerId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Customer": {
        "id": "Customer",
        "properties": {
          "account": {
            "type": "string"
          },
          "addDirectoryUserAllowed": {
            "type": "boolean"
          },
          "address": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "adminEmail": {
            "type": "string"
          },
          "adminPassword": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "configurations": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "contactEmail": {
            "type": "string"
          },
          "contactFirstName": {
            "type": "string"
          },
          "contactLastName": {
            "type": "string"
          },
          "contactPhone": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "curatedStream": {
            "$ref": "CuratedStream"
          },
          "customerId": {
            "type": "string"
          },
          "defaultInstance": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "excludedFeatures": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "externalAccounts": {
            "type": "boolean"
          },
          "externalDirectory": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "features": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "feedAll": {
            "$ref": "Feed"
          },
          "feedPublic": {
            "$ref": "Feed"
          },
          "googleCustomer": {
            "type": "boolean"
          },
          "hasGoogleSso": {
            "type": "boolean"
          },
          "hasLiveWebhooks": {
            "type": "boolean"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "httpsOnly": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "identityProviders": {
            "items": {
              "$ref": "CustomerIdentityProvider"
            },
            "type": "array"
          },
          "isReseller": {
            "type": "boolean"
          },
          "licenseExpirationDate": {
            "type": "string"
          },
          "licenseNumber": {
            "format": "int32",
            "type": "integer"
          },
          "loginGoogleOnly": {
            "type": "boolean"
          },
          "loginMethods": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mobileCustomization": {
            "$ref": "MobileCustomization"
          },
          "mobileInstanceKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mobileSearchInstanceKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "nbUsers": {
            "$ref": "CustomerNbUsers"
          },
          "overrides": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "phone": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "publicContentAuthorized": {
            "type": "boolean"
          },
          "registrationAllowed": {
            "type": "boolean"
          },
          "reseller": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "siret": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "ssoEnabled": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "synchronizationInProgress": {
            "type": "boolean"
          },
          "synchronized": {
            "type": "boolean"
          },
          "synchronizedAt": {
            "type": "string"
          },
          "themes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "token": {
            "type": "string"
          },
          "trustedTester": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "userProfilePicture": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomerIdentityProvider": {
        "id": "CustomerIdentityProvider",
        "properties": {
          "account": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "customerKey": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nbUsers": {
            "format": "int32",
            "type": "integer"
          },
          "oauthClientId": {
            "type": "string"
          },
          "oauthClientSecret": {
            "type": "string"
          },
          "samlEntityUrl": {
            "type": "string"
          },
          "samlIdpXmlFile": {
            "$ref": "SamlIdpXmlFile"
          },
          "synchronizationInProgress": {
            "type": "boolean"
          },
          "synchronized": {
            "default": "True",
            "type": "boolean"
          },
          "synchronizedAt": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomerNbUsers": {
        "id": "CustomerNbUsers",
        "properties": {
          "external": {
            "format": "int32",
            "type": "integer"
          },
          "google": {
            "format": "int32",
            "type": "integer"
          },
          "googleEnabled": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CustomerProtoIdUidName": {
        "id": "CustomerProtoIdUidName",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomerProtoIdUidNameDomainAccountStatusCustomerIdSlugSynchronizedHostsExternalDirectoryGoogleCustomerNbUsersLicenseNumberLicenseExpirationDateResellerIsResellerResellerDataThemesConfigurationsOverridesSsoEnabledHttpsOnlyLicenseTypeTrustedTesterFeaturesExcludedFeaturesCreatedAtMobileInstanceKeysMobileCustomizationMobileSearchInstanceKeysContactFirstNameContactLastNameContactEmailContactPhoneCountrySizeHasGoogleSsoIdentityProvidersLoginProviderOnly": {
        "id": "CustomerProtoIdUidNameDomainAccountStatusCustomerIdSlugSynchronizedHostsExternalDirectoryGoogleCustomerNbUsersLicenseNumberLicenseExpirationDateResellerIsResellerResellerDataThemesConfigurationsOverridesSsoEnabledHttpsOnlyLicenseTypeTrustedTesterFeaturesExcludedFeaturesCreatedAtMobileInstanceKeysMobileCustomizationMobileSearchInstanceKeysContactFirstNameContactLastNameContactEmailContactPhoneCountrySizeHasGoogleSsoIdentityProvidersLoginProviderOnly",
        "properties": {
          "account": {
            "type": "string"
          },
          "configurations": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "contactEmail": {
            "type": "string"
          },
          "contactFirstName": {
            "type": "string"
          },
          "contactLastName": {
            "type": "string"
          },
          "contactPhone": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "excludedFeatures": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "externalDirectory": {
            "type": "string"
          },
          "features": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "googleCustomer": {
            "type": "boolean"
          },
          "hasGoogleSso": {
            "type": "boolean"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "httpsOnly": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "identityProviders": {
            "items": {
              "$ref": "CustomerIdentityProvider"
            },
            "type": "array"
          },
          "isReseller": {
            "type": "boolean"
          },
          "licenseExpirationDate": {
            "type": "string"
          },
          "licenseNumber": {
            "format": "int32",
            "type": "integer"
          },
          "licenseType": {
            "type": "string"
          },
          "loginProviderOnly": {
            "type": "string"
          },
          "mobileCustomization": {
            "$ref": "MobileCustomization"
          },
          "mobileInstanceKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mobileSearchInstanceKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "nbUsers": {
            "$ref": "CustomerNbUsers"
          },
          "overrides": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "reseller": {
            "type": "string"
          },
          "resellerData": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "ssoEnabled": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "synchronized": {
            "type": "boolean"
          },
          "themes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "trustedTester": {
            "type": "boolean"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatastoreKeyRepresentation": {
        "id": "DatastoreKeyRepresentation",
        "properties": {
          "kind": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Device": {
        "id": "Device",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "lastConnection": {
            "type": "string"
          },
          "notificationsEnabled": {
            "default": "True",
            "type": "boolean"
          },
          "owner": {
            "type": "string"
          },
          "platform": {
            "enum": [
              "ANDROID",
              "IOS"
            ],
            "enumDescriptions": [
              "",
              ""
            ],
            "type": "string"
          },
          "registrationId": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Directory": {
        "id": "Directory",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "entriesHasMetadata": {
            "type": "boolean"
          },
          "favorites": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "tags": {
            "items": {
              "$ref": "DirectoryTag"
            },
            "type": "array"
          },
          "template": {
            "$ref": "Template"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "userLocalEntryFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DirectoryEntry": {
        "id": "DirectoryEntry",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "deletableFromFavorite": {
            "type": "boolean"
          },
          "directory": {
            "type": "string"
          },
          "externalKey": {
            "type": "string"
          },
          "favoritesCount": {
            "format": "int32",
            "type": "integer"
          },
          "feedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "functionalInnerId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isInFavoriteFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "link": {
            "type": "string"
          },
          "markedAsFavorite": {
            "type": "boolean"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "order": {
            "format": "int32",
            "type": "integer"
          },
          "public": {
            "type": "boolean"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "thumbnail": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "values": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DirectoryEntryProtoIdNameValuesMetadataStatusDirectoryThumbnailCreatedAtUpdatedAtLinkTags": {
        "id": "DirectoryEntryProtoIdNameValuesMetadataStatusDirectoryThumbnailCreatedAtUpdatedAtLinkTags",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "directory": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "thumbnail": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "values": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DirectoryEntryProtoIdNameValuesMetadataStatusDirectoryThumbnailCreatedAtUpdatedAtUserLinkTags": {
        "id": "DirectoryEntryProtoIdNameValuesMetadataStatusDirectoryThumbnailCreatedAtUpdatedAtUserLinkTags",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "directory": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "thumbnail": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "values": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DirectoryTag": {
        "id": "DirectoryTag",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "functionalInnerId": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DriveFolder": {
        "id": "DriveFolder",
        "properties": {
          "driveId": {
            "type": "string"
          },
          "folderId": {
            "type": "string"
          },
          "kind": {
            "default": "drive#file",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Favorite": {
        "id": "Favorite",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "deletable": {
            "default": "True",
            "type": "boolean"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "negative": {
            "type": "boolean"
          },
          "owner": {
            "type": "string"
          },
          "ownerKind": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "target": {
            "type": "string"
          },
          "targetKind": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Feed": {
        "id": "Feed",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "functionalInnerId": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "groups": {
            "items": {
              "$ref": "FeedGroup"
            },
            "type": "array"
          },
          "heritable": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "identityProvider": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "default": "enabled",
            "type": "string"
          },
          "synchronizationInProgress": {
            "type": "boolean"
          },
          "synchronized": {
            "type": "boolean"
          },
          "synchronizedAt": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FeedCollection": {
        "id": "FeedCollection",
        "properties": {
          "items": {
            "items": {
              "$ref": "Feed"
            },
            "type": "array"
          },
          "nextPageToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FeedGroup": {
        "id": "FeedGroup",
        "properties": {
          "group": {
            "type": "string"
          },
          "identityProvider": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FeedProtoIdName": {
        "id": "FeedProtoIdName",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FeedType": {
        "id": "FeedType",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "heritable": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "map": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "order": {
            "format": "int32",
            "type": "integer"
          },
          "synchronized": {
            "type": "boolean"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FilterFields": {
        "id": "FilterFields",
        "properties": {
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "contentTypeIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "featuredOnly": {
            "type": "boolean"
          },
          "highlightedOnly": {
            "type": "boolean"
          },
          "instanceIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "metadataIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Folder": {
        "id": "Folder",
        "properties": {
          "canDelete": {
            "type": "boolean"
          },
          "canEdit": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "isFolder": {
            "type": "boolean"
          },
          "isShared": {
            "type": "boolean"
          },
          "isStarred": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "parentFolder": {
            "type": "string"
          },
          "parentFolderId": {
            "type": "string"
          },
          "path": {
            "items": {
              "$ref": "PathDescriptor"
            },
            "type": "array"
          },
          "properties": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "trashed": {
            "type": "boolean"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GSite": {
        "id": "GSite",
        "properties": {
          "customer": {
            "type": "string"
          },
          "feed": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "parentName": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GeoPtMessage": {
        "description": "ProtoRPC container for GeoPt instances.\n\n  Attributes:\n    lat: Float; The latitude of the point.\n    lon: Float; The longitude of the point.\n  ",
        "id": "GeoPtMessage",
        "properties": {
          "lat": {
            "format": "double",
            "type": "number"
          },
          "lon": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Goal": {
        "id": "Goal",
        "properties": {
          "answer": {
            "type": "string"
          },
          "answers": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "choices": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "completed": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "inProgress": {
            "type": "boolean"
          },
          "instanceId": {
            "type": "string"
          },
          "internalUuid": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "nbCompleted": {
            "format": "int32",
            "type": "integer"
          },
          "nbCompletion": {
            "format": "int32",
            "type": "integer"
          },
          "points": {
            "format": "int32",
            "type": "integer"
          },
          "questId": {
            "type": "string"
          },
          "questionType": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "targetAction": {
            "type": "string"
          },
          "targetCaracteristicKey": {
            "type": "string"
          },
          "targetCaracteristicValue": {
            "format": "int32",
            "type": "integer"
          },
          "targetEntity": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Header": {
        "id": "Header",
        "properties": {
          "author": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "height": {
            "format": "int32",
            "type": "integer"
          },
          "heritable": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "images": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instance": {
            "type": "string"
          },
          "media": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "IndicatorDescriptor": {
        "id": "IndicatorDescriptor",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "fake": {
            "type": "boolean"
          },
          "granularity": {
            "enum": [
              "Daily",
              "Weekly",
              "Monthly"
            ],
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "group": {
            "format": "int64",
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "enum": [
              "UsersCount",
              "UsersHistogram",
              "MostPopularCommunities",
              "MobileUsersCount",
              "ActivityHistogram",
              "PostsHistogram",
              "CommentsHistogram",
              "LikesHistogram",
              "ContentsHistogram",
              "GlobalActivityTotal",
              "TotalNewLikes",
              "TotalNewPosts",
              "TotalNewComments",
              "TotalNewContents",
              "ActiveInactiveUsersCount",
              "MobileTotalUsersCount",
              "NewPostsCount",
              "NewPostsByTypeHistogram",
              "MostPopularPosts",
              "NewCommentsCount",
              "NewCommentsHistogram",
              "NewLikesCount",
              "NewLikesHistogram",
              "NumberOfAnsweredQuestions",
              "CommunityTotals",
              "ContributingUsersCount",
              "ActiveTotal",
              "ContributingInactive",
              "SolvedUnsolved",
              "SolvedTotal",
              "MostSearchedQueryStrings",
              "MostSearchedQueryStringsWithoutResults",
              "MostSearchedObjects",
              "NumberOfSearchesByDay",
              "TotalQueries",
              "MostSearchedContents",
              "MostSearchedPosts",
              "NumberOfNotificationsSent",
              "NumberOfNotificationsRead",
              "ObjectGeneratingTheGreatestNumberOfNotifications",
              "MostReadContent",
              "NumberOfContentsRead",
              "NumberOfNewContents"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "levelFilter": {
            "$ref": "DatastoreKeyRepresentation"
          },
          "modelVersion": {
            "type": "string"
          },
          "period": {
            "$ref": "ReferencePeriod"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "timestamp": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InnerUser": {
        "id": "InnerUser",
        "properties": {
          "email": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Instance": {
        "id": "Instance",
        "properties": {
          "configuration": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "customStylesheet": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "defaultContentLists": {
            "type": "string"
          },
          "defaultHeader": {
            "type": "string"
          },
          "defaultLang": {
            "type": "string"
          },
          "defaultUserDirectory": {
            "type": "string"
          },
          "deletableFromFavorite": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "deviceTheme": {
            "type": "string"
          },
          "favicon": {
            "type": "string"
          },
          "footer": {
            "type": "string"
          },
          "googleAnalytics": {
            "type": "string"
          },
          "googleTagManager": {
            "type": "string"
          },
          "head": {
            "type": "string"
          },
          "homePage": {
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "isDefaultInstance": {
            "type": "boolean"
          },
          "isInFavoriteFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "langs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "logo": {
            "items": {
              "$ref": "InstanceLogo"
            },
            "type": "array"
          },
          "logoUrl": {
            "type": "string"
          },
          "markedAsFavorite": {
            "type": "boolean"
          },
          "menuType": {
            "type": "string"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "override": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "publicContentAuthorized": {
            "default": "True",
            "type": "boolean"
          },
          "restrictToFeeds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "scripts": {
            "items": {
              "$ref": "ResourceFile"
            },
            "type": "array"
          },
          "siblingCredentials": {
            "$ref": "InstanceSiblingCredentials"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "style": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "theme": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstanceLogo": {
        "id": "InstanceLogo",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstanceSiblingCredentials": {
        "id": "InstanceSiblingCredentials",
        "properties": {
          "canViewChildren": {
            "type": "boolean"
          },
          "canViewParent": {
            "type": "boolean"
          },
          "canViewSameLevel": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "IntegrationConf": {
        "id": "IntegrationConf",
        "properties": {
          "authenticationMethod": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "rateLimit": {
            "format": "int64",
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Interest": {
        "id": "Interest",
        "properties": {
          "customContentType": {
            "type": "string"
          },
          "customContentTypeDetails": {
            "$ref": "CustomContentType"
          },
          "customContentTypeTags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customContentTypeTagsDetails": {
            "items": {
              "$ref": "CustomContentTypeTag"
            },
            "type": "array"
          },
          "customerId": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "orMetadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "orMetadataDetails": {
            "items": {
              "$ref": "Metadata"
            },
            "type": "array"
          },
          "uid": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Leaderboard": {
        "id": "Leaderboard",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "entries": {
            "items": {
              "$ref": "LeaderboardEntry"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "scopeDetails": {
            "type": "string"
          },
          "scopeId": {
            "type": "string"
          },
          "scopeKind": {
            "type": "string"
          },
          "seasonDetails": {
            "type": "string"
          },
          "seasonId": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LeaderboardEntry": {
        "id": "LeaderboardEntry",
        "properties": {
          "points": {
            "format": "double",
            "type": "number"
          },
          "userDetails": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LeaderboardPoints": {
        "id": "LeaderboardPoints",
        "properties": {
          "allTime": {
            "format": "double",
            "type": "number"
          },
          "season": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "LeaderboardSeason": {
        "id": "LeaderboardSeason",
        "properties": {
          "currentStatus": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "endAt": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "startAt": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Media": {
        "id": "Media",
        "properties": {
          "canDelete": {
            "type": "boolean"
          },
          "canEdit": {
            "type": "boolean"
          },
          "content": {
            "items": {
              "$ref": "MediaFile"
            },
            "type": "array"
          },
          "contentKey": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "croppedContent": {
            "items": {
              "$ref": "MediaFile"
            },
            "type": "array"
          },
          "customContentTypeKey": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "hasCroppedContent": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "isFolder": {
            "type": "boolean"
          },
          "isShared": {
            "type": "boolean"
          },
          "isStarred": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "override": {
            "type": "string"
          },
          "parentFolder": {
            "type": "string"
          },
          "parentFolderId": {
            "type": "string"
          },
          "path": {
            "items": {
              "$ref": "PathDescriptor"
            },
            "type": "array"
          },
          "properties": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "thumbnail": {
            "type": "string"
          },
          "trashed": {
            "type": "boolean"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MediaFile": {
        "id": "MediaFile",
        "properties": {
          "ext": {
            "type": "string"
          },
          "fileId": {
            "type": "string"
          },
          "height": {
            "format": "int32",
            "type": "integer"
          },
          "lang": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "$ref": "InnerUser"
          },
          "servingUrl": {
            "type": "string"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "width": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Metadata": {
        "id": "Metadata",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "customContentTypes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customer": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "displayInFilter": {
            "type": "boolean"
          },
          "familyKey": {
            "type": "string"
          },
          "functionalInnerId": {
            "type": "string"
          },
          "heritable": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "isVisibleFront": {
            "type": "boolean"
          },
          "multiple": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "sortOrder": {
            "format": "int64",
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "values": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MobileCustomization": {
        "id": "MobileCustomization",
        "properties": {
          "logo": {
            "$ref": "MobileLogo"
          },
          "primaryAsBackground": {
            "type": "boolean"
          },
          "primaryColor": {
            "type": "string"
          },
          "secondaryColor": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MobileLogo": {
        "id": "MobileLogo",
        "properties": {
          "blobKey": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Moderation": {
        "id": "Moderation",
        "properties": {
          "lastReportDate": {
            "type": "string"
          },
          "postId": {
            "type": "string"
          },
          "reports": {
            "items": {
              "$ref": "Report"
            },
            "type": "array"
          },
          "spammerDetails": {
            "type": "string"
          },
          "spammerId": {
            "type": "string"
          },
          "spammerInfo": {
            "$ref": "SpammerInfo"
          }
        },
        "type": "object"
      },
      "Newsletter": {
        "id": "Newsletter",
        "properties": {
          "analytics": {
            "type": "string"
          },
          "contentBlocks": {
            "items": {
              "$ref": "NewsletterContentBlock"
            },
            "type": "array"
          },
          "contents": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "emails": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "sentAt": {
            "type": "string"
          },
          "testEmails": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "theme": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "urlUuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewsletterContentBlock": {
        "id": "NewsletterContentBlock",
        "properties": {
          "contents": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "intro": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Notification": {
        "id": "Notification",
        "properties": {
          "actionCount": {
            "format": "int32",
            "type": "integer"
          },
          "channel": {
            "type": "string"
          },
          "commentDetails": {
            "$ref": "Comment"
          },
          "contentDetails": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "customType": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "externalKey": {
            "type": "string"
          },
          "externalKeyKind": {
            "default": "Content",
            "type": "string"
          },
          "functionalInnerId": {
            "type": "string"
          },
          "group": {
            "type": "boolean"
          },
          "groupDescription": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "hasParentId": {
            "type": "boolean"
          },
          "instanceDetails": {
            "$ref": "Instance"
          },
          "instanceId": {
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          },
          "link": {
            "type": "string"
          },
          "parentContentDetails": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "readDate": {
            "type": "string"
          },
          "recipientId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "unreadNotificationCount": {
            "format": "int32",
            "type": "integer"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotificationAction": {
        "id": "NotificationAction",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "notificationId": {
            "type": "string"
          },
          "senderDetails": {
            "type": "string"
          },
          "senderId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotificationPreferences": {
        "id": "NotificationPreferences",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "emailSummaryEnabled": {
            "type": "boolean"
          },
          "emailSummaryTime": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "mobilePushEnabled": {
            "default": "True",
            "type": "boolean"
          },
          "modelVersion": {
            "type": "string"
          },
          "notificationTypeStatus": {
            "items": {
              "$ref": "NotificationTypeStatus"
            },
            "type": "array"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "timeSlot": {
            "$ref": "TimeSlot"
          },
          "timeSlotEnabled": {
            "type": "boolean"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "vacationMode": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NotificationTypeStatus": {
        "id": "NotificationTypeStatus",
        "properties": {
          "desktop": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "hooks": {
            "items": {
              "$ref": "ServerWebhookWebhookMessagesWebhookPreferenceResponse"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          },
          "mobile": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PathDescriptor": {
        "id": "PathDescriptor",
        "properties": {
          "depth": {
            "format": "int32",
            "type": "integer"
          },
          "folderName": {
            "type": "string"
          },
          "folderUid": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Post": {
        "id": "Post",
        "properties": {
          "alreadyReported": {
            "type": "boolean"
          },
          "analyticsViewSum": {
            "format": "int32",
            "type": "integer"
          },
          "archivers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "attachmentsCount": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "authorDetails": {
            "type": "string"
          },
          "authorId": {
            "type": "string"
          },
          "calendarEventId": {
            "type": "string"
          },
          "canDelete": {
            "type": "boolean"
          },
          "canEdit": {
            "type": "boolean"
          },
          "canMarkRelevant": {
            "type": "boolean"
          },
          "canPin": {
            "type": "boolean"
          },
          "canonicalUrl": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "count": {
            "format": "int64",
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "customContentType": {
            "type": "string"
          },
          "customContentTypeDetails": {
            "type": "string"
          },
          "customContentTypeTags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customer": {
            "type": "string"
          },
          "deleters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "editors": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "endDate": {
            "type": "string"
          },
          "eventEndDate": {
            "type": "string"
          },
          "eventStartDate": {
            "type": "string"
          },
          "excerpt": {
            "type": "string"
          },
          "externalKey": {
            "type": "string"
          },
          "featuredEndDate": {
            "type": "string"
          },
          "featuredFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "featuredStartDate": {
            "type": "string"
          },
          "feedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "files": {
            "items": {
              "$ref": "Media"
            },
            "type": "array"
          },
          "following": {
            "type": "boolean"
          },
          "hasCommentWidget": {
            "type": "boolean"
          },
          "hasRelevantComment": {
            "type": "boolean"
          },
          "header": {
            "type": "string"
          },
          "headerDetails": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "images": {
            "items": {
              "$ref": "Media"
            },
            "type": "array"
          },
          "instance": {
            "type": "string"
          },
          "isCustomizableLayout": {
            "type": "boolean"
          },
          "isDefaultContentList": {
            "type": "boolean"
          },
          "isDefaultUserDirectory": {
            "type": "boolean"
          },
          "isFeatured": {
            "type": "boolean"
          },
          "isHomepage": {
            "type": "boolean"
          },
          "isMerged": {
            "type": "boolean"
          },
          "isNavItem": {
            "type": "boolean"
          },
          "isOpen": {
            "default": "True",
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "lastRevision": {
            "$ref": "ContentLastRevision"
          },
          "liked": {
            "type": "boolean"
          },
          "likes": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "links": {
            "items": {
              "$ref": "AttachedLink"
            },
            "type": "array"
          },
          "location": {
            "$ref": "PostLocation"
          },
          "mediaThumbnail": {
            "$ref": "Media"
          },
          "mentions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mentionsDetails": {
            "items": {
              "$ref": "User"
            },
            "type": "array"
          },
          "mentionsFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "merge": {
            "$ref": "PostMergeReport"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "navigation": {
            "items": {
              "$ref": "ContentNavigation"
            },
            "type": "array"
          },
          "notificationsEnabled": {
            "type": "boolean"
          },
          "notifyAuthor": {
            "type": "boolean"
          },
          "notifyFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notifyUsers": {
            "type": "boolean"
          },
          "parentContentDetails": {
            "type": "string"
          },
          "parentCustomContentType": {
            "type": "string"
          },
          "parentsNavigation": {
            "items": {
              "$ref": "ContentMenuList"
            },
            "type": "array"
          },
          "pinDetails": {
            "$ref": "PostPin"
          },
          "postStatus": {
            "type": "string"
          },
          "postStatusDetails": {
            "$ref": "PostStatus"
          },
          "postType": {
            "default": "DEFAULT",
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "publicationDate": {
            "type": "string"
          },
          "publishers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "readers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "relevantComment": {
            "type": "string"
          },
          "relevantCommentDetails": {
            "$ref": "Comment"
          },
          "reportStatus": {
            "type": "string"
          },
          "score": {
            "$ref": "PostScore"
          },
          "slug": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "subscribedFeedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "subscription": {
            "$ref": "Subscription"
          },
          "subtitle": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tagsDetails": {
            "items": {
              "$ref": "Tag"
            },
            "type": "array"
          },
          "template": {
            "$ref": "Template"
          },
          "thumbnail": {
            "type": "string"
          },
          "thumbnailBlobkey": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedByDetails": {
            "type": "string"
          },
          "updatedById": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "userContent": {
            "$ref": "UserContent"
          },
          "userVote": {
            "type": "string"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          },
          "weight": {
            "format": "double",
            "type": "number"
          },
          "writer": {
            "type": "string"
          },
          "writerDetails": {
            "type": "string"
          },
          "writerId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PostLocation": {
        "id": "PostLocation",
        "properties": {
          "coordinates": {
            "$ref": "GeoPtMessage",
            "description": "ProtoRPC container for GeoPt instances.\n\n  Attributes:\n    lat: Float; The latitude of the point.\n    lon: Float; The longitude of the point.\n  "
          },
          "createdAt": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PostMergeReport": {
        "id": "PostMergeReport",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "hasPendingSlaves": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "masterPost": {
            "type": "string"
          },
          "masterPostDetails": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "reportedAt": {
            "type": "string"
          },
          "reportedBy": {
            "type": "string"
          },
          "slavesPosts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "slavesPostsDetails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "validatedAt": {
            "type": "string"
          },
          "validatedBy": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PostPin": {
        "id": "PostPin",
        "properties": {
          "pinDate": {
            "type": "string"
          },
          "pinnedBy": {
            "type": "string"
          },
          "sortOrder": {
            "format": "int32",
            "type": "integer"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PostScore": {
        "id": "PostScore",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "total": {
            "format": "int32",
            "type": "integer"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "votesDown": {
            "format": "int32",
            "type": "integer"
          },
          "votesUp": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PostStatus": {
        "id": "PostStatus",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Quest": {
        "id": "Quest",
        "properties": {
          "authorDetails": {
            "type": "string"
          },
          "authorId": {
            "type": "string"
          },
          "available": {
            "type": "boolean"
          },
          "badgeId": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "endAt": {
            "type": "string"
          },
          "feedIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "feedsDetails": {
            "items": {
              "$ref": "Feed"
            },
            "type": "array"
          },
          "goalIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "goals": {
            "items": {
              "$ref": "Goal"
            },
            "type": "array"
          },
          "goalsNumber": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "inProgress": {
            "type": "boolean"
          },
          "instanceId": {
            "type": "string"
          },
          "personal": {
            "default": "True",
            "type": "boolean"
          },
          "points": {
            "type": "string"
          },
          "replayable": {
            "type": "boolean"
          },
          "rewardIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "rewards": {
            "items": {
              "$ref": "Reward"
            },
            "type": "array"
          },
          "showedOff": {
            "type": "boolean"
          },
          "startAt": {
            "type": "string"
          },
          "status": {
            "default": "DRAFT",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "userRewardId": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ReferencePeriod": {
        "id": "ReferencePeriod",
        "properties": {
          "beginningAt": {
            "type": "string"
          },
          "endAt": {
            "type": "string"
          },
          "kind": {
            "default": "Week",
            "enum": [
              "Week",
              "TwoWeeks",
              "Month",
              "ThreeMonths",
              "Custom",
              "Day",
              "Unlimited"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Report": {
        "id": "Report",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "reportType": {
            "type": "string"
          },
          "reporterDetails": {
            "type": "string"
          },
          "reporterId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceFile": {
        "id": "ResourceFile",
        "properties": {
          "content": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Reward": {
        "id": "Reward",
        "properties": {
          "authorDetails": {
            "type": "string"
          },
          "count": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "image": {
            "$ref": "RewardMedia"
          },
          "instanceId": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RewardMedia": {
        "id": "RewardMedia",
        "properties": {
          "color": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "fontColor": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "pictureOnly": {
            "type": "boolean"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Role": {
        "id": "Role",
        "properties": {
          "authorizations": {
            "items": {
              "$ref": "Authorization"
            },
            "type": "array"
          },
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "feeds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "heritable": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "users": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SamlIdpXmlFile": {
        "id": "SamlIdpXmlFile",
        "properties": {
          "file": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "format": "int64",
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerAnalyticsIndicatorsMessagesAnalyticsRequest": {
        "id": "ServerAnalyticsIndicatorsMessagesAnalyticsRequest",
        "properties": {
          "acceptFakes": {
            "description": "Accept fake indicators.",
            "type": "boolean"
          },
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "endAt": {
            "description": "The end date of the reference period (default: today).",
            "format": "date-time",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "indicatorCategories": {
            "description": "The indicator categories.",
            "items": {
              "enum": [
                "All",
                "Customer",
                "Community",
                "Search",
                "Notifications",
                "Contents",
                "Site"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "indicators": {
            "description": "The kind of the indicators.",
            "items": {
              "enum": [
                "UsersCount",
                "UsersHistogram",
                "MostPopularCommunities",
                "MobileUsersCount",
                "ActivityHistogram",
                "PostsHistogram",
                "CommentsHistogram",
                "LikesHistogram",
                "ContentsHistogram",
                "GlobalActivityTotal",
                "TotalNewLikes",
                "TotalNewPosts",
                "TotalNewComments",
                "TotalNewContents",
                "ActiveInactiveUsersCount",
                "MobileTotalUsersCount",
                "NewPostsCount",
                "NewPostsByTypeHistogram",
                "MostPopularPosts",
                "NewCommentsCount",
                "NewCommentsHistogram",
                "NewLikesCount",
                "NewLikesHistogram",
                "NumberOfAnsweredQuestions",
                "CommunityTotals",
                "ContributingUsersCount",
                "ActiveTotal",
                "ContributingInactive",
                "SolvedUnsolved",
                "SolvedTotal",
                "MostSearchedQueryStrings",
                "MostSearchedQueryStringsWithoutResults",
                "MostSearchedObjects",
                "NumberOfSearchesByDay",
                "TotalQueries",
                "MostSearchedContents",
                "MostSearchedPosts",
                "NumberOfNotificationsSent",
                "NumberOfNotificationsRead",
                "ObjectGeneratingTheGreatestNumberOfNotifications",
                "MostReadContent",
                "NumberOfContentsRead",
                "NumberOfNewContents"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "instance": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "levelFilter": {
            "$ref": "ServerAnalyticsIndicatorsMessagesLevelFilter",
            "description": "The scope over which we should compute the asked indicator."
          },
          "maxResults": {
            "description": "The maximum number of results, in the case of a details indicator.",
            "format": "int64",
            "type": "string"
          },
          "period": {
            "description": "The reference period over which the indicator should be computed.",
            "enum": [
              "Week",
              "TwoWeeks",
              "Month",
              "ThreeMonths",
              "Custom",
              "Day",
              "Unlimited"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerAnalyticsIndicatorsMessagesGenericAnalyticsResponse": {
        "id": "ServerAnalyticsIndicatorsMessagesGenericAnalyticsResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "indicators": {
            "description": "The requested indicators.",
            "items": {
              "$ref": "IndicatorDescriptor"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerAnalyticsIndicatorsMessagesLevelFilter": {
        "id": "ServerAnalyticsIndicatorsMessagesLevelFilter",
        "properties": {
          "kind": {
            "description": "The kind of entity being filtered on.",
            "enum": [
              "Customer",
              "Instance",
              "Community",
              "Content"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerAnalyticsv2IndicatorsMessagesAnalyticsPlatformRequest": {
        "id": "ServerAnalyticsv2IndicatorsMessagesAnalyticsPlatformRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "comparePeriod": {
            "description": "The reference period over which the indicator should be computed.\n  - Weekly: to compare with the value the KPI had one week before.\n  - Monthly: to compare with the value the KPI had one month before.\n  - Yearly: to compare with the value the KPI had one year before.",
            "enum": [
              "Weekly",
              "Monthly",
              "Yearly"
            ],
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "indicators": {
            "description": "The kind of the indicators is an array of string that have acceptable values. If multiple values are given, multiple indicators will be returned.\nAcceptable values are :\n  - ActiveUsers: Number of Users, in the filtered user subset, connected to any part of the platform at least once during a given Timeframe.\n  - ParticipatingUsers: Number of active users, in the Filtered User subset, who have liked, commented, posted in a community or created a content at least once during a given Timeframe\n  - NewContent: Number of content items created on all the platform sites during the Timeframe by the Filtered User subset.\n  - NewPosts: Number of posts created on all the communities of all the platform sites during the Timeframe, by the Filtered User subset\n  - NewReactions: Number of reactions (likes + comments) on all the content items (content and comments) of all the platform sites and on all the post items (posts and comments) of all the communities on all the platform sites during the Timeframe, realised by the Filtered User subset\n  - ConnectionTime: Average time of a connection calculated over all  users in the Filtered User subset during the selected Timeframe.\n  - ConnectionFrequency: Frequency of connection expressed as average number of times a user connects to the site in the time of the selected Timeframe calculated over all users in the Filtered User subset for all the connections established in the selected Timeframe.\n  - Connections: Average time of a connection calculated over all  users in the Filtered User subset during the selected Timeframe.\n  - Consultations: Count all connections visiting more than one page\n  - Participations: Count all connections liking, commenting or creating posts or content.\n  - Creations: Count all connections creating posts or content. \n  - BounceRate: The bounce rate count all connections visiting just one page and/or launching business apps.\n  - ActiveSites: Number of sites that have registered at least one view during the Timeframe, by the Filtered User subset.\n  - ActiveCommunities: Number of communities (on all platform sites) that have registered at least one view during the Timeframe, by the Filtered User subset.\n  - OnboardedUsers: Number of Current Users, in the Filtered User subset, connected to any part of the platform at least once since the launch of the intranet\n  - Devices: Percentage of each type of device used to connect to any part of the platform\n",
            "items": {
              "enum": [
                "ActiveUsers",
                "ParticipatingUsers",
                "NewContent",
                "NewPosts",
                "NewReactions",
                "ConnectionTime",
                "ConnectionFrequency",
                "Connections",
                "Consultations",
                "Participations",
                "Creations",
                "BounceRate",
                "ActiveSites",
                "ActiveCommunities",
                "OnboardedUsers",
                "Devices"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "period": {
            "description": "The reference period over which the indicator should be computed.\n  - Week: to calculate KPI over a week long period.\n  - Month: to calculate KPI over a month long period.\n  - Year: to calculate KPI over a year long period.",
            "enum": [
              "Week",
              "Month",
              "Year"
            ],
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerAnalyticsv2IndicatorsMessagesGenericAnalyticsResponse": {
        "id": "ServerAnalyticsv2IndicatorsMessagesGenericAnalyticsResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "indicators": {
            "description": "The requested indicators.",
            "items": {
              "$ref": "ServerAnalyticsv2IndicatorsMessagesIndicatorResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerAnalyticsv2IndicatorsMessagesIndicatorResponse": {
        "id": "ServerAnalyticsv2IndicatorsMessagesIndicatorResponse",
        "properties": {
          "type": {
            "description": "TODO LA DESCRIPTION.",
            "enum": [
              "ActiveUsers",
              "ParticipatingUsers",
              "NewContent",
              "NewPosts",
              "NewReactions",
              "ConnectionTime",
              "ConnectionFrequency",
              "Connections",
              "Consultations",
              "Participations",
              "Creations",
              "BounceRate",
              "ActiveSites",
              "ActiveCommunities",
              "OnboardedUsers",
              "Devices"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "values": {
            "description": "The values for the requested indicator.",
            "items": {
              "$ref": "ServerAnalyticsv2IndicatorsMessagesIndicatorValue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerAnalyticsv2IndicatorsMessagesIndicatorValue": {
        "id": "ServerAnalyticsv2IndicatorsMessagesIndicatorValue",
        "properties": {
          "name": {
            "description": "The name of the indicator. The values returned can be of the following:\n  -  value: the default KPI value. Exemple : For the ParticipatingUsers KPI, it will be thenumber of participating users\n  - average: the average KPI value on a given Timerange. Exemple : For the ParticipatingUsers KPI, if will be the average number of participating users on a given Timerange\n  - total: the encapsulating KPI value. Exemple : For the ParticipatingUsers KPI, it will be thenumber of active users as we are interested in comparing the number of participating users to thenumber of active users\n  - best: the best value attained for a KPI since the creation of the platform.\n  - compare: the value this KPI had the week/month/year before depending on the comparePeriod.\n  - special: a special value of interest for the given KPI. Exemple : for the ParticipatingUsers KPI, it represents the Star Users (i.g. Users with a high level of participation).",
            "enum": [
              "value",
              "average",
              "total",
              "best",
              "compare",
              "special",
              "desktop",
              "mobile",
              "tablet",
              "apps"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "value": {
            "description": "The value of the indicator.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ServerCalendarCalendarMessagesCalendarEventListResponse": {
        "description": "\n    Resource for a response of a Calendar's event list request\n    ",
        "id": "ServerCalendarCalendarMessagesCalendarEventListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of events.",
            "items": {
              "$ref": "ServerCalendarCalendarMessagesEventResource"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerCalendarCalendarMessagesCalendarGetResponse": {
        "description": "\n    Resource for a response of a Calendar's get request\n    ",
        "id": "ServerCalendarCalendarMessagesCalendarGetResponse",
        "properties": {
          "calendar": {
            "$ref": "ServerCalendarCalendarMessagesCalendarResource",
            "description": "The calendar."
          },
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCalendarCalendarMessagesCalendarListResponse": {
        "description": "\n    Resource for a response of a Calendar's list request\n    ",
        "id": "ServerCalendarCalendarMessagesCalendarListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of calendars.",
            "items": {
              "$ref": "ServerCalendarCalendarMessagesCalendarResource"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerCalendarCalendarMessagesCalendarResource": {
        "description": "\n    Resource for a CalendarList that can list all calendar available\n    ",
        "id": "ServerCalendarCalendarMessagesCalendarResource",
        "properties": {
          "description": {
            "description": "The description of the calendar.",
            "type": "string"
          },
          "id": {
            "description": "The ID of the calendar.",
            "type": "string"
          },
          "summary": {
            "description": "The summary of the calendar.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCalendarCalendarMessagesEventResource": {
        "description": "\n    Resource for a Calendar's file\n    ",
        "id": "ServerCalendarCalendarMessagesEventResource",
        "properties": {
          "attendees": {
            "description": "The list of attendees of the event.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "calendarId": {
            "description": "The ID of the Google calendar of the event.",
            "type": "string"
          },
          "colorId": {
            "description": "The color of the event.",
            "type": "string"
          },
          "description": {
            "description": "The description of the event.",
            "type": "string"
          },
          "end": {
            "description": "The end date of the event.",
            "type": "string"
          },
          "hangoutLink": {
            "description": "The link to launch the Google Hangout associated with the event.",
            "type": "string"
          },
          "htmlLink": {
            "description": "The link to open the event in Google Calendar.",
            "type": "string"
          },
          "location": {
            "description": "The location of the event.",
            "type": "string"
          },
          "start": {
            "description": "The start date of the event.",
            "type": "string"
          },
          "summary": {
            "description": "The summary of the event.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesAssignment": {
        "description": "\n    Assgnment object.\n    ",
        "id": "ServerClassroomClassroomMessagesAssignment",
        "properties": {
          "studentWorkFolder": {
            "$ref": "ServerClassroomClassroomMessagesDriveFile",
            "description": "Drive folder where attachments from student submissions are placed.\n                                    This is only populated for course teachers and administrators."
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesCourse": {
        "description": "\n    The course object.\n    ",
        "id": "ServerClassroomClassroomMessagesCourse",
        "properties": {
          "alternateLink": {
            "description": "Absolute link to this course in the Classroom web UI.",
            "type": "string"
          },
          "calendarId": {
            "description": "The Calendar ID for a calendar that all course members can see, to which Classroom adds\n                          events for course work and announcements in the course.",
            "type": "string"
          },
          "courseGroupEmail": {
            "description": "The email address of a Google group containing all members of the course.",
            "type": "string"
          },
          "courseMaterialSets": {
            "$ref": "ServerClassroomClassroomMessagesCourseMaterialSet",
            "description": "Information about a Drive Folder that is shared with all teachers of the course."
          },
          "courseState": {
            "description": "State of the course.",
            "type": "string"
          },
          "creationTime": {
            "description": "Creation time of the course.",
            "type": "string"
          },
          "description": {
            "description": "Optional description.",
            "type": "string"
          },
          "descriptionHeading": {
            "description": "Optional heading for the description. ",
            "type": "string"
          },
          "enrollmentCode": {
            "description": "Enrollment code to use when joining this course.",
            "type": "string"
          },
          "guardiansEnabled": {
            "description": "Whether or not guardian notifications are enabled for this course.",
            "type": "boolean"
          },
          "id": {
            "description": "Identifier for this course assigned by Classroom.",
            "type": "string"
          },
          "name": {
            "description": "Name of the course.",
            "type": "string"
          },
          "ownerId": {
            "description": "The identifier of the owner of a course.",
            "type": "string"
          },
          "room": {
            "description": "Optional room location.",
            "type": "string"
          },
          "section": {
            "description": "Section of the course.",
            "type": "string"
          },
          "teacherFolder": {
            "$ref": "ServerClassroomClassroomMessagesTeacherFolder",
            "description": "Information about a Drive Folder that is shared with all teachers of the course."
          },
          "teacherGroupEmail": {
            "description": "The email address of a Google group containing all teachers of the course.",
            "type": "string"
          },
          "updateTime": {
            "description": "Time of the most recent update to this course.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesCourseListResponse": {
        "description": "\n    Resource for a Course list response.\n    ",
        "id": "ServerClassroomClassroomMessagesCourseListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerClassroomClassroomMessagesCourse"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesCourseMaterial": {
        "description": "\n    CourseMaterial object.\n    ",
        "id": "ServerClassroomClassroomMessagesCourseMaterial",
        "properties": {
          "driveFile": {
            "$ref": "ServerClassroomClassroomMessagesDriveFile",
            "description": "Google Drive file attachment."
          },
          "form": {
            "$ref": "ServerClassroomClassroomMessagesForm",
            "description": "Google Forms attachment."
          },
          "link": {
            "$ref": "ServerClassroomClassroomMessagesLink",
            "description": "Link atatchment."
          },
          "youtubeVideo": {
            "$ref": "ServerClassroomClassroomMessagesYouTubeVideo",
            "description": "Youtube video attachment."
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesCourseMaterialSet": {
        "description": "\n    CourseMaterialSet object.\n    ",
        "id": "ServerClassroomClassroomMessagesCourseMaterialSet",
        "properties": {
          "materials": {
            "$ref": "ServerClassroomClassroomMessagesCourseMaterial",
            "description": "Materials attached to this set."
          },
          "title": {
            "description": "Title for this set.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesCourseWork": {
        "description": "\n    The coursework object.\n    ",
        "id": "ServerClassroomClassroomMessagesCourseWork",
        "properties": {
          "alternateLink": {
            "description": "Absolute link to this course work in the Classroom web UI.\n                                                      This is only populated if state is PUBLISHED.",
            "type": "string"
          },
          "assignment": {
            "$ref": "ServerClassroomClassroomMessagesAssignment",
            "description": "Assignment details. This is populated only when workType is ASSIGNMENT."
          },
          "associatedWithDeveloper": {
            "description": "Whether this course work item is associated with the Developer\n                                       Console project making the request.",
            "type": "boolean"
          },
          "courseId": {
            "description": "Identifier of the course.",
            "type": "string"
          },
          "creationTime": {
            "description": "Timestamp when this course work was created.",
            "type": "string"
          },
          "description": {
            "description": "Optional description.",
            "type": "string"
          },
          "dueDate": {
            "$ref": "ServerClassroomClassroomMessagesDate",
            "description": "Optional date, in UTC, that submissions for this this course\n                                                       work are due. This must be specified if dueTime is specified."
          },
          "dueTime": {
            "$ref": "ServerClassroomClassroomMessagesTimeOfDay",
            "description": "Optional time of day, in UTC, that submissions for this this course work are due.\n                       This must be specified if dueDate is specified."
          },
          "id": {
            "description": "Identifier for this course assigned by Classroom.",
            "type": "string"
          },
          "materials": {
            "$ref": "ServerClassroomClassroomMessagesMaterial",
            "description": "Additional materials. CourseWork must have no more than 20 material items."
          },
          "maxPoints": {
            "description": "Maximum grade for this course work. If zero or unspecified, this assignment is considered\n                         ungraded. This must be a non-negative integer value.",
            "format": "int64",
            "type": "string"
          },
          "multipleChoiceQuestion": {
            "$ref": "ServerClassroomClassroomMessagesMultipleChoiceQuestion",
            "description": "Multiple choice question details."
          },
          "scheduledTime": {
            "description": "Optional timestamp when this course work is scheduled to be published.",
            "type": "string"
          },
          "state": {
            "description": "Additional materials.",
            "type": "string"
          },
          "submissionModificationMode": {
            "description": "Setting to determine when students are allowed to modify submissions.\n                                          If unspecified, the default value is MODIFIABLE_UNTIL_TURNED_IN.",
            "type": "string"
          },
          "title": {
            "description": "Title for this set.",
            "type": "string"
          },
          "updateTime": {
            "description": "Timestamp of the most recent change to this course work.",
            "type": "string"
          },
          "workType": {
            "description": "Type of this course work.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesCourseWorkListResponse": {
        "description": "\n    Resource for a CourseWork list response.\n    ",
        "id": "ServerClassroomClassroomMessagesCourseWorkListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerClassroomClassroomMessagesCourseWork"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesDate": {
        "description": "\n    Date object.\n    ",
        "id": "ServerClassroomClassroomMessagesDate",
        "properties": {
          "day": {
            "description": "Day of month. Must be from 1 to 31 and valid for the year and month,\n                                                or 0 if specifying a year/month where the day is not significant.",
            "format": "int64",
            "type": "string"
          },
          "month": {
            "description": "Month of year. Must be from 1 to 12.",
            "format": "int64",
            "type": "string"
          },
          "year": {
            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date\n                                              without a year.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesDriveFile": {
        "description": "\n    DriveFile object.\n    ",
        "id": "ServerClassroomClassroomMessagesDriveFile",
        "properties": {
          "alternateLink": {
            "description": "URL that can be used to access the Drive item.",
            "type": "string"
          },
          "id": {
            "description": "Drive API resource ID.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the Drive item.",
            "type": "string"
          },
          "title": {
            "description": "Title of the Drive item.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesForm": {
        "description": "\n    Form object.\n    ",
        "id": "ServerClassroomClassroomMessagesForm",
        "properties": {
          "formUrl": {
            "description": "URL of the form.",
            "type": "string"
          },
          "responseUrl": {
            "description": "URL of the form responses document.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the Form.",
            "type": "string"
          },
          "title": {
            "description": "Title of the Form.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesGlobalPermission": {
        "description": "\n    Global permission object.\n    ",
        "id": "ServerClassroomClassroomMessagesGlobalPermission",
        "properties": {
          "permission": {
            "description": "Type of this course work.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesGrade": {
        "description": "\n    Grade of student.\n    ",
        "id": "ServerClassroomClassroomMessagesGrade",
        "properties": {
          "courseName": {
            "description": "Name of the course",
            "type": "string"
          },
          "courseWorkName": {
            "description": "Name of the coursework",
            "type": "string"
          },
          "grade": {
            "description": "Grade assigned",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesGradeListResponse": {
        "description": "\n    Resource for a response of a Submission list request when we want grades only.\n    ",
        "id": "ServerClassroomClassroomMessagesGradeListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerClassroomClassroomMessagesGrade"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesLink": {
        "description": "\n    Link object.\n    ",
        "id": "ServerClassroomClassroomMessagesLink",
        "properties": {
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the YouTube video.",
            "type": "string"
          },
          "title": {
            "description": "Title of the target of the URL.",
            "type": "string"
          },
          "url": {
            "description": "URL to link to.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesMaterial": {
        "description": "\n    Material object\n    ",
        "id": "ServerClassroomClassroomMessagesMaterial",
        "properties": {
          "form": {
            "$ref": "ServerClassroomClassroomMessagesForm",
            "description": "Google Forms attachment."
          },
          "link": {
            "$ref": "ServerClassroomClassroomMessagesLink",
            "description": "Link atatchment."
          },
          "sharedDriveFile": {
            "$ref": "ServerClassroomClassroomMessagesSharedDriveFile",
            "description": "Google Drive file attachment."
          },
          "youtubeVideo": {
            "$ref": "ServerClassroomClassroomMessagesYouTubeVideo",
            "description": "Youtube video attachment."
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesMultipleChoiceQuestion": {
        "description": "\n    Multiple choice question object.\n    ",
        "id": "ServerClassroomClassroomMessagesMultipleChoiceQuestion",
        "properties": {
          "choices": {
            "description": "Possible choices.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesName": {
        "description": "\n    Name object.\n    ",
        "id": "ServerClassroomClassroomMessagesName",
        "properties": {
          "familyName": {
            "description": "The user's last name.",
            "type": "string"
          },
          "fullName": {
            "description": "The user's full name formed by concatenating the first and last name values.",
            "type": "string"
          },
          "givenName": {
            "description": "The user's first name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesSharedDriveFile": {
        "description": "\n    Shared Drive file object.\n    ",
        "id": "ServerClassroomClassroomMessagesSharedDriveFile",
        "properties": {
          "driveFile": {
            "$ref": "ServerClassroomClassroomMessagesDriveFile",
            "description": "Google Drive file attachment."
          },
          "shareMode": {
            "description": "State of this submission.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesSubmission": {
        "description": "\n    The submission object.\n    ",
        "id": "ServerClassroomClassroomMessagesSubmission",
        "properties": {
          "alternateLink": {
            "description": "Absolute link to the submission in the Classroom web UI.",
            "type": "string"
          },
          "assignedGrade": {
            "description": "Optional grade. If unset, no grade was set. This must be a non-negative integer value.",
            "format": "int64",
            "type": "string"
          },
          "associatedWithDeveloper": {
            "description": "Whether this student submission is associated with the Developer\n                                       Console project making the request.",
            "type": "boolean"
          },
          "courseId": {
            "description": "Identifier of the course.",
            "type": "string"
          },
          "courseWorkId": {
            "description": "Identifier for the course work this corresponds to.",
            "type": "string"
          },
          "courseWorkType": {
            "description": "Type of course work this submission is for.",
            "type": "string"
          },
          "creationTime": {
            "description": "Creation time of this submission.",
            "type": "string"
          },
          "draftGrade": {
            "description": "Optional pending grade. If unset, no grade was set.\n                                                      This must be a non-negative integer value.",
            "format": "int64",
            "type": "string"
          },
          "id": {
            "description": "Classroom-assigned Identifier for the student submission.",
            "type": "string"
          },
          "late": {
            "description": "Whether this submission is late",
            "type": "boolean"
          },
          "state": {
            "description": "State of this submission.",
            "type": "string"
          },
          "updateTime": {
            "description": "Last update time of this submission.",
            "type": "string"
          },
          "userId": {
            "description": "Identifier for the student that owns this submission.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesSubmissionListResponse": {
        "description": "\n    Resource for a response of a Submission list response.\n    ",
        "id": "ServerClassroomClassroomMessagesSubmissionListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerClassroomClassroomMessagesSubmission"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesTeacherFolder": {
        "description": "\n    TeacherFolder object.\n    ",
        "id": "ServerClassroomClassroomMessagesTeacherFolder",
        "properties": {
          "alternateLink": {
            "description": "URL that can be used to access the Drive folder.",
            "type": "string"
          },
          "id": {
            "description": "Drive API resource ID.",
            "type": "string"
          },
          "title": {
            "description": "Title of the Drive folder..",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesTimeOfDay": {
        "description": "\n    Time object.\n    ",
        "id": "ServerClassroomClassroomMessagesTimeOfDay",
        "properties": {
          "hours": {
            "description": "Hours of day in 24 hour format. Should be from 0 to 23.\n                                                  An API may choose to allow the value \"24:00:00\" for scenarios\n                                                  like business closing time.",
            "format": "int64",
            "type": "string"
          },
          "minutes": {
            "description": "Minutes of hour of day. Must be from 0 to 59.",
            "format": "int64",
            "type": "string"
          },
          "nanos": {
            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
            "format": "int64",
            "type": "string"
          },
          "seconds": {
            "description": "Seconds of minutes of the time. Must normally be from 0 to 59.\n                                                    An API may allow the value 60 if it allows leap-seconds.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesUserProfile": {
        "description": "\n    User Profile object.\n    ",
        "id": "ServerClassroomClassroomMessagesUserProfile",
        "properties": {
          "emailAddress": {
            "description": "Email address of the user.",
            "type": "string"
          },
          "id": {
            "description": "Identifier of the user.",
            "type": "string"
          },
          "name": {
            "$ref": "ServerClassroomClassroomMessagesName",
            "description": "Name of the user."
          },
          "permissions": {
            "description": "Global permissions of the user.",
            "items": {
              "$ref": "ServerClassroomClassroomMessagesGlobalPermission"
            },
            "type": "array"
          },
          "photoUrl": {
            "description": "URL of user's profile photo.",
            "type": "string"
          },
          "verifiedTeacher": {
            "description": "Represents whether a G Suite for Education user's domain\n                                                        administrator has explicitly verified them as being a teacher.\n                                                        If the user is not a member of a G Suite for Education domain,\n                                                        than this field will always be false. ",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerClassroomClassroomMessagesYouTubeVideo": {
        "description": "\n    Youtube video object.\n    ",
        "id": "ServerClassroomClassroomMessagesYouTubeVideo",
        "properties": {
          "alternateLink": {
            "description": "URL that can be used to view the YouTube video.",
            "type": "string"
          },
          "id": {
            "description": "YouTube API resource ID.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the Drive item.",
            "type": "string"
          },
          "title": {
            "description": "Title of the YouTube video.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCommentCommentMessagesCommentListResponse": {
        "description": "\n    Resource for a Comment list response\n    ",
        "id": "ServerCommentCommentMessagesCommentListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Comment"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerCommonEndpointMessagesCompleteDatastoreKey": {
        "description": "\n    Datastore key for the get endpoints methods\n    ",
        "id": "ServerCommonEndpointMessagesCompleteDatastoreKey",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "kind": {
            "description": "The kind of the entity.",
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCommonEndpointMessagesDatastoreKey": {
        "description": "\n    Datastore key for the get endpoints methods\n    ",
        "id": "ServerCommonEndpointMessagesDatastoreKey",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCommonEndpointMessagesDatastoreKeyErrorReason": {
        "description": "\n    Error and its relative object ID\n    ",
        "id": "ServerCommonEndpointMessagesDatastoreKeyErrorReason",
        "properties": {
          "reason": {
            "description": "The error description.",
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCommonEndpointMessagesDatastoreKeyList": {
        "description": "\n    Datastore key for the get endpoints methods\n    ",
        "id": "ServerCommonEndpointMessagesDatastoreKeyList",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "uid": {
            "description": "The list of unique identifiers.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerCommonEndpointMessagesDatastoreKeyWithErrorList": {
        "description": "\n    Datastore key list and an error list for endpoints methods\n    ",
        "id": "ServerCommonEndpointMessagesDatastoreKeyWithErrorList",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "errors": {
            "description": "A list of errors",
            "items": {
              "$ref": "ServerCommonEndpointMessagesDatastoreKeyErrorReason"
            },
            "type": "array"
          },
          "uid": {
            "description": "The list of unique identifiers.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerCommonEndpointMessagesMetadataClauses": {
        "description": "\n    Resource for a list of metadata lists. Allows to represent a metadata query\n    ",
        "id": "ServerCommonEndpointMessagesMetadataClauses",
        "properties": {
          "metadata": {
            "description": "The list of metadata clauses.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerCommunityTemplateCommunityTemplateMessagesCommunityTemplateListResponse": {
        "description": "\n    Resource for a response of a Template's list request\n    ",
        "id": "ServerCommunityTemplateCommunityTemplateMessagesCommunityTemplateListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "errors": {
            "description": "The list of errors and their relative target.",
            "items": {
              "$ref": "ServerCommunityTemplateCommunityTemplateMessagesErrorReason"
            },
            "type": "array"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "CommunityTemplate"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerCommunityTemplateCommunityTemplateMessagesErrorReason": {
        "description": "\n    Error and its relative object\n    ",
        "id": "ServerCommunityTemplateCommunityTemplateMessagesErrorReason",
        "properties": {
          "reason": {
            "description": "The error description.",
            "type": "string"
          },
          "targetId": {
            "description": "The invalid community template.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityCommunityMessagesCommunityListRequest": {
        "description": "\n    Resource for a a Community's list request\n    ",
        "id": "ServerContentCommunityCommunityMessagesCommunityListRequest",
        "properties": {
          "action": {
            "description": "\n        The authorized action used to filter the list.<br>If no action, user must be super or instance administrator.\n        ",
            "enum": [
              "PAGE_READ",
              "PAGE_EDIT",
              "PAGE_DELETE",
              "NEWS_READ",
              "NEWS_EDIT",
              "NEWS_DELETE",
              "PAGE_ARCHIVE",
              "PAGE_PUBLISH",
              "NEWS_PUBLISH",
              "METADATA_EDIT",
              "METADATA_DELETE",
              "ROLE_READ",
              "ROLE_EDIT",
              "ROLE_DELETE",
              "NEWS_LIST_READ",
              "NEWS_LIST_EDIT",
              "NEWS_LIST_DELETE",
              "DIRECTORY_READ",
              "DIRECTORY_EDIT",
              "DIRECTORY_DELETE",
              "MENU_READ",
              "MENU_EDIT",
              "MENU_DELETE",
              "TEMPLATE_READ",
              "TEMPLATE_EDIT",
              "TEMPLATE_DELETE",
              "INSTANCE_EDIT",
              "INSTANCE_DELETE",
              "FEED_EDIT",
              "FEED_DELETE",
              "MEDIA_EDIT",
              "MEDIA_DELETE",
              "USER_READ",
              "USER_EDIT",
              "USER_DELETE",
              "RESELLER_READ",
              "RESELLER_EDIT",
              "POST_EDIT",
              "GROUP_EDIT",
              "DIRECTORY_ENTRY_FAVORITES_EDIT",
              "NEWSLETTER_READ",
              "NEWSLETTER_EDIT",
              "NEWSLETTER_DELETE",
              "CUSTOM_CONTENT_TYPE_EDIT",
              "CUSTOM_CONTENT_TYPE_DELETE",
              "CUSTOM_CONTENT_READ",
              "CUSTOM_CONTENT_PUBLISH",
              "CUSTOM_CONTENT_EDIT",
              "CUSTOM_CONTENT_DELETE",
              "CUSTOM_LIST_READ",
              "CUSTOM_LIST_EDIT",
              "CUSTOM_LIST_DELETE",
              "CUSTOM_LIST_PUBLISH",
              "COMMUNITY_READ",
              "COMMUNITY_EDIT",
              "COMMUNITY_DELETE",
              "USER_DIRECTORY_READ",
              "USER_DIRECTORY_EDIT",
              "USER_DIRECTORY_DELETE",
              "CUSTOM_READ",
              "CUSTOM_EDIT",
              "CUSTOM_DELETE",
              "TUTORIAL_READ",
              "TUTORIAL_EDIT",
              "TUTORIAL_DELETE",
              "POST_READ",
              "POST_DELETE",
              "CUSTOM_CONTENT_ARCHIVE",
              "MENU_DROP",
              "STYLE_READ",
              "STYLE_EDIT",
              "STYLE_DELETE",
              "GLOBAL_WIDGET_EDIT",
              "TARGET_EDIT",
              "DIRECTORY_ENTRY_READ",
              "DIRECTORY_ENTRY_EDIT",
              "DIRECTORY_ENTRY_DELETE",
              "COMMUNITY_PUBLISH",
              "ANALYTICS_READ",
              "GAMIFICATION_ADMIN"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "author": {
            "description": "The email of the creator of the community.",
            "type": "string"
          },
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "combinedMetadata": {
            "description": "\n        The list of metadata lists.\n        ",
            "items": {
              "$ref": "ServerCommonEndpointMessagesMetadataClauses"
            },
            "type": "array"
          },
          "currentInstanceId": {
            "description": "The ID of the current instance.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customContentType": {
            "description": "\n        The list of custom content types.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customContentTypeTags": {
            "description": "The tags of the custom content types.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customerId": {
            "description": "\n        The ID of the customer.<br>\n        Required if the user is not connected.\n        ",
            "type": "string"
          },
          "endDate": {
            "description": "The end date (Format: UTC date-time).",
            "type": "string"
          },
          "endDateFrom": {
            "description": "\n        The community end date should be newer than this date (Format: UTC date-time).\n        ",
            "type": "string"
          },
          "endDateTo": {
            "description": "\n        The community end date should be older than this date (Format: UTC date-time).\n        ",
            "type": "string"
          },
          "excludeStatus": {
            "description": "\n        The list of status excluded from the list.<br>\n        Acceptable values are:<br>\n         - \"DRAFT\": The model is a draft.<br>\n         - \"REFUSED\": The model has been rejected.<br>\n         - \"TO_VALIDATE\": The model is pending validation.<br>\n         - \"LIVE\": The model is published.<br>\n         - \"ARCHIVE\": The model is archived.<br>\n         - \"DELETED\": The model is deleted.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "excludeType": {
            "description": "The list of content types to exclude.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "externalKey": {
            "description": "The external key to link a content, directory entry or other.",
            "type": "string"
          },
          "featuredFeed": {
            "description": "\n        The list of user groups for which community is promoted, used to filter the list.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "feed": {
            "description": "\n        The list of user groups used to filter the list.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "followingOnly": {
            "description": "\n        Retrieve only communities that user is following. (Default: false)\n        ",
            "type": "boolean"
          },
          "hidden": {
            "description": "Whether the community is hidden. (Default: false)",
            "type": "boolean"
          },
          "ids": {
            "description": "The list of community IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instanceId": {
            "description": "The list of instance IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isCommunityAdmin": {
            "description": "Get only communities where user is administrator",
            "type": "boolean"
          },
          "isFeatured": {
            "description": "Whether the community is featured. (Default: false)",
            "type": "boolean"
          },
          "isNavItem": {
            "description": "Whether the community is a navigation item. (Default: false)",
            "type": "boolean"
          },
          "isOpen": {
            "description": "Whether to filter by open posts or closed posts.",
            "type": "boolean"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "metadata": {
            "description": "The list of metadata required for a model to be part of the result.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "onlyFeatureFeeds": {
            "description": "\n        Whether to retrieve communities which have been promoted for some users groups. (Default: false)\n        ",
            "type": "boolean"
          },
          "orMetadata": {
            "description": "The list of metadata in which a model needs to have at least one of them to be part of the result.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "parent": {
            "description": "The ID of the parent content.",
            "type": "string"
          },
          "parentUuid": {
            "description": "\n        The universally unique identifier of the parent in navigation of the contents.\n        (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)\n        ",
            "type": "string"
          },
          "privacy": {
            "description": "The privacy of the community.",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "queryType": {
            "description": "The type of the query.",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "startDate": {
            "description": "The start date (Format: UTC date-time).",
            "type": "string"
          },
          "status": {
            "description": "\n    The status of the element.<br>\n    Acceptable values are:<br>\n     - \"DRAFT\": The model is a draft.<br>\n     - \"REFUSED\": The model has been rejected.<br>\n     - \"TO_VALIDATE\": The model is pending validation.<br>\n     - \"LIVE\": The model is validated.<br>\n     - \"ARCHIVE\": The model is archived.<br>\n     - \"DELETED\": The model is deleted.\n    ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "description": "The list of content types.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "userFavoritesOnly": {
            "description": "Limit the response to the contents that the user has marked as favorite (directly or indirectly).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityCommunityMessagesCommunityListResponse": {
        "description": "\n    Resource for a response of a Community's list request\n    ",
        "id": "ServerContentCommunityCommunityMessagesCommunityListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "errors": {
            "description": "The list of errors and their relative target.",
            "items": {
              "$ref": "ServerContentContentMessagesErrorReason"
            },
            "type": "array"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Community"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityCommunityMessagesCommunityUserListRequest": {
        "description": "\n    Message containing parameters to do a simple query in datastore related to a list of object.\n    ",
        "id": "ServerContentCommunityCommunityMessagesCommunityUserListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityCommunityRequestCommunityRequestMessagesCommunityRequestListResponse": {
        "description": "\n    Resource for a response of a Community request list request.\n    ",
        "id": "ServerContentCommunityCommunityRequestCommunityRequestMessagesCommunityRequestListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "CommunityRequest"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityCommunityRequestCommunityRequestMessagesCommunityRequestStatusRequest": {
        "description": "\n    Resource for a community access request status update.\n    ",
        "id": "ServerContentCommunityCommunityRequestCommunityRequestMessagesCommunityRequestStatusRequest",
        "properties": {
          "adminMessage": {
            "description": "A message of user who validate/reject the request",
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityPostPostMessagesPostListRequest": {
        "id": "ServerContentCommunityPostPostMessagesPostListRequest",
        "properties": {
          "author": {
            "description": "The ID of the author.",
            "type": "string"
          },
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "contentId": {
            "description": "The ID of the content(s) containing the community(ies).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "currentInstance": {
            "description": "The ID of the current instance.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customerId": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "followingOnly": {
            "description": "List only posts for community current user is following.",
            "type": "boolean"
          },
          "hasRelevant": {
            "description": "Whether to include posts having relevant comment?",
            "type": "boolean"
          },
          "ids": {
            "description": "The list of posts IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isCommunityAdmin": {
            "description": "Get only communities where user is administrator",
            "type": "boolean"
          },
          "isMergePending": {
            "description": "Whether to include posts marked as duplicated but not yet approved?",
            "type": "boolean"
          },
          "isMerged": {
            "description": "Whether to include posts marked as duplicated?",
            "type": "boolean"
          },
          "isOpen": {
            "description": "Whether to filter by open posts or closed posts.",
            "type": "boolean"
          },
          "isPinned": {
            "description": "Whether to filter by pinned posts or not.",
            "type": "boolean"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "maxScore": {
            "description": "The post maximum score to filter.",
            "type": "string"
          },
          "minScore": {
            "description": "The post minimum score to filter.",
            "type": "string"
          },
          "postStatus": {
            "description": "The post custom status to filter.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "postType": {
            "description": "The post types to filter.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "reportStatus": {
            "description": "The post report status",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tags": {
            "description": "A list of tags to filter posts.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityPostPostMessagesPostListResponse": {
        "description": "\n    Resource for a response of a Post's list request\n    ",
        "id": "ServerContentCommunityPostPostMessagesPostListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Post"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          },
          "queryId": {
            "description": "The id of the query.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityPostPostMessagesPostPinRequest": {
        "description": "\n    Resource for a request to pin a Post.\n    ",
        "id": "ServerContentCommunityPostPostMessagesPostPinRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "sortOrder": {
            "description": "The custom sort order for the post.",
            "type": "string"
          },
          "title": {
            "description": "The title for the pinned post.",
            "type": "string"
          },
          "uid": {
            "description": "The ID of the post to pin.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityPostReportReportMessagesModerateRequest": {
        "id": "ServerContentCommunityPostReportReportMessagesModerateRequest",
        "properties": {
          "action": {
            "description": "The action the moderator ask.",
            "type": "string"
          },
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "uid": {
            "description": "The post id to moderate.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityPostReportReportMessagesReportListRequest": {
        "id": "ServerContentCommunityPostReportReportMessagesReportListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "communityId": {
            "description": "The community id.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "ignoreModerationId": {
            "description": "If set ignores this moderation from list.",
            "type": "string"
          },
          "postId": {
            "description": "The post id list.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "spammerId": {
            "description": "The spammer id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityPostReportReportMessagesReportListResponse": {
        "id": "ServerContentCommunityPostReportReportMessagesReportListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of moderation matching query.",
            "items": {
              "$ref": "Moderation"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerContentCommunityPostReportReportMessagesReportRequest": {
        "id": "ServerContentCommunityPostReportReportMessagesReportRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "uid": {
            "description": "The post id to report.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentContentMessagesContentListRequest": {
        "description": "\n    Resource for a a Content's list request\n    ",
        "id": "ServerContentContentMessagesContentListRequest",
        "properties": {
          "action": {
            "description": "\n        The authorized action used to filter the list.<br>If no action, user must be super or instance administrator.\n        ",
            "enum": [
              "PAGE_READ",
              "PAGE_EDIT",
              "PAGE_DELETE",
              "NEWS_READ",
              "NEWS_EDIT",
              "NEWS_DELETE",
              "PAGE_ARCHIVE",
              "PAGE_PUBLISH",
              "NEWS_PUBLISH",
              "METADATA_EDIT",
              "METADATA_DELETE",
              "ROLE_READ",
              "ROLE_EDIT",
              "ROLE_DELETE",
              "NEWS_LIST_READ",
              "NEWS_LIST_EDIT",
              "NEWS_LIST_DELETE",
              "DIRECTORY_READ",
              "DIRECTORY_EDIT",
              "DIRECTORY_DELETE",
              "MENU_READ",
              "MENU_EDIT",
              "MENU_DELETE",
              "TEMPLATE_READ",
              "TEMPLATE_EDIT",
              "TEMPLATE_DELETE",
              "INSTANCE_EDIT",
              "INSTANCE_DELETE",
              "FEED_EDIT",
              "FEED_DELETE",
              "MEDIA_EDIT",
              "MEDIA_DELETE",
              "USER_READ",
              "USER_EDIT",
              "USER_DELETE",
              "RESELLER_READ",
              "RESELLER_EDIT",
              "POST_EDIT",
              "GROUP_EDIT",
              "DIRECTORY_ENTRY_FAVORITES_EDIT",
              "NEWSLETTER_READ",
              "NEWSLETTER_EDIT",
              "NEWSLETTER_DELETE",
              "CUSTOM_CONTENT_TYPE_EDIT",
              "CUSTOM_CONTENT_TYPE_DELETE",
              "CUSTOM_CONTENT_READ",
              "CUSTOM_CONTENT_PUBLISH",
              "CUSTOM_CONTENT_EDIT",
              "CUSTOM_CONTENT_DELETE",
              "CUSTOM_LIST_READ",
              "CUSTOM_LIST_EDIT",
              "CUSTOM_LIST_DELETE",
              "CUSTOM_LIST_PUBLISH",
              "COMMUNITY_READ",
              "COMMUNITY_EDIT",
              "COMMUNITY_DELETE",
              "USER_DIRECTORY_READ",
              "USER_DIRECTORY_EDIT",
              "USER_DIRECTORY_DELETE",
              "CUSTOM_READ",
              "CUSTOM_EDIT",
              "CUSTOM_DELETE",
              "TUTORIAL_READ",
              "TUTORIAL_EDIT",
              "TUTORIAL_DELETE",
              "POST_READ",
              "POST_DELETE",
              "CUSTOM_CONTENT_ARCHIVE",
              "MENU_DROP",
              "STYLE_READ",
              "STYLE_EDIT",
              "STYLE_DELETE",
              "GLOBAL_WIDGET_EDIT",
              "TARGET_EDIT",
              "DIRECTORY_ENTRY_READ",
              "DIRECTORY_ENTRY_EDIT",
              "DIRECTORY_ENTRY_DELETE",
              "COMMUNITY_PUBLISH",
              "ANALYTICS_READ",
              "GAMIFICATION_ADMIN"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "author": {
            "description": "The email of the creator of the content.",
            "type": "string"
          },
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "combinedMetadata": {
            "description": "\n        The list of metadata lists.\n        ",
            "items": {
              "$ref": "ServerCommonEndpointMessagesMetadataClauses"
            },
            "type": "array"
          },
          "currentInstanceId": {
            "description": "The ID of the current instance.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customContentType": {
            "description": "\n        The list of custom content types.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customContentTypeTags": {
            "description": "The tags of the custom content types.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customerId": {
            "description": "\n        The ID of the customer.<br>\n        Required if the user is not connected.\n        ",
            "type": "string"
          },
          "endDate": {
            "description": "The end date (Format: UTC date-time).",
            "type": "string"
          },
          "endDateFrom": {
            "description": "\n        The content end date should be newer than this date (Format: UTC date-time).\n        ",
            "type": "string"
          },
          "endDateTo": {
            "description": "\n        The content end date should be older than this date (Format: UTC date-time).\n        ",
            "type": "string"
          },
          "excludeStatus": {
            "description": "         The list of status excluded from the list.<br>         Acceptable values are:<br>          - \"DRAFT\": The model is a draft.<br>          - \"REFUSED\": The model has been rejected.<br>          - \"TO_VALIDATE\": The model is pending validation.<br>          - \"LIVE\": The model is published.<br>          - \"ARCHIVE\": The model is archived.<br>          - \"DELETED\": The model is deleted.         ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "excludeType": {
            "description": "The list of content types to exclude.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "externalKey": {
            "description": "The external key to link a content, directory entry or other.",
            "type": "string"
          },
          "featuredFeed": {
            "description": "\n        The list of user groups for which content is promoted, used to filter the list.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "feed": {
            "description": "\n        The list of user groups used to filter the list.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "followingOnly": {
            "description": "\n        Retrieve only contents that user is following. (Default: false)\n        ",
            "type": "boolean"
          },
          "hidden": {
            "description": "Whether the content is hidden. (Default: false)",
            "type": "boolean"
          },
          "ids": {
            "description": "The list of content IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instanceId": {
            "description": "The list of instance IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isFeatured": {
            "description": "Whether the content is featured. (Default: false)",
            "type": "boolean"
          },
          "isNavItem": {
            "description": "Whether the content is a navigation item. (Default: false)",
            "type": "boolean"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "metadata": {
            "description": "The list of metadata required for a model to be part of the result.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "onlyFeatureFeeds": {
            "description": "\n        Whether to retrieve contents which have been promoted for some users groups. (Default: false)\n        ",
            "type": "boolean"
          },
          "orMetadata": {
            "description": "The list of metadata in which a model needs to have at least one of them to be part of the result.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "parent": {
            "description": "The ID of the parent content.",
            "type": "string"
          },
          "parentUuid": {
            "description": "\n        The universally unique identifier of the parent in navigation of the contents.\n        (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)\n        ",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "queryType": {
            "description": "The type of the query.",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "startDate": {
            "description": "The start date (Format: UTC date-time).",
            "type": "string"
          },
          "status": {
            "description": "\n    The status of the element.<br>\n    Acceptable values are:<br>\n     - \"DRAFT\": The model is a draft.<br>\n     - \"REFUSED\": The model has been rejected.<br>\n     - \"TO_VALIDATE\": The model is pending validation.<br>\n     - \"LIVE\": The model is validated.<br>\n     - \"ARCHIVE\": The model is archived.<br>\n     - \"DELETED\": The model is deleted.\n    ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "description": "The list of content types.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "userFavoritesOnly": {
            "description": "Limit the response to the contents that the user has marked as favorite (directly or indirectly).",
            "type": "boolean"
          },
          "withReaction": {
            "description": "\n        Retrieve only the contents to which the user has reacted with this kind of reaction\n        (this value will be taken into account only if queryType = 'withReaction')\n        ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentContentMessagesContentListResponse": {
        "description": "\n    Resource for a response of a Content's list request\n    ",
        "id": "ServerContentContentMessagesContentListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "errors": {
            "description": "The list of errors and their relative target.",
            "items": {
              "$ref": "ServerContentContentMessagesErrorReason"
            },
            "type": "array"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Content"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          },
          "queryId": {
            "description": "The id of the query.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentContentMessagesContentStatusRequest": {
        "id": "ServerContentContentMessagesContentStatusRequest",
        "properties": {
          "comment": {
            "description": "The comment to justify the status.",
            "type": "string"
          },
          "status": {
            "description": "\n    The status of the element.<br>\n    Acceptable values are:<br>\n     - \"DRAFT\": The model is a draft.<br>\n     - \"REFUSED\": The model has been rejected.<br>\n     - \"TO_VALIDATE\": The model is pending validation.<br>\n     - \"LIVE\": The model is validated.<br>\n     - \"ARCHIVE\": The model is archived.<br>\n     - \"DELETED\": The model is deleted.\n    ",
            "enum": [
              "DRAFT",
              "REFUSED",
              "TO_VALIDATE",
              "LIVE",
              "ARCHIVE",
              "DELETED",
              "PENDING"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentContentMessagesErrorReason": {
        "description": "\n    Error and its relative object\n    ",
        "id": "ServerContentContentMessagesErrorReason",
        "properties": {
          "reason": {
            "description": "The error description.",
            "type": "string"
          },
          "target": {
            "$ref": "Content",
            "description": "The invalid content."
          }
        },
        "type": "object"
      },
      "ServerContentContentMessagesSaveContentMenuRequest": {
        "id": "ServerContentContentMessagesSaveContentMenuRequest",
        "properties": {
          "customerId": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "deleted": {
            "description": "The list of deleted contents.",
            "items": {
              "$ref": "ContentMenuDeletedListItem"
            },
            "type": "array"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "items": {
            "description": "The list of saved contents.",
            "items": {
              "$ref": "ContentMenuList"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerContentContentMessagesSaveContentMultiRequest": {
        "description": "\n    Resource for a list of contents to save\n    ",
        "id": "ServerContentContentMessagesSaveContentMultiRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Content"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerContentContentRevisionContentRevisionMessagesContentRevisionKeyMessage": {
        "id": "ServerContentContentRevisionContentRevisionMessagesContentRevisionKeyMessage",
        "properties": {
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          },
          "version": {
            "description": "The version of the content.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentContentRevisionContentRevisionMessagesContentRevisionListResponse": {
        "id": "ServerContentContentRevisionContentRevisionMessagesContentRevisionListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ContentRevisionProtoIdUidContentKeyVersionStatusCreatedAtCreatedByCreatedByDetails"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerContentDataDataMessagesDataResponseMessage": {
        "id": "ServerContentDataDataMessagesDataResponseMessage",
        "properties": {
          "content": {
            "description": "The content of the response.",
            "type": "string"
          },
          "raw": {
            "description": "Whether the result is in raw format. (Default: false)",
            "type": "boolean"
          },
          "rawContent": {
            "description": "The content in raw format.",
            "type": "string"
          },
          "url": {
            "description": "The URL of the request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerContentInterestInterestMessagesInterestListRequest": {
        "description": "\n    Interest list request message\n    ",
        "id": "ServerContentInterestInterestMessagesInterestListRequest",
        "properties": {
          "customContentType": {
            "description": "The content type that the user is interested in",
            "format": "int64",
            "type": "string"
          },
          "customContentTypeTags": {
            "description": "The tags of the custom content types",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "orMetadata": {
            "description": "The metadata that the user is interested in",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerContentInterestInterestMessagesInterestListResponse": {
        "description": "\n    Interest list response message\n    ",
        "id": "ServerContentInterestInterestMessagesInterestListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Interest"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerContentRssRssMessagesRssResponseMessage": {
        "id": "ServerContentRssRssMessagesRssResponseMessage",
        "properties": {
          "entries": {
            "description": "The list of entries from the RS feed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomAppsAppsMessagesAppsItemResource": {
        "description": "\n    Resource for an app\n    ",
        "id": "ServerCustomAppsAppsMessagesAppsItemResource",
        "properties": {
          "code": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "sortOrder": {
            "type": "string"
          },
          "tip": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomAppsAppsMessagesAppsListResponse": {
        "description": "\n    Resource for a list of apps\n    ",
        "id": "ServerCustomAppsAppsMessagesAppsListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "\n    Resource for a section\n    ",
            "items": {
              "$ref": "ServerCustomAppsAppsMessagesAppsSectionResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerCustomAppsAppsMessagesAppsSectionResource": {
        "description": "\n    Resource for a section\n    ",
        "id": "ServerCustomAppsAppsMessagesAppsSectionResource",
        "properties": {
          "items": {
            "description": "\n    Resource for an app\n    ",
            "items": {
              "$ref": "ServerCustomAppsAppsMessagesAppsItemResource"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomConceptConceptMessagesConceptResource": {
        "description": "\n    Resource for a concept\n    ",
        "id": "ServerCustomConceptConceptMessagesConceptResource",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "communityId": {
            "type": "string"
          },
          "teamId": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomConceptConceptMessagesTeamResource": {
        "description": "\n    Resource for a team\n    ",
        "id": "ServerCustomConceptConceptMessagesTeamResource",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "users": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerCustomContentTypeCustomContentTypeMessagesCustomContentTypeListResponse": {
        "description": "\n    Resource for a Custom Content Type list response\n    ",
        "id": "ServerCustomContentTypeCustomContentTypeMessagesCustomContentTypeListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "CustomContentType"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerCustomContentTypeCustomContentTypeMessagesListCustomContentTypeTagResponse": {
        "description": "\n    Resource for a Custom Content Type tags list response\n    ",
        "id": "ServerCustomContentTypeCustomContentTypeMessagesListCustomContentTypeTagResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The custom content type tags.",
            "items": {
              "$ref": "CustomContentTypeTag"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerCustomFormFormMessagesCop21FormRequest": {
        "id": "ServerCustomFormFormMessagesCop21FormRequest",
        "properties": {
          "country": {
            "type": "string"
          },
          "countryTranslatable": {
            "type": "string"
          },
          "currentClientTs": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "serverBaseUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomFormFormMessagesSaveJobOffersFormRequest": {
        "id": "ServerCustomFormFormMessagesSaveJobOffersFormRequest",
        "properties": {
          "clientDate": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "coverLetter": {
            "type": "string"
          },
          "currentClientTs": {
            "type": "string"
          },
          "domain": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "mobility": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "resume": {
            "type": "string"
          },
          "serverBaseUrl": {
            "type": "string"
          },
          "tel": {
            "type": "string"
          },
          "userLanguage": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomFormFormMessagesVeoliaEnvironmentFormRequest": {
        "id": "ServerCustomFormFormMessagesVeoliaEnvironmentFormRequest",
        "properties": {
          "city": {
            "type": "string"
          },
          "clientDate": {
            "type": "string"
          },
          "countryId": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "currentClientTs": {
            "type": "string"
          },
          "departmentId": {
            "type": "string"
          },
          "departmentName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailAs": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "firstNameAs": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "information": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastNameAs": {
            "type": "string"
          },
          "personalCommitment": {
            "type": "string"
          },
          "personalCommitmentEn": {
            "type": "string"
          },
          "serverBaseUrl": {
            "type": "string"
          },
          "signAsSomeoneElse": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerCustomFormFormMessagesVeoliaEnvironmentSimpleFormRequest": {
        "id": "ServerCustomFormFormMessagesVeoliaEnvironmentSimpleFormRequest",
        "properties": {
          "clientDate": {
            "type": "string"
          },
          "countryId": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "currentClientTs": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "serverBaseUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomGsiteGsiteMessagesGSiteContentResource": {
        "id": "ServerCustomGsiteGsiteMessagesGSiteContentResource",
        "properties": {
          "author": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomGsiteGsiteMessagesGSiteFormRequest": {
        "id": "ServerCustomGsiteGsiteMessagesGSiteFormRequest",
        "properties": {
          "description": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "owner": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomGsiteGsiteMessagesGSiteFormResponse": {
        "id": "ServerCustomGsiteGsiteMessagesGSiteFormResponse",
        "properties": {
          "gsite": {
            "$ref": "GSite"
          },
          "instance": {
            "$ref": "Instance"
          }
        },
        "type": "object"
      },
      "ServerCustomGsiteGsiteMessagesGSiteMediaResource": {
        "id": "ServerCustomGsiteGsiteMessagesGSiteMediaResource",
        "properties": {
          "size": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomGsiteGsiteMessagesGSiteNewsResponse": {
        "id": "ServerCustomGsiteGsiteMessagesGSiteNewsResponse",
        "properties": {
          "cursor": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "Content"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerCustomGsiteGsiteMessagesGSiteSearchContentResponse": {
        "description": "\n    Response for a search query\n    ",
        "id": "ServerCustomGsiteGsiteMessagesGSiteSearchContentResponse",
        "properties": {
          "items": {
            "items": {
              "$ref": "ServerCustomGsiteGsiteMessagesGSiteContentResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerCustomGsiteGsiteMessagesGSiteSearchMediaResponse": {
        "description": "\n    Response for a search query\n    ",
        "id": "ServerCustomGsiteGsiteMessagesGSiteSearchMediaResponse",
        "properties": {
          "items": {
            "items": {
              "$ref": "ServerCustomGsiteGsiteMessagesGSiteMediaResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerCustomGsiteGsiteMessagesGSiteSearchRequest": {
        "description": "\n    Request for a search query\n    ",
        "id": "ServerCustomGsiteGsiteMessagesGSiteSearchRequest",
        "properties": {
          "instance": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "onlyUserFavorite": {
            "type": "boolean"
          },
          "parent": {
            "type": "string"
          },
          "query": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomProfileProfileMessagesProfileResponse": {
        "id": "ServerCustomProfileProfileMessagesProfileResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "organization": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomStockMarketStockMarketMessagesStockMarketResource": {
        "description": "\n    Request for a share price\n    ",
        "id": "ServerCustomStockMarketStockMarketMessagesStockMarketResource",
        "properties": {
          "date": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "place": {
            "type": "string"
          },
          "var": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomerCustomerMessagesAdminListResponse": {
        "description": "\n    Resource for a response of a list request\n    ",
        "id": "ServerCustomerCustomerMessagesAdminListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerCustomerCustomerMessagesAdminPropertiesRequest": {
        "id": "ServerCustomerCustomerMessagesAdminPropertiesRequest",
        "properties": {
          "properties": {
            "description": "The properties of the customer.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomerCustomerMessagesAdminRequest": {
        "description": "\n    Resource for an admin add/remove request\n    ",
        "id": "ServerCustomerCustomerMessagesAdminRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "email": {
            "description": "\n        The list of email addresses used to filter the admin list.\n        ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomerCustomerMessagesCustomerIDPListResponse": {
        "id": "ServerCustomerCustomerMessagesCustomerIDPListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The customer's identity providers.",
            "items": {
              "$ref": "CustomerIdentityProvider"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerCustomerCustomerMessagesCustomerListRequest": {
        "id": "ServerCustomerCustomerMessagesCustomerListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerCustomerCustomerMessagesCustomerListResponse": {
        "id": "ServerCustomerCustomerMessagesCustomerListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Customer"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerCustomerCustomerMessagesCustomerStatusResponse": {
        "id": "ServerCustomerCustomerMessagesCustomerStatusResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "error": {
            "description": "Error raised when querying the status.",
            "type": "string"
          },
          "status": {
            "description": "The status of the customer.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerCustomerCustomerMessagesRegistrationLinkResponse": {
        "id": "ServerCustomerCustomerMessagesRegistrationLinkResponse",
        "properties": {
          "url": {
            "description": "The URL of the registration.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDeviceDeviceMessagesAuthTokenRequest": {
        "description": "\n    Request to get a token using a code or login/password.\n    ",
        "id": "ServerDeviceDeviceMessagesAuthTokenRequest",
        "properties": {
          "code": {
            "description": "The code to exchange with a token.",
            "type": "string"
          },
          "login": {
            "description": "The user's login",
            "type": "string"
          },
          "password": {
            "description": "The user's password",
            "type": "string"
          },
          "providerType": {
            "default": "google",
            "description": "The type of the token.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDeviceDeviceMessagesRegistrationRequest": {
        "description": "\n    Request for a registration\n    ",
        "id": "ServerDeviceDeviceMessagesRegistrationRequest",
        "properties": {
          "deviceId": {
            "description": "The ID of the device.",
            "type": "string"
          },
          "instance": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "platform": {
            "description": "\n    The platform of the device.\n    Acceptable values are:<br>\n    - \"ANDROID\"<br>\n    - \"IOS\"<br>\n",
            "enum": [
              "ANDROID",
              "IOS"
            ],
            "enumDescriptions": [
              "",
              ""
            ],
            "type": "string"
          },
          "registrationId": {
            "description": "The ID of the registration.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDeviceDeviceMessagesTokenResponse": {
        "description": "\n    Response with tokens.\n    ",
        "id": "ServerDeviceDeviceMessagesTokenResponse",
        "properties": {
          "accessToken": {
            "description": "The access token to call the LumApps API.",
            "type": "string"
          },
          "expiresAt": {
            "description": "The expiration date of the token.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDirectoryDirectoryEntryDirectoryEntryMessagesDirectoryEntryListRequest": {
        "description": "\n    Resource for a DirectoryEntry list request\n    ",
        "id": "ServerDirectoryDirectoryEntryDirectoryEntryMessagesDirectoryEntryListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "combinedMetadata": {
            "description": "\n    The list of metadata lists.\n    ",
            "items": {
              "$ref": "ServerCommonEndpointMessagesMetadataClauses"
            },
            "type": "array"
          },
          "currentInstance": {
            "description": "The ID of the current instance.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "directory": {
            "description": "\n        The list of directories used to filter the list.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "displaySortMandatory": {
            "default": "True",
            "description": "Whether the list must be sorted. (Default: true)",
            "type": "boolean"
          },
          "excludeIds": {
            "description": "The list of IDs to exclude from the list.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "externalKey": {
            "description": "The external key to link a content, directory entry or other.",
            "type": "string"
          },
          "ids": {
            "description": "The list of IDs used to filter the list.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includeUserEntries": {
            "default": "True",
            "description": "Whether the list includes user specific entries. (Default: true)",
            "type": "boolean"
          },
          "instance": {
            "description": "The ID of the instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isMandatory": {
            "description": "\n        Whether the entries are mandatory. (Default: true)\n        ",
            "type": "boolean"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "metadata": {
            "description": "The list of metadata required for a model to be part of the result.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "orMetadata": {
            "description": "The list of metadata in which a model needs to have at least one of them to be part of the result.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "queryType": {
            "description": "The type of query.",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "description": "\n    The status of the element.<br>\n    Acceptable values are:<br>\n     - \"DRAFT\": The model is a draft.<br>\n     - \"REFUSED\": The model has been rejected.<br>\n     - \"TO_VALIDATE\": The model is pending validation.<br>\n     - \"LIVE\": The model is validated.<br>\n     - \"ARCHIVE\": The model is archived.<br>\n     - \"DELETED\": The model is deleted.\n    ",
            "enum": [
              "DRAFT",
              "REFUSED",
              "TO_VALIDATE",
              "LIVE",
              "ARCHIVE",
              "DELETED",
              "PENDING"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "tags": {
            "description": "The list of tags used to filter the list.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "userFavoritesOnly": {
            "description": "Limit the response to the entries that the user has marked as favorite.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerDirectoryDirectoryEntryDirectoryEntryMessagesDirectoryEntryListResponse": {
        "description": "\n    Resource for a DirectoryEntry list response\n    ",
        "id": "ServerDirectoryDirectoryEntryDirectoryEntryMessagesDirectoryEntryListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "DirectoryEntry"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerDirectoryDirectoryMessagesDirectoryListResponse": {
        "description": "\n    Resource for a Directory list response\n    ",
        "id": "ServerDirectoryDirectoryMessagesDirectoryListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Directory"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesCreateFolderRequest": {
        "description": "\n    Response for a start upload request\n    ",
        "id": "ServerDocumentDocumentMessagesCreateFolderRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "description": {
            "description": "The description of the folder to create(lumdrive)",
            "type": "string"
          },
          "folder": {
            "description": "The folder where to create the new folder",
            "type": "string"
          },
          "name": {
            "description": "The name of the folder to create",
            "type": "string"
          },
          "provider": {
            "description": "A document provider (possible: drive, local, onedrive)",
            "type": "string"
          },
          "providerCategory": {
            "description": "The category within the provider (possible: DRIVE_SHARED, LOCAL_TRASHED, DRIVE_MINE, LOCAL_OFFICIAL, LOCAL_MINE, ONEDRIVE_SHARED, ONEDRIVE_MINE, DRIVE_TEAM, ONEDRIVE_SITES)",
            "enum": [
              "DRIVE_MINE",
              "DRIVE_SHARED",
              "DRIVE_TEAM",
              "LOCAL_OFFICIAL",
              "LOCAL_MINE",
              "LOCAL_TRASHED",
              "ONEDRIVE_MINE",
              "ONEDRIVE_SHARED",
              "ONEDRIVE_SITES"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "providerId": {
            "description": "The id of the lumsite instance when the provider is 'local' (LumDrive)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesDocumentActionRequest": {
        "description": "\n    Request message to perform an action(get/trash/restore) on a Document\n    ",
        "id": "ServerDocumentDocumentMessagesDocumentActionRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "source": {
            "$ref": "ServerDocumentDocumentMessagesDocumentSource",
            "description": "all the information necessary to source a document"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesDocumentGetMultiRequest": {
        "description": "\n    Request message for document/getMulti\n    ",
        "id": "ServerDocumentDocumentMessagesDocumentGetMultiRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "sources": {
            "description": "All the information necessary to source a document",
            "items": {
              "$ref": "ServerDocumentDocumentMessagesDocumentSource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesDocumentList": {
        "description": "\n    Response message for document/list\n    ",
        "id": "ServerDocumentDocumentMessagesDocumentList",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Media"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesDocumentListRequest": {
        "description": "\n    Request message for document/list\n    ",
        "id": "ServerDocumentDocumentMessagesDocumentListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "folder": {
            "description": "The folder that should be explored, default to the root directory",
            "type": "string"
          },
          "maxResults": {
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "provider": {
            "description": "A document provider (possible: drive, local, onedrive)",
            "type": "string"
          },
          "providerCategory": {
            "description": "The category within the provider (possible: DRIVE_SHARED, LOCAL_TRASHED, DRIVE_MINE, LOCAL_OFFICIAL, LOCAL_MINE, ONEDRIVE_SHARED, ONEDRIVE_MINE, DRIVE_TEAM, ONEDRIVE_SITES)",
            "enum": [
              "DRIVE_MINE",
              "DRIVE_SHARED",
              "DRIVE_TEAM",
              "LOCAL_OFFICIAL",
              "LOCAL_MINE",
              "LOCAL_TRASHED",
              "ONEDRIVE_MINE",
              "ONEDRIVE_SHARED",
              "ONEDRIVE_SITES"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "providerId": {
            "description": "The id of the lumsite instance when the provider is 'local', or the id of the drive when the provider is 'onedrive'",
            "type": "string"
          },
          "searchTags": {
            "description": "The document tags to search for",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "searchText": {
            "description": "The text to search for",
            "type": "string"
          },
          "searchTypes": {
            "description": "The document type within the provider, (possible: FOLDER, OTHER, IMAGE)",
            "items": {
              "enum": [
                "IMAGE",
                "OTHER",
                "FOLDER"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesDocumentListResponse": {
        "description": "\n    Response message for document/list\n    ",
        "id": "ServerDocumentDocumentMessagesDocumentListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Media"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesDocumentMoveRequest": {
        "description": "\n    Request message to perform an action(get/trash/restore) on a Document\n    ",
        "id": "ServerDocumentDocumentMessagesDocumentMoveRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "folder": {
            "description": "The folder where to move to the Document",
            "type": "string"
          },
          "source": {
            "$ref": "ServerDocumentDocumentMessagesDocumentSource",
            "description": "all the information necessary to source a document"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesDocumentSource": {
        "description": "\n    Message containing all the information necessary to source a document.\n    ",
        "id": "ServerDocumentDocumentMessagesDocumentSource",
        "properties": {
          "provider": {
            "description": "A document provider (possible: drive, local, onedrive)",
            "type": "string"
          },
          "providerDocId": {
            "description": "The id of the document as returned by the provider",
            "type": "string"
          },
          "providerId": {
            "description": "The id of the provider drive. Can be the instanceId for lumdrive or a driveId for OneDrive",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesDocumentUploadRequest": {
        "description": "\n    Request a file upload\n    ",
        "id": "ServerDocumentDocumentMessagesDocumentUploadRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "fileName": {
            "description": "The name of the file to upload",
            "type": "string"
          },
          "folder": {
            "description": "The folder where to upload the file",
            "type": "string"
          },
          "lang": {
            "description": "The language of the uploaded file(Lumdrive only)",
            "type": "string"
          },
          "provider": {
            "description": "A document provider (possible: drive, local, onedrive)",
            "type": "string"
          },
          "providerCategory": {
            "description": "The category within the provider (possible: DRIVE_SHARED, LOCAL_TRASHED, DRIVE_MINE, LOCAL_OFFICIAL, LOCAL_MINE, ONEDRIVE_SHARED, ONEDRIVE_MINE, DRIVE_TEAM, ONEDRIVE_SITES)",
            "enum": [
              "DRIVE_MINE",
              "DRIVE_SHARED",
              "DRIVE_TEAM",
              "LOCAL_OFFICIAL",
              "LOCAL_MINE",
              "LOCAL_TRASHED",
              "ONEDRIVE_MINE",
              "ONEDRIVE_SHARED",
              "ONEDRIVE_SITES"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "providerId": {
            "description": "The id of the lumsite instance when the provider is 'local' (LumDrive)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesDocumentUploadResponse": {
        "description": "\n    Response for a start upload request\n    ",
        "id": "ServerDocumentDocumentMessagesDocumentUploadResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "formDataField": {
            "description": "The name of the formdata field where the file is written, or None if the request do not use the formdata protocol",
            "type": "string"
          },
          "httpMethod": {
            "description": "The http method to use when sending the file, (possible: PUT, POST, GET)",
            "enum": [
              "PUT",
              "POST",
              "GET"
            ],
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "uploadUrl": {
            "description": "The url where to upload the file chunks",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesEmptyResponse": {
        "description": "\n    Response containing only the callId.\n    ",
        "id": "ServerDocumentDocumentMessagesEmptyResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDocumentDocumentMessagesEmptyTrashRequest": {
        "description": "\n    Request message for emptying the trash\n    ",
        "id": "ServerDocumentDocumentMessagesEmptyTrashRequest",
        "properties": {
          "provider": {
            "description": "A document provider (possible: drive, local, onedrive)",
            "type": "string"
          },
          "providerId": {
            "description": "The id of the lumsite instance when the provider is 'local' (LumDrive)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDocumentOnedriveMessagesOneDriveDrive": {
        "description": "\n    Message describing a one drive drive\n    ",
        "id": "ServerDocumentOnedriveMessagesOneDriveDrive",
        "properties": {
          "driveType": {
            "description": "The drive's driveType.",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The drive's lastModifiedDateTime.",
            "type": "string"
          },
          "name": {
            "description": "The drive's name.",
            "type": "string"
          },
          "type": {
            "description": "The kind of the object (\"ONEDRIVE_DRIVE\"",
            "type": "string"
          },
          "uid": {
            "description": "The drive's id.",
            "type": "string"
          },
          "webUrl": {
            "description": "The drive's webUrl.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDocumentOnedriveMessagesOneDriveSite": {
        "description": "\n    Message describing a one drive group\n    ",
        "id": "ServerDocumentOnedriveMessagesOneDriveSite",
        "properties": {
          "createdDateTime": {
            "description": "The site createdDateTime.",
            "type": "string"
          },
          "description": {
            "description": "The site description.",
            "type": "string"
          },
          "displayName": {
            "description": "The site displayName.",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The site lastModifiedDateTime.",
            "type": "string"
          },
          "name": {
            "description": "The site name.",
            "type": "string"
          },
          "type": {
            "description": "The kind of the object (\"ONEDRIVE_SITE\")",
            "type": "string"
          },
          "uid": {
            "description": "The site id.",
            "type": "string"
          },
          "webUrl": {
            "description": "The site webUrl.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDocumentOnedriveMessagesOneDriveSiteDriveListResponse": {
        "description": "\n    Message describing a onedrive.site.list response\n    ",
        "id": "ServerDocumentOnedriveMessagesOneDriveSiteDriveListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The one drive drive.",
            "items": {
              "$ref": "ServerDocumentOnedriveMessagesOneDriveDrive"
            },
            "type": "array"
          },
          "maxResults": {
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "format": "int64",
            "type": "string"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerDocumentOnedriveMessagesOneDriveSiteListResponse": {
        "description": "\n    Message describing a onedrive.site.list response\n    ",
        "id": "ServerDocumentOnedriveMessagesOneDriveSiteListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The one drive sites.",
            "items": {
              "$ref": "ServerDocumentOnedriveMessagesOneDriveSite"
            },
            "type": "array"
          },
          "maxResults": {
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "format": "int64",
            "type": "string"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerDriveDriveMessagesDriveCopyFileRequest": {
        "id": "ServerDriveDriveMessagesDriveCopyFileRequest",
        "properties": {
          "fileId": {
            "description": "The ID of the file to copy.",
            "type": "string"
          },
          "folder": {
            "description": "The ID of the folder to copy the file in.",
            "type": "string"
          },
          "title": {
            "description": "The title of the file.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDriveDriveMessagesDriveFileIdRequest": {
        "id": "ServerDriveDriveMessagesDriveFileIdRequest",
        "properties": {
          "fileId": {
            "description": "The ID of the file.",
            "type": "string"
          },
          "kind": {
            "description": "Kind of Drive file",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDriveDriveMessagesDriveFileResource": {
        "description": "\n    Resource for a Drive file\n    ",
        "id": "ServerDriveDriveMessagesDriveFileResource",
        "properties": {
          "embedLink": {
            "description": "A link for embedding the file (Not yet implemented).",
            "type": "string"
          },
          "fileSize": {
            "description": "The size of the file in bytes.\n                                                    This field is only populated for files with content stored in Drive;\n                                                    it is not populated for Google Docs or shortcut files\n                                                    (Not yet implemented).",
            "type": "string"
          },
          "id": {
            "description": "The ID of the file.",
            "type": "string"
          },
          "isFolder": {
            "description": "Whether the file is a folder.",
            "type": "boolean"
          },
          "lastModifyingUserName": {
            "description": "Name of the last user to modify this file.",
            "type": "string"
          },
          "lastUpdate": {
            "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). ",
            "type": "string"
          },
          "link": {
            "description": "A link for opening the file in a relevant Google editor or viewer.",
            "type": "string"
          },
          "mimeType": {
            "description": "The MIME type of the file.",
            "type": "string"
          },
          "ownersName": {
            "description": "The owner(s) name of this file.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "role": {
            "description": "The role for the authenticated user on this file.",
            "type": "string"
          },
          "thumbnailLink": {
            "description": "A short-lived link to the file's thumbnail.\n                             Typically lasts on the order of hours (Not yet implemented).",
            "type": "string"
          },
          "title": {
            "description": "The title of the file.",
            "type": "string"
          },
          "videoMediaMetadata": {
            "description": "The metadata about video media (only for video files).",
            "type": "string"
          },
          "webContentLink": {
            "description": "A link for downloading the content of the file\n                              in a browser using cookie based authentication.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDriveDriveMessagesDriveInsertRequest": {
        "id": "ServerDriveDriveMessagesDriveInsertRequest",
        "properties": {
          "kind": {
            "description": "Kind of Drive file",
            "type": "string"
          },
          "mimeType": {
            "description": "The MIME type of the file.",
            "type": "string"
          },
          "parentId": {
            "description": "The ID of the folder to create the file in.",
            "type": "string"
          },
          "title": {
            "description": "The title of the file.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDriveDriveMessagesDriveListResponse": {
        "description": "\n    Resource for a response of a Drive list response\n    ",
        "id": "ServerDriveDriveMessagesDriveListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerDriveDriveMessagesDriveFileResource"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerDriveDriveMessagesDriveMoveFileRequest": {
        "id": "ServerDriveDriveMessagesDriveMoveFileRequest",
        "properties": {
          "fileId": {
            "description": "The ID of the file to move.",
            "type": "string"
          },
          "keepOriginFolder": {
            "description": "Whether to let the file in the source folder. (Default: false)",
            "type": "boolean"
          },
          "target": {
            "description": "The ID of the folder to move the file in.",
            "type": "string"
          },
          "title": {
            "description": "The title of the file.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDriveDriveMessagesDriveUpdateFileRequest": {
        "id": "ServerDriveDriveMessagesDriveUpdateFileRequest",
        "properties": {
          "description": {
            "description": "A short description of the file.",
            "type": "string"
          },
          "fileId": {
            "description": "The ID of the file.",
            "type": "string"
          },
          "kind": {
            "description": "Kind of Drive file",
            "type": "string"
          },
          "parentId": {
            "description": "The ID of the folder to create the file in.",
            "type": "string"
          },
          "title": {
            "description": "The title of the file.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerDriveDriveMessagesTokenResponse": {
        "description": "\n    Message for a user token response.\n    ",
        "id": "ServerDriveDriveMessagesTokenResponse",
        "properties": {
          "accessToken": {
            "description": "The token that can be sent to the Google Drive API.",
            "type": "string"
          },
          "expiresIn": {
            "description": "The number of seconds left in the lifetime of the token.",
            "type": "string"
          },
          "tokenType": {
            "description": "This is always Bearer.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerEmailEmailMessagesEmailSendRequest": {
        "description": "\n    Details about email to send.\n    ",
        "id": "ServerEmailEmailMessagesEmailSendRequest",
        "properties": {
          "bcc": {
            "description": "The email addresses to send the email to as bcc.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "body": {
            "description": "The body of the email.",
            "type": "string"
          },
          "captcha": {
            "description": "The captcha result. (Required is the call is anonymous)",
            "type": "string"
          },
          "replyTo": {
            "description": "The email address to reply to.",
            "type": "string"
          },
          "subject": {
            "description": "The subject of the email.",
            "type": "string"
          },
          "to": {
            "description": "The email addresses to send the email to.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerEventstreamEventstreamMessagesRegisterInterestingSearchResultRequest": {
        "id": "ServerEventstreamEventstreamMessagesRegisterInterestingSearchResultRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "queryString": {
            "description": "The id of the query.",
            "type": "string"
          },
          "relevantResult": {
            "description": "\n    The search result (id) which has been selected by the user. Sufficient to retrieve it later.\n    ",
            "type": "string"
          },
          "relevantResultType": {
            "description": "\n    The type of the search result which has been selected by the user\n    ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerEventstreamEventstreamMessagesRegisterInterestingSearchResultResponse": {
        "id": "ServerEventstreamEventstreamMessagesRegisterInterestingSearchResultResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerEventstreamEventstreamMessagesResultsSuggestion": {
        "id": "ServerEventstreamEventstreamMessagesResultsSuggestion",
        "properties": {
          "customer": {
            "$ref": "ServerEventstreamEventstreamMessagesSingleResult",
            "description": "The result suggestions based on the customer history."
          },
          "user": {
            "$ref": "ServerEventstreamEventstreamMessagesSingleResult",
            "description": "The result suggestions based on this user history."
          }
        },
        "type": "object"
      },
      "ServerEventstreamEventstreamMessagesResultsSuggestionResponse": {
        "id": "ServerEventstreamEventstreamMessagesResultsSuggestionResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "$ref": "ServerEventstreamEventstreamMessagesResultsSuggestion",
            "description": "The list of returned items."
          }
        },
        "type": "object"
      },
      "ServerEventstreamEventstreamMessagesSearchSuggestion": {
        "id": "ServerEventstreamEventstreamMessagesSearchSuggestion",
        "properties": {
          "customer": {
            "description": "The query suggestions based on the customer history.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "user": {
            "description": "The query string suggestions based on this user history.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerEventstreamEventstreamMessagesSearchSuggestionRequest": {
        "id": "ServerEventstreamEventstreamMessagesSearchSuggestionRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "filter": {
            "description": "\n    The content type with which the user is filtering her search results\n    (e.g. all, content, users, media, drive, community)\n    ",
            "type": "string"
          },
          "instance": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerEventstreamEventstreamMessagesSearchSuggestionResponse": {
        "id": "ServerEventstreamEventstreamMessagesSearchSuggestionResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "$ref": "ServerEventstreamEventstreamMessagesSearchSuggestion",
            "description": "The list of returned items."
          }
        },
        "type": "object"
      },
      "ServerEventstreamEventstreamMessagesSingleResult": {
        "id": "ServerEventstreamEventstreamMessagesSingleResult",
        "properties": {
          "result_id": {
            "description": "",
            "type": "string"
          },
          "result_type": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerFavoriteFavoriteMessagesFavoriteListRequest": {
        "id": "ServerFavoriteFavoriteMessagesFavoriteListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "owners": {
            "description": "The owners of the favorite. Can be a User or a Feed. (Default: the current user)",
            "items": {
              "$ref": "ServerCommonEndpointMessagesCompleteDatastoreKey"
            },
            "type": "array"
          },
          "targetKind": {
            "description": "The target entity kind. Can be a DirectoryEntry or an Instance.",
            "enum": [
              "DirectoryEntry",
              "Instance"
            ],
            "enumDescriptions": [
              "",
              ""
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerFavoriteFavoriteMessagesFavoriteListResponse": {
        "id": "ServerFavoriteFavoriteMessagesFavoriteListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerCommonEndpointMessagesCompleteDatastoreKey"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerFavoriteFavoriteMessagesMarkAsFavoriteRequest": {
        "id": "ServerFavoriteFavoriteMessagesMarkAsFavoriteRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "deletable": {
            "description": "Whether the favorite will be deletable.",
            "type": "boolean"
          },
          "owners": {
            "description": "The owners of the favorite. Can be a User or a Feed. (Default: the current user)",
            "items": {
              "$ref": "ServerCommonEndpointMessagesCompleteDatastoreKey"
            },
            "type": "array"
          },
          "target": {
            "$ref": "ServerCommonEndpointMessagesCompleteDatastoreKey",
            "description": "The target entity. Can be a DirectoryEntry or an Instance."
          }
        },
        "type": "object"
      },
      "ServerFavoriteFavoriteMessagesRehydratedFavoriteListResponse": {
        "id": "ServerFavoriteFavoriteMessagesRehydratedFavoriteListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "directoryEntries": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "DirectoryEntry"
            },
            "type": "array"
          },
          "instances": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Instance"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerFeedFeedMessagesFeedListRequest": {
        "description": "\n    Resource for a a Feed list request\n    ",
        "id": "ServerFeedFeedMessagesFeedListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "exceptFeeds": {
            "description": "A list of Feed ID to exclude from results.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "hasGroup": {
            "description": "Whether to list feeds synchronized with Google Group.",
            "type": "boolean"
          },
          "herited": {
            "default": "True",
            "description": "Whether to list feeds from a parent instance.",
            "type": "boolean"
          },
          "instance": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "maxResults": {
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "restrictToFeeds": {
            "description": "Restrict results within a list of Feed ID.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "description": "The type of the feeds to list.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerFeedFeedMessagesFeedListResponse": {
        "description": "\n    Resource for a response of a Feed list request\n    ",
        "id": "ServerFeedFeedMessagesFeedListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Feed"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerFeedFeedMessagesFeedSubscribersRequest": {
        "description": "\n    Resource for a feed subscribers edition.\n    ",
        "id": "ServerFeedFeedMessagesFeedSubscribersRequest",
        "properties": {
          "addedUsers": {
            "description": "A list of users email or ID to add to the feed.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "feed": {
            "description": "The ID of the feed to add or remove users from.",
            "type": "string"
          },
          "removedUsers": {
            "description": "A list of users email or ID to add to the feed.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerFeedFeedtypeMessagesFeedTypeListResponse": {
        "description": "\n    Resource for a response of a Feed list request\n    ",
        "id": "ServerFeedFeedtypeMessagesFeedTypeListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "FeedType"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerFileFileMessagesGenerateUrlResponse": {
        "description": "\n    Resource for an upload url generation response\n    ",
        "id": "ServerFileFileMessagesGenerateUrlResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "uploadUrl": {
            "description": "Url to use for file upload. Use it in form-data html form.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerGamificationGoalGoalMessagesGoalListRequest": {
        "description": "\n    Resource for a a Goal list request.\n    ",
        "id": "ServerGamificationGoalGoalMessagesGoalListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "name": {
            "description": "The query to search in the name of the goals.",
            "type": "string"
          },
          "questId": {
            "description": "The ID of the quest.",
            "type": "string"
          },
          "uuid": {
            "description": "The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerGamificationGoalGoalMessagesGoalListResponse": {
        "description": "\n    Resource for a response of a Goal list request.\n    ",
        "id": "ServerGamificationGoalGoalMessagesGoalListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Goal"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardByScopeResponse": {
        "description": "\n    Response to get a Leaderboard by a scope\n    ",
        "id": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardByScopeResponse",
        "properties": {
          "cursor": {
            "description": "The cursor to get the next page of entries",
            "type": "string"
          },
          "customerId": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "entries": {
            "description": "The list of id of users and their points.",
            "items": {
              "$ref": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardEntryResource"
            },
            "type": "array"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "more": {
            "description": "Indicates if there are more entries available",
            "type": "boolean"
          },
          "scopeId": {
            "description": "The scope identifier of the leaderboard.",
            "type": "string"
          },
          "scopeKind": {
            "description": "The scope of the leaderboard.",
            "type": "string"
          },
          "seasonId": {
            "description": "The season.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardEntryResource": {
        "description": "\n    Resource to describe a LeaderboardEntry with both season and allTime points\n    ",
        "id": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardEntryResource",
        "properties": {
          "allTime": {
            "description": "The number of total points.",
            "format": "double",
            "type": "number"
          },
          "season": {
            "description": "The number of points for season.",
            "format": "double",
            "type": "number"
          },
          "userDetails": {
            "$ref": "User",
            "description": "The user."
          },
          "userId": {
            "description": "The user id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardListRequest": {
        "description": "\n    Resource for a Leaderboard list request.\n    ",
        "id": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customerId": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "name": {
            "description": "The query to search in the name of the leaderboards.",
            "type": "string"
          },
          "questId": {
            "description": "The ID of the quest.",
            "type": "string"
          },
          "uuid": {
            "description": "The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardListResponse": {
        "description": "\n    Resource for a response of a Leaderboard list request.\n    ",
        "id": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Leaderboard"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardResponse": {
        "description": "\n    Response to get a Leaderboard by a scope\n    ",
        "id": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardResponse",
        "properties": {
          "cursor": {
            "description": "The cursor to get the next page of entries",
            "type": "string"
          },
          "entries": {
            "description": "The entries of the leaderboard.",
            "items": {
              "$ref": "LeaderboardEntry"
            },
            "type": "array"
          },
          "leaderboard": {
            "$ref": "Leaderboard",
            "description": "The leaderboard"
          },
          "more": {
            "description": "Indicates if there are more entries available",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardSeasonListRequest": {
        "description": "\n    Resource for a LeaderboardSeason list request.\n    ",
        "id": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardSeasonListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customerId": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          },
          "uuid": {
            "description": "The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardSeasonListResponse": {
        "description": "\n    Resource for a response of a LeaderboardSeason list request.\n    ",
        "id": "ServerGamificationLeaderboardLeaderboardMessagesLeaderboardSeasonListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "LeaderboardSeason"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerGamificationQuestQuestMessagesQuestListRequest": {
        "description": "\n    Resource for a Quest list request\n    ",
        "id": "ServerGamificationQuestQuestMessagesQuestListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "sortOrders": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerGamificationQuestQuestMessagesQuestListResponse": {
        "description": "\n    Resource for a response of a Quest list request.\n    ",
        "id": "ServerGamificationQuestQuestMessagesQuestListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Quest"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerGamificationQuestQuestMessagesQuestMineRequest": {
        "description": "\n    Resource for to request my quests.\n    ",
        "id": "ServerGamificationQuestQuestMessagesQuestMineRequest",
        "properties": {
          "available": {
            "default": "True",
            "description": "Whether the available quests have to be included.",
            "type": "boolean"
          },
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "completed": {
            "default": "True",
            "description": "Whether the completed quests have to be included.",
            "type": "boolean"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "inProgress": {
            "default": "True",
            "description": "Whether the in progress quests have to be included.",
            "type": "boolean"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "sortOrders": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerGamificationRewardRewardMessagesRewardListRequest": {
        "description": "\n    Resource for a a Reward list request\n    ",
        "id": "ServerGamificationRewardRewardMessagesRewardListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customerId": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "kind": {
            "description": "The kind of reward.",
            "type": "string"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "name": {
            "description": "The query to search in the name of the rewards.",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "title": {
            "description": "The title of the reward.",
            "type": "string"
          },
          "userIds": {
            "description": "The ids of the users we want to check user rewards",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerGamificationRewardRewardMessagesRewardListResponse": {
        "description": "\n    Resource for a response of a Reward list request\n    ",
        "id": "ServerGamificationRewardRewardMessagesRewardListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Reward"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultListRequest": {
        "description": "\n    Resource for a Quest list request\n    ",
        "id": "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "goalId": {
            "description": "The id of the goal we want the user goal result of.",
            "type": "string"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "questId": {
            "description": "The id of the quest we want the user goal result of.",
            "type": "string"
          },
          "userId": {
            "description": "The id of the user we want the user goal result of.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultListResponse": {
        "description": "\n    Resource for a response of a Quest list request.\n    ",
        "id": "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "UserGoalResult"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultPointsRequest": {
        "description": "\n    Resource for a User goal result save points request\n    ",
        "id": "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultPointsRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "points": {
            "description": "The number of points to add (positive) or remove (negative) to the users.",
            "type": "string"
          },
          "scopeId": {
            "description": "The scope identifier.",
            "type": "string"
          },
          "scopeKind": {
            "description": "The scope kind.",
            "type": "string"
          },
          "userIds": {
            "description": "The list of users.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultSaveMultiRequest": {
        "description": "\n    Resource for a UserReward save multi request\n    ",
        "id": "ServerGamificationUserGoalResultUserGoalResultMessagesUserGoalResultSaveMultiRequest",
        "properties": {
          "userGoalResults": {
            "description": "The user goals results to save",
            "items": {
              "$ref": "UserGoalResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerGamificationUserRewardUserRewardMessagesDatastoreKeyPair": {
        "id": "ServerGamificationUserRewardUserRewardMessagesDatastoreKeyPair",
        "properties": {
          "reason": {
            "description": "The error description.",
            "type": "string"
          },
          "rewardId": {
            "description": "The reward id",
            "type": "string"
          },
          "userId": {
            "description": "The user id",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerGamificationUserRewardUserRewardMessagesDatastoreKeyPairWithErrorList": {
        "description": "\n    Datastore key list and an error list for endpoints methods\n    ",
        "id": "ServerGamificationUserRewardUserRewardMessagesDatastoreKeyPairWithErrorList",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "errors": {
            "description": "A list of errors",
            "items": {
              "$ref": "ServerGamificationUserRewardUserRewardMessagesDatastoreKeyPair"
            },
            "type": "array"
          },
          "success": {
            "description": "The userId/rewardId pair that failed",
            "items": {
              "$ref": "ServerGamificationUserRewardUserRewardMessagesDatastoreKeyPair"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerGamificationUserRewardUserRewardMessagesUserRewardListRequest": {
        "description": "\n    Resource for a UserReward list request.\n    ",
        "id": "ServerGamificationUserRewardUserRewardMessagesUserRewardListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "targetUserId": {
            "description": "The ID of the rewards owner.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerGamificationUserRewardUserRewardMessagesUserRewardListResponse": {
        "description": "\n    Resource for a response of a UserReward list request.\n    ",
        "id": "ServerGamificationUserRewardUserRewardMessagesUserRewardListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "UserReward"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerGamificationUserRewardUserRewardMessagesUserRewardMultiRequest": {
        "description": "\n    Resource for a UserReward save multi request\n    ",
        "id": "ServerGamificationUserRewardUserRewardMessagesUserRewardMultiRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "rewardIds": {
            "description": "The list of rewards.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "userIds": {
            "description": "The list of users.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerGmailGmailMessagesGmailListResponse": {
        "description": "\n    Resource for a response of a Gmail's list request\n    ",
        "id": "ServerGmailGmailMessagesGmailListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerGmailGmailMessagesGmailResource"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerGmailGmailMessagesGmailResource": {
        "description": "\n    Resource for a Gmail's file\n    ",
        "id": "ServerGmailGmailMessagesGmailResource",
        "properties": {
          "id": {
            "description": "The ID of the email.",
            "type": "string"
          },
          "sender": {
            "description": "The sender of the email.",
            "type": "string"
          },
          "snippet": {
            "description": "The snippet of the email.",
            "type": "string"
          },
          "title": {
            "description": "The title of the email.",
            "type": "string"
          },
          "webLink": {
            "description": "The link to the email.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerHeaderHeaderMessagesHeaderListResponse": {
        "description": "\n    Resource for a response of a Header's list request\n    ",
        "id": "ServerHeaderHeaderMessagesHeaderListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Header"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerInstanceInstanceMessagesInstanceAdminListResponse": {
        "description": "\n    Resource for a response of a Instance's list request\n    ",
        "id": "ServerInstanceInstanceMessagesInstanceAdminListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerInstanceInstanceMessagesInstanceAdminRequest": {
        "description": "\n    Resource for a Instance's admin add/remove request\n    ",
        "id": "ServerInstanceInstanceMessagesInstanceAdminRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "email": {
            "description": "The email of the instance's administrator.",
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerInstanceInstanceMessagesInstanceCopyRequest": {
        "description": "\n    Resource for an Instance copy request\n    ",
        "id": "ServerInstanceInstanceMessagesInstanceCopyRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "models": {
            "description": "*restricted* The models to copy.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the copy.",
            "type": "string"
          },
          "new_author_id": {
            "description": "All User key will be replaced by the user corresponding to this id (cross-plateform only)",
            "type": "string"
          },
          "slug": {
            "description": "The short text used in the URL used to access the instance.",
            "type": "string"
          },
          "subtitle": {
            "description": "The subtitle of the copy.",
            "type": "string"
          },
          "targetCustomer": {
            "description": "The customer of the instance to copy.",
            "type": "string"
          },
          "title": {
            "description": "The title of the copy.",
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerInstanceInstanceMessagesInstanceListMetadataRequest": {
        "description": "\n    Resource for an instance metadata list request.\n    ",
        "id": "ServerInstanceInstanceMessagesInstanceListMetadataRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "instance": {
            "description": "The unique identifier.",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "withInheritance": {
            "description": "Retrieve metadata from parent instance and plateform.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerInstanceInstanceMessagesInstanceListMetadataResponse": {
        "description": "\n    Response from an instance metadata list request.\n    ",
        "id": "ServerInstanceInstanceMessagesInstanceListMetadataResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Metadata"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerInstanceInstanceMessagesInstanceListRequest": {
        "description": "\n    Resource for a a Instance's list request\n    ",
        "id": "ServerInstanceInstanceMessagesInstanceListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "combinedMetadata": {
            "description": "The list of metadata lists.",
            "items": {
              "$ref": "ServerCommonEndpointMessagesMetadataClauses"
            },
            "type": "array"
          },
          "considerUserIdentity": {
            "default": "True",
            "description": "Whether we should take into account the user identity to compute instance fields (like deletableFromFavorites). (Default: true)",
            "type": "boolean"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "emptyParent": {
            "description": "Whether the instance has no parent. (Default: false)",
            "type": "boolean"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "ids": {
            "description": "The list of instance IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "name": {
            "description": "The name of the instance.",
            "type": "string"
          },
          "parent": {
            "description": "The parent of the instance.",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          },
          "status": {
            "description": "\n    The status of the element.<br>\n    Acceptable values are:<br>\n     - \"DRAFT\": The model is a draft.<br>\n     - \"REFUSED\": The model has been rejected.<br>\n     - \"TO_VALIDATE\": The model is pending validation.<br>\n     - \"LIVE\": The model is validated.<br>\n     - \"ARCHIVE\": The model is archived.<br>\n     - \"DELETED\": The model is deleted.\n    ",
            "enum": [
              "DRAFT",
              "REFUSED",
              "TO_VALIDATE",
              "LIVE",
              "ARCHIVE",
              "DELETED",
              "PENDING"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "userFavoritesOnly": {
            "description": "Limit the response to the instances that the user has marked as favorite.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerInstanceInstanceMessagesInstanceListResponse": {
        "description": "\n    Resource for a response of a Instance's list request\n    ",
        "id": "ServerInstanceInstanceMessagesInstanceListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Instance"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerInstanceInstanceMessagesInstanceScriptRequest": {
        "description": "\n    Resource for a a Instance's script request\n    ",
        "id": "ServerInstanceInstanceMessagesInstanceScriptRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "content": {
            "description": "The content of the script.",
            "type": "string"
          },
          "footer": {
            "description": "The footer of the script.",
            "type": "string"
          },
          "kind": {
            "default": "custom",
            "description": "The type of script.",
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerInstanceInstanceMessagesInstanceSiblingsListResponse": {
        "description": "\n    Resource for a siblings instance list request.\n    ",
        "id": "ServerInstanceInstanceMessagesInstanceSiblingsListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Instance"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerIntegrationIntegrationMessagesIntegrationGetResponse": {
        "description": "\n    Generic integration message to return a resource.\n    ",
        "id": "ServerIntegrationIntegrationMessagesIntegrationGetResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "item": {
            "description": "The unique returned item.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerIntegrationIntegrationMessagesIntegrationListResponse": {
        "description": "\n    Generic integration message to return a list of resources.\n    ",
        "id": "ServerIntegrationIntegrationMessagesIntegrationListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerIntegrationIntegrationMessagesIntegrationSearchResponse": {
        "description": "\n    Generic integration message to search resources.\n    ",
        "id": "ServerIntegrationIntegrationMessagesIntegrationSearchResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerIntegrationZendeskZendeskMessagesZendeskFilters": {
        "description": "\n    Inner field for ZendeskSearchRequest\n    ",
        "id": "ServerIntegrationZendeskZendeskMessagesZendeskFilters",
        "properties": {
          "assignee": {
            "description": "The Zendesk ticket assignees, i.e. a user name.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "brand": {
            "description": "The brands associated to a Zendesk article.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "description": "The Zendesk ticket statuses, e.g. open or pending.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tags": {
            "description": "The Zendesk ticket tags.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ticket_type": {
            "description": "The Zendesk ticket types, e.g. problem or question.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "description": "The Zendesk resource type, e.g. ticket or article.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "updatedAfterDate": {
            "description": "The date after which Zendesk tickets have been updated.",
            "type": "string"
          },
          "updatedBeforeDate": {
            "description": "The date before which Zendesk tickets have been updated.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerIntegrationZendeskZendeskMessagesZendeskSearchRequest": {
        "description": "\n    Response to a Zendesk search request.\n    ",
        "id": "ServerIntegrationZendeskZendeskMessagesZendeskSearchRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "filters": {
            "$ref": "ServerIntegrationZendeskZendeskMessagesZendeskFilters",
            "description": "The Zendesk filters."
          },
          "query": {
            "description": "The text to be searched.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerLumworkLumworkMessagesDocumentListResponse": {
        "description": "\n    Lumwork document list response\n    ",
        "id": "ServerLumworkLumworkMessagesDocumentListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerLumworkLumworkMessagesDocumentResource"
            },
            "type": "array"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "format": "int64",
            "type": "string"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          },
          "offset": {
            "description": "The number of results skipped in the query.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerLumworkLumworkMessagesDocumentResource": {
        "description": "\n    Lumwork document resource\n    ",
        "id": "ServerLumworkLumworkMessagesDocumentResource",
        "properties": {
          "creationDate": {
            "description": "The creation date of the document.",
            "type": "string"
          },
          "id": {
            "description": "The ID of the document.",
            "type": "string"
          },
          "lastUpdate": {
            "description": "The last update date of the document.",
            "type": "string"
          },
          "name": {
            "description": "The name of the document.",
            "type": "string"
          },
          "spaceId": {
            "description": "The ID of the space containing the document.",
            "type": "string"
          },
          "version": {
            "description": "The version of the document.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerLumworkLumworkMessagesSpaceListResponse": {
        "description": "\n    Response resource for a space list\n    ",
        "id": "ServerLumworkLumworkMessagesSpaceListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerLumworkLumworkMessagesSpaceResource"
            },
            "type": "array"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "format": "int64",
            "type": "string"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerLumworkLumworkMessagesSpaceResource": {
        "description": "\n    A simple resource for a lumwork space\n    ",
        "id": "ServerLumworkLumworkMessagesSpaceResource",
        "properties": {
          "id": {
            "description": "The ID of the space.",
            "type": "string"
          },
          "idFolder": {
            "description": "The ID of the Google Drive folder.",
            "type": "string"
          },
          "name": {
            "description": "The name of the space.",
            "type": "string"
          },
          "pictureUrl": {
            "description": "The url of the space picture.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesErrorReason": {
        "description": "\n    Error and its relative object\n    ",
        "id": "ServerMediaMediaMessagesErrorReason",
        "properties": {
          "reason": {
            "description": "The error description.",
            "type": "string"
          },
          "target": {
            "$ref": "Media",
            "description": "The invalid media."
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesErrorReasonKeysOnly": {
        "description": "\n    Error and its relative object\n    ",
        "id": "ServerMediaMediaMessagesErrorReasonKeysOnly",
        "properties": {
          "reason": {
            "description": "The error description.",
            "type": "string"
          },
          "target": {
            "$ref": "ServerCommonEndpointMessagesCompleteDatastoreKey",
            "description": "The invalid media."
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesErrorsResponse": {
        "description": "\n    Resource for a response of a file systems delete response.\n    ",
        "id": "ServerMediaMediaMessagesErrorsResponse",
        "properties": {
          "deferred": {
            "description": "Whether the request has been deferred.",
            "type": "boolean"
          },
          "errors": {
            "description": "The list of errors and their relative target.",
            "items": {
              "$ref": "ServerMediaMediaMessagesErrorReasonKeysOnly"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesFileSystemItemMoveRequest": {
        "description": "\n    Resource for request a move of a FileSystemItem.\n    ",
        "id": "ServerMediaMediaMessagesFileSystemItemMoveRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "destinationFolderId": {
            "description": "The destionation folder of move request.",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "itemId": {
            "description": "The unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesFileSystemItemsDeleteRequest": {
        "description": "\n    Resource for a request asking to delete some file system items.\n    ",
        "id": "ServerMediaMediaMessagesFileSystemItemsDeleteRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "definitive": {
            "description": "Whether the deletion operation is definitive.",
            "type": "boolean"
          },
          "itemIds": {
            "description": "The list of unique identifiers.",
            "items": {
              "$ref": "ServerCommonEndpointMessagesCompleteDatastoreKey"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesFileSystemItemsKeysRequest": {
        "description": "\n    Resource for a request asking to delete some file system items.\n    ",
        "id": "ServerMediaMediaMessagesFileSystemItemsKeysRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "itemIds": {
            "description": "The list of unique identifiers.",
            "items": {
              "$ref": "ServerCommonEndpointMessagesCompleteDatastoreKey"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesFileSystemItemsListRequest": {
        "description": "\n    Resource for a item's list request\n    ",
        "id": "ServerMediaMediaMessagesFileSystemItemsListRequest",
        "properties": {
          "attached": {
            "description": "Whether the media is attached to a content. (Default: false)",
            "type": "boolean"
          },
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "contentKey": {
            "description": "The ID of the content that contains the media.",
            "type": "string"
          },
          "currentInstance": {
            "description": "The ID of the current instance.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customer": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "ext": {
            "description": "The file extension used to filter the list.",
            "type": "string"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "ids": {
            "description": "The list of media IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instance": {
            "description": "The ID of the instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "kind": {
            "description": "The kind of the entity.",
            "type": "string"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "mimeType": {
            "description": "The list of MIME types.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the media used to filter the list.",
            "type": "string"
          },
          "parentFolder": {
            "description": "The parent folder ID.",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "queryType": {
            "description": "The type of query.",
            "type": "string"
          },
          "recursive": {
            "description": "Whether show fsitem recursively.",
            "type": "boolean"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          },
          "tags": {
            "description": "The list of tags.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "trashed": {
            "description": "Whether look in trash or not.",
            "type": "boolean"
          },
          "type": {
            "description": "The list of media types.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesFileSystemItemsListResponse": {
        "id": "ServerMediaMediaMessagesFileSystemItemsListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "files": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Media"
            },
            "type": "array"
          },
          "folders": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Folder"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          },
          "path": {
            "description": "The path of request.",
            "items": {
              "$ref": "PathDescriptor"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesFolderListResponse": {
        "description": "\n    Resource for a response of a media's list request\n    ",
        "id": "ServerMediaMediaMessagesFolderListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "errors": {
            "description": "The list of errors and their relative target.",
            "items": {
              "$ref": "ServerMediaMediaMessagesErrorReason"
            },
            "type": "array"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Folder"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          },
          "path": {
            "description": "The path of request.",
            "items": {
              "$ref": "PathDescriptor"
            },
            "type": "array"
          },
          "queryId": {
            "description": "The id of the query.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesItemsListResponse": {
        "description": "\n    Resource for a response of a media's list request\n    ",
        "id": "ServerMediaMediaMessagesItemsListResponse",
        "properties": {
          "errors": {
            "description": "The list of errors and their relative target.",
            "items": {
              "$ref": "ServerMediaMediaMessagesErrorReasonKeysOnly"
            },
            "type": "array"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Media"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesMediaListResponse": {
        "description": "\n    Resource for a response of a media's list request\n    ",
        "id": "ServerMediaMediaMessagesMediaListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "errors": {
            "description": "The list of errors and their relative target.",
            "items": {
              "$ref": "ServerMediaMediaMessagesErrorReason"
            },
            "type": "array"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Media"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          },
          "path": {
            "description": "The path of request.",
            "items": {
              "$ref": "PathDescriptor"
            },
            "type": "array"
          },
          "queryId": {
            "description": "The id of the query.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerMediaMediaMessagesSaveMediaMultiRequest": {
        "description": "\n    Resource for a list of media to save\n    ",
        "id": "ServerMediaMediaMessagesSaveMediaMultiRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The list of media to save.",
            "items": {
              "$ref": "Media"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerMetadataMetadataMessagesErrorReason": {
        "description": "\n    Error and its relative object\n    ",
        "id": "ServerMetadataMetadataMessagesErrorReason",
        "properties": {
          "reason": {
            "description": "The error description.",
            "type": "string"
          },
          "target": {
            "$ref": "Metadata",
            "description": "The invalid metadata."
          }
        },
        "type": "object"
      },
      "ServerMetadataMetadataMessagesMetadataListResponse": {
        "description": "\n    Resource for a response of a Metadata's list request\n    ",
        "id": "ServerMetadataMetadataMessagesMetadataListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "errors": {
            "description": "The list of errors and their relative target.",
            "items": {
              "$ref": "ServerMetadataMetadataMessagesErrorReason"
            },
            "type": "array"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Metadata"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerMetadataMetadataMessagesSaveMetadataMultiRequest": {
        "description": "\n    Resource for a list of metadata to save\n    ",
        "id": "ServerMetadataMetadataMessagesSaveMetadataMultiRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Metadata"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerMiscMiscMessagesMetricRequest": {
        "description": "\n    Resource for a a Log Metric request\n    ",
        "id": "ServerMiscMiscMessagesMetricRequest",
        "properties": {
          "interval": {
            "description": "The interval of the metric being logged.",
            "type": "string"
          },
          "kind": {
            "description": "The kind of the metric.",
            "enum": [
              "GAUGE",
              "DELTA",
              "CUMULATIVE"
            ],
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "labels": {
            "description": "The labels associated with the metric.",
            "type": "string"
          },
          "path": {
            "description": "The path of the metric to write.",
            "type": "string"
          },
          "value": {
            "description": "The value to log in the metric.",
            "type": "string"
          },
          "valueType": {
            "description": "The type of the value of the points added to the metric.",
            "enum": [
              "BOOL",
              "INT64",
              "DOUBLE",
              "STRING",
              "DISTRIBUTION",
              "MONEY"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerMiscMiscMessagesUrlinfoResponse": {
        "description": "\n    Resource for a UrlInfo response\n    ",
        "id": "ServerMiscMiscMessagesUrlinfoResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "description": {
            "description": "The description of the website.",
            "type": "string"
          },
          "images": {
            "description": "The list of images found on the website.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "description": "The title of the website.",
            "type": "string"
          },
          "url": {
            "description": "The website url.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerMlearningMlearningMessagesContentToPredict": {
        "description": "\n    Resource for content to predict\n    ",
        "id": "ServerMlearningMlearningMessagesContentToPredict",
        "properties": {
          "data": {
            "description": "The content text.",
            "type": "string"
          },
          "index": {
            "description": "The unique index identifying this item.",
            "type": "string"
          },
          "lang": {
            "description": "The language of the text.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerMlearningMlearningMessagesLanguageDetectionRequest": {
        "description": "\n    Response sent by the language detection methods\n    ",
        "id": "ServerMlearningMlearningMessagesLanguageDetectionRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "text": {
            "description": "The text for which the language shall be detected.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerMlearningMlearningMessagesLanguageDetectionResponse": {
        "description": "\n    Response sent by the language detection methods\n    ",
        "id": "ServerMlearningMlearningMessagesLanguageDetectionResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerMlearningMlearningMessagesTagPrediction": {
        "description": "\n    Resource for a tag prediction\n    ",
        "id": "ServerMlearningMlearningMessagesTagPrediction",
        "properties": {
          "index": {
            "description": "The unique index identifying the sent content.",
            "type": "string"
          },
          "prediction": {
            "description": "The predicted tag.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerMlearningMlearningMessagesTagsPredictionRequest": {
        "description": "\n    Resource to predict tags\n    ",
        "id": "ServerMlearningMlearningMessagesTagsPredictionRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The list of texts.",
            "items": {
              "$ref": "ServerMlearningMlearningMessagesContentToPredict"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerMlearningMlearningMessagesTagsPredictionResponse": {
        "description": "\n    Response to send tags prediction\n    ",
        "id": "ServerMlearningMlearningMessagesTagsPredictionResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The predicted tags.",
            "items": {
              "$ref": "ServerMlearningMlearningMessagesTagPrediction"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerNewsletterNewsletterMessagesNewsletterListResponse": {
        "description": "\n    Resource for a response of a newsletter's list request\n    ",
        "id": "ServerNewsletterNewsletterMessagesNewsletterListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Newsletter"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerNewsletterNewsletterMessagesSendNewsletterRequest": {
        "description": "\n    Resource to send a newsletter request\n    ",
        "id": "ServerNewsletterNewsletterMessagesSendNewsletterRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "html": {
            "description": "The HTML content to send.",
            "type": "string"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "newsletterId": {
            "description": "The ID of the newsletter to send.",
            "type": "string"
          },
          "toTesters": {
            "description": "Whether to send to newsletter to testers.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerNewsletterNewsletterMessagesSendNewsletterResponse": {
        "description": "\n    Resource for a newsletter who has sent\n    ",
        "id": "ServerNewsletterNewsletterMessagesSendNewsletterResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "sent": {
            "description": "Whether the newsletter has been sent.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerNotificationNotificationMessagesNotificationGroupResource": {
        "description": "\n    Notification group (notification + its actions)\n    ",
        "id": "ServerNotificationNotificationMessagesNotificationGroupResource",
        "properties": {
          "actions": {
            "description": "The list of notification actions.",
            "items": {
              "$ref": "NotificationAction"
            },
            "type": "array"
          },
          "digest": {
            "description": "The notification group hash.",
            "type": "string"
          },
          "notification": {
            "$ref": "Notification",
            "description": "The user notification."
          }
        },
        "type": "object"
      },
      "ServerNotificationNotificationMessagesNotificationIdsResource": {
        "description": "\n    List of notification ids\n    ",
        "id": "ServerNotificationNotificationMessagesNotificationIdsResource",
        "properties": {
          "notificationIds": {
            "description": "The notification ids.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unreadNotificationCount": {
            "description": "The number of total of unread notifications.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerNotificationNotificationMessagesNotificationListRequest": {
        "description": "\n    Notification list request\n    ",
        "id": "ServerNotificationNotificationMessagesNotificationListRequest",
        "properties": {
          "functionalInnerId": {
            "description": "A code to describe the object.",
            "type": "string"
          },
          "instanceIds": {
            "description": "The list of instance identifiers.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isRead": {
            "description": "Whether the notification have already been read.",
            "type": "boolean"
          },
          "parentId": {
            "description": "The notifications parentId.",
            "type": "string"
          },
          "sortOrder": {
            "description": "\"\n        The sortOrder of the list. (Format: (-)attribute) <br>\n        The only accepted attribute right now is 'priority'.\n    ",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerNotificationNotificationMessagesNotificationListResponse": {
        "id": "ServerNotificationNotificationMessagesNotificationListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerNotificationNotificationMessagesNotificationGroupResource"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerNotificationNotificationMessagesSendNotificationRequest": {
        "description": "\n    Create a new notification\n    ",
        "id": "ServerNotificationNotificationMessagesSendNotificationRequest",
        "properties": {
          "customType": {
            "description": "\n        The custom type of the notification.<br>\n        This is only applicable if type is custom.\n        ",
            "type": "string"
          },
          "description": {
            "description": "The description of the notification. (Format: JSON object)",
            "type": "string"
          },
          "externalKeyId": {
            "description": "The external key to link a content, directory entry or other.",
            "type": "string"
          },
          "externalKeyKind": {
            "description": "The external key kind.",
            "type": "string"
          },
          "feedKeys": {
            "description": "The list of feed IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "functionalInnerId": {
            "description": "A code to describe the object.",
            "type": "string"
          },
          "group": {
            "description": "\n        Whether the notifications of a same type and having the same linked object are group together.\n        (Default: false)\n        ",
            "type": "boolean"
          },
          "groupDescription": {
            "description": "\n        The description of the notification group. (Format: JSON object)<br>\n        This is only applicable if group is true.\n        ",
            "type": "string"
          },
          "groupName": {
            "description": "\n        The name of the notification group. (Format: JSON object)<br>\n        This is only applicable if group is true.\n        ",
            "type": "string"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "isReadOnClick": {
            "default": "True",
            "description": "\n        Whether the notification has been read. (Default: false)\n        ",
            "type": "boolean"
          },
          "link": {
            "description": "The external url of the notification. (Format: JSON object)",
            "type": "string"
          },
          "notifyAuthor": {
            "default": "True",
            "description": "\n        Whether the author has to be notified for any change. (Default: true)\n        ",
            "type": "boolean"
          },
          "properties": {
            "description": "The properties of the notification. (Format: JSON object)",
            "type": "string"
          },
          "recipientEmail": {
            "description": "The email of the recipient.",
            "type": "string"
          },
          "recipientId": {
            "description": "The ID of the recipient.",
            "type": "string"
          },
          "senderEmail": {
            "description": "The email of the user who sent the notification.",
            "type": "string"
          },
          "senderId": {
            "description": "The ID of the user who sent the notification.",
            "type": "string"
          },
          "startDate": {
            "description": "The notification start date.",
            "type": "string"
          },
          "title": {
            "description": "The title of the notification. (Format: JSON object)",
            "type": "string"
          },
          "type": {
            "description": "The type of notification.",
            "type": "string"
          },
          "url": {
            "description": "The url of the notification. (Format: JSON object)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerNotificationNotificationMessagesSetAllNotificationsReadRequest": {
        "description": "\n    Mark all notifications of an instance as read\n    ",
        "id": "ServerNotificationNotificationMessagesSetAllNotificationsReadRequest",
        "properties": {
          "externalKey": {
            "description": "The external key to link a content, directory entry or other.",
            "type": "string"
          },
          "externalKeyKind": {
            "description": "The external key kind.",
            "type": "string"
          },
          "instanceIds": {
            "description": "The list of instance identifiers.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerNotificationNotificationMessagesSetNotificationReadRequest": {
        "description": "\n    Mark a notification as read.\n    ",
        "id": "ServerNotificationNotificationMessagesSetNotificationReadRequest",
        "properties": {
          "functionalInnerId": {
            "description": "A code to describe the object.",
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier.",
            "type": "string"
          },
          "userId": {
            "description": "The user for which the notification needs to be marked as read.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerPermissionPermissionMessagesWhoCanAccessContentResponse": {
        "description": "\n    Resource for response to request letting user know who can do an action on a content.\n    ",
        "id": "ServerPermissionPermissionMessagesWhoCanAccessContentResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "feeds": {
            "description": "The feeds which have direct access to the content",
            "items": {
              "$ref": "Feed"
            },
            "type": "array"
          },
          "roles": {
            "description": "The roles which give access to the content",
            "items": {
              "$ref": "Role"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerPermissionPermissionMessagesWhyCanUserAccessContentResponse": {
        "description": "\n    Resource for response to request letting user know what credential allow him to execute an action on a content.\n    ",
        "id": "ServerPermissionPermissionMessagesWhyCanUserAccessContentResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "feeds": {
            "description": "The feeds which have direct access to the content",
            "items": {
              "$ref": "Feed"
            },
            "type": "array"
          },
          "isInstanceAdmin": {
            "description": "True if user is admin of the instance associated to the content",
            "type": "boolean"
          },
          "isSuperAdmin": {
            "description": "True if user is super admin",
            "type": "boolean"
          },
          "roles": {
            "description": "The roles which give access to the content",
            "items": {
              "$ref": "Role"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerRealtimeRealtimeMessagesGetTokenResponse": {
        "description": "\n    Resource for response to request letting user know who can do an action on a content.\n    ",
        "id": "ServerRealtimeRealtimeMessagesGetTokenResponse",
        "properties": {
          "token": {
            "description": "A Json Web Token to authenticate to the real time database.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerResellerResellerMessagesResellerCustomerListResponse": {
        "id": "ServerResellerResellerMessagesResellerCustomerListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "CustomerProtoIdUidNameDomainAccountStatusCustomerIdSlugSynchronizedHostsExternalDirectoryGoogleCustomerNbUsersLicenseNumberLicenseExpirationDateResellerIsResellerResellerDataThemesConfigurationsOverridesSsoEnabledHttpsOnlyLicenseTypeTrustedTesterFeaturesExcludedFeaturesCreatedAtMobileInstanceKeysMobileCustomizationMobileSearchInstanceKeysContactFirstNameContactLastNameContactEmailContactPhoneCountrySizeHasGoogleSsoIdentityProvidersLoginProviderOnly"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerResellerResellerMessagesResellerListResponse": {
        "id": "ServerResellerResellerMessagesResellerListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "CustomerProtoIdUidName"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerRoleRoleMessagesAuthorizationActionResource": {
        "id": "ServerRoleRoleMessagesAuthorizationActionResource",
        "properties": {
          "customContentType": {
            "description": "The custom content type concerned by the action.",
            "type": "string"
          },
          "name": {
            "description": "The name of the authorization action.",
            "type": "string"
          },
          "type": {
            "description": "The type of action.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerRoleRoleMessagesAuthorizationResource": {
        "id": "ServerRoleRoleMessagesAuthorizationResource",
        "properties": {
          "actions": {
            "description": "\n        The list of actions.\n        ",
            "items": {
              "$ref": "ServerRoleRoleMessagesAuthorizationActionResource"
            },
            "type": "array"
          },
          "feeds": {
            "description": "\n        The list of feeds concerned by the authorization.\n        ",
            "items": {
              "$ref": "FeedProtoIdName"
            },
            "type": "array"
          },
          "metadata": {
            "description": "The list of metadata.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerRoleRoleMessagesRoleCheckRequest": {
        "id": "ServerRoleRoleMessagesRoleCheckRequest",
        "properties": {
          "actions": {
            "description": "The list of actions to check.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "feeds": {
            "description": "The list of feeds concerned by the actions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instance": {
            "description": "The ID of the instance.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerRoleRoleMessagesRoleCheckResponse": {
        "id": "ServerRoleRoleMessagesRoleCheckResponse",
        "properties": {
          "allowed": {
            "description": "\n        Whether the user is authorized to do an action\n        ",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerRoleRoleMessagesRoleListResponse": {
        "description": "\n    Resource for a response of a Role's list request\n    ",
        "id": "ServerRoleRoleMessagesRoleListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Role"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerRoleRoleMessagesRoleListWithFeedResponse": {
        "description": "\n    Resource for a response of a Role's list request\n    ",
        "id": "ServerRoleRoleMessagesRoleListWithFeedResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerRoleRoleMessagesRoleResource"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerRoleRoleMessagesRoleResource": {
        "id": "ServerRoleRoleMessagesRoleResource",
        "properties": {
          "authorizations": {
            "description": "\n        The list of authorizations.\n        ",
            "items": {
              "$ref": "ServerRoleRoleMessagesAuthorizationResource"
            },
            "type": "array"
          },
          "createdAt": {
            "description": "The creation date (Format: UTC date-time).",
            "type": "string"
          },
          "customer": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "description": {
            "description": "The description of the role.",
            "type": "string"
          },
          "feeds": {
            "description": "\n        The list of feeds.\n        ",
            "items": {
              "$ref": "FeedProtoIdName"
            },
            "type": "array"
          },
          "heritable": {
            "description": "\n        Whether the role is available in other instance. (Default: false)\n        ",
            "type": "boolean"
          },
          "id": {
            "description": "The ID of the role.",
            "format": "int64",
            "type": "string"
          },
          "instance": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "name": {
            "description": "The name of the role.",
            "type": "string"
          },
          "updatedAt": {
            "description": "The last update date (Format: UTC date-time).",
            "type": "string"
          },
          "users": {
            "description": "The list of users.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchArticle": {
        "description": "\n    The user has selected one or more facet buckets on the user interface.\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchArticle",
        "properties": {
          "authorDetails": {
            "description": "The author details object of article: {id, name}",
            "type": "string"
          },
          "comments": {
            "description": "The number of comments of article",
            "type": "string"
          },
          "customContentTypeDetails": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails",
            "description": "The custom content type details of article"
          },
          "customContentTypeTags": {
            "description": "The customContentTypeTags list of article",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instance": {
            "description": "The instance id of article",
            "type": "string"
          },
          "instanceDetails": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails",
            "description": "Instance details object : {id, name}"
          },
          "likes": {
            "description": "The number of likes of article",
            "type": "string"
          },
          "metadata": {
            "description": "The metadata list of article",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "metadataDetails": {
            "description": "Metadatas details list object : [{id, name, parent: {id, name}}]",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails"
            },
            "type": "array"
          },
          "properties": {
            "description": "The article properties.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchArticleProperties"
            },
            "type": "array"
          },
          "slug": {
            "description": "The localized human-readable name of article slug",
            "type": "string"
          },
          "status": {
            "description": "The status of article",
            "type": "string"
          },
          "thumbnail": {
            "description": "The thumbnail of the article.",
            "type": "string"
          },
          "type": {
            "description": "The type of article",
            "type": "string"
          },
          "uid": {
            "description": "The uid of article",
            "type": "string"
          },
          "url": {
            "description": "The url of article.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchArticleProperties": {
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchArticleProperties",
        "properties": {
          "layout": {
            "description": "The layout of the propertie article.",
            "type": "string"
          },
          "name": {
            "description": "The localized human-readable name of the propertie article.",
            "type": "string"
          },
          "order": {
            "description": "The order of the propertie article.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDataSourceListMessage": {
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDataSourceListMessage",
        "properties": {
          "callId": {
            "description": "*beta* The ID of the call.",
            "type": "string"
          },
          "customerId": {
            "description": "*beta* The ID of the customer.",
            "type": "string"
          },
          "fields": {
            "description": "*beta* The list of fields that will be returned with the response.",
            "type": "string"
          },
          "items": {
            "description": "*beta* The list of returned items.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesDataSourceDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDateValue": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/indexing.datasources.items#Date\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDateValue",
        "properties": {
          "day": {
            "description": "*beta* The day.",
            "type": "string"
          },
          "month": {
            "description": "*beta* The month.",
            "type": "string"
          },
          "year": {
            "description": "*beta* The year.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDateValues": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/indexing.datasources.items#DateValues\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDateValues",
        "properties": {
          "values": {
            "description": "*beta* The values of the field.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDateValue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDirectoryEntry": {
        "description": "\n    DirectoryEntry message\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDirectoryEntry",
        "properties": {
          "directory": {
            "description": "Entry's directory info",
            "type": "string"
          },
          "favoritesCount": {
            "description": "Entry's favourite count",
            "type": "string"
          },
          "id": {
            "description": "Directory entry UID",
            "type": "string"
          },
          "instanceDetails": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails",
            "description": "Instance details object : {id, name}"
          },
          "language": {
            "description": "Directory entry language",
            "type": "string"
          },
          "link": {
            "description": "Entry's link",
            "type": "string"
          },
          "metadataDetails": {
            "description": "Metadatas details list object : [{id, name, parent: {id, name}}]",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails"
            },
            "type": "array"
          },
          "name": {
            "description": "Directory entry name",
            "type": "string"
          },
          "publicationDate": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDateValues",
            "description": "Directory entry publication date"
          },
          "tagsDetails": {
            "description": "Tags details list object : [{id, name, parent: {id, name}}]",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails"
            },
            "type": "array"
          },
          "thumbnail": {
            "description": "Thumbnail's URL",
            "type": "string"
          },
          "uid": {
            "description": "Directory entry UID",
            "type": "string"
          },
          "updateDate": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDateValues",
            "description": "Directory entry update date"
          },
          "url": {
            "description": "Entry's url",
            "type": "string"
          },
          "value": {
            "description": "Entry's value",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDoubleValues": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/indexing.datasources.items#DoubleValues\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDoubleValues",
        "properties": {
          "values": {
            "description": "*beta* The values of the field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchFacetBucket": {
        "description": "\n    https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#facetbucket\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchFacetBucket",
        "properties": {
          "count": {
            "description": "*beta* The number of documents for this bucket.",
            "type": "string"
          },
          "percentage": {
            "description": "*beta* The percentage of documents for this bucket.",
            "type": "string"
          },
          "range": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesMatchRanges",
            "description": "*beta* The start and end indexes where the bucket value has been found."
          },
          "selected": {
            "description": "*beta* Whether the bucket was selected in the query request.",
            "type": "boolean"
          },
          "value": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchFacetBucketValue",
            "description": "*beta* The value for this bucket."
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchFacetBucketValue": {
        "description": "\n    https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#Value\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchFacetBucketValue",
        "properties": {
          "booleanValue": {
            "description": "*beta* The boolean value for this bucket.",
            "type": "boolean"
          },
          "doubleValue": {
            "description": "*beta* The double value for this bucket.",
            "type": "string"
          },
          "integerValue": {
            "description": "*beta* The integer value for this bucket.",
            "type": "string"
          },
          "stringValue": {
            "description": "*deprecated* The string value for this bucket.",
            "type": "string"
          },
          "textValue": {
            "description": "*beta* The string value for this bucket.",
            "type": "string"
          },
          "timestampValue": {
            "description": "*beta* The timestamp value for this bucket.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchFacetResult": {
        "description": "\n    https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#facetresult\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchFacetResult",
        "properties": {
          "bucket": {
            "description": "*beta* The buckets for this facet.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchFacetBucket"
            },
            "type": "array"
          },
          "localizedOperatorName": {
            "description": "*beta* The localized human-readable name of the filter.",
            "type": "string"
          },
          "objectType": {
            "description": "*beta* The name of the object Type.",
            "type": "string"
          },
          "operatorName": {
            "description": "*beta* The name of the operator.",
            "type": "string"
          },
          "sourceName": {
            "description": "*beta* The name of the 3p source.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchIntegerValues": {
        "description": "\n    https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/indexing.datasources.items#IntegerValues\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchIntegerValues",
        "properties": {
          "values": {
            "description": "*beta* The values of the field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchMedia": {
        "description": "\n    The user has selected one or more facet buckets on the user interface.\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchMedia",
        "properties": {
          "authorDetails": {
            "description": "The author details object of media: {id, name}",
            "type": "string"
          },
          "description": {
            "description": "The description of the media.",
            "type": "string"
          },
          "height": {
            "description": "The height of the image, if any.",
            "type": "string"
          },
          "instance": {
            "description": "The instance id of the media",
            "type": "string"
          },
          "instanceDetails": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails",
            "description": "Instance details object : {id, name}"
          },
          "language": {
            "description": "The language of the media.",
            "type": "string"
          },
          "mediaName": {
            "description": "The media name.",
            "type": "string"
          },
          "mimeType": {
            "description": "The MIME type of the media.",
            "type": "string"
          },
          "name": {
            "description": "The media name.",
            "type": "string"
          },
          "size": {
            "description": "The size of the media, in bytes.",
            "type": "string"
          },
          "slug": {
            "description": "The localized human-readable name of media slug",
            "type": "string"
          },
          "tags": {
            "description": "The tags list of media",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tagsDetails": {
            "description": "Metadatas details list object : [{id, name, parent: {id, name}}]",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails"
            },
            "type": "array"
          },
          "thumbnail": {
            "description": "The thumbnail of the media.",
            "type": "string"
          },
          "type": {
            "description": "The media type.",
            "type": "string"
          },
          "uid": {
            "description": "The uid of media",
            "type": "string"
          },
          "url": {
            "description": "The url of media.",
            "type": "string"
          },
          "width": {
            "description": "The width of the image, if any.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchMetadata": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#Metadata\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchMetadata",
        "properties": {
          "createTime": {
            "description": "*beta* The end index at which the query string has been found.",
            "type": "string"
          },
          "fields": {
            "description": "*beta* The metadata fields.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchMetadataField"
            },
            "type": "array"
          },
          "mimeType": {
            "description": "*beta* The mime type of the document.",
            "type": "string"
          },
          "owner": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesOwner",
            "description": "*beta* The owner of the document."
          },
          "source": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesDataSourceDescription",
            "description": "*beta* kept for temporary compatibility"
          },
          "sourceUid": {
            "description": "The source of the document.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "*beta* The thumbnail of the document.",
            "type": "string"
          },
          "updateTime": {
            "description": "*beta* The start index at which the query string has been found.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchMetadataField": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/indexing.datasources.items#NamedProperty\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchMetadataField",
        "properties": {
          "booleanValue": {
            "description": "*beta* The bool value of the field.",
            "type": "boolean"
          },
          "dateValues": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDateValues",
            "description": "*beta* The date value of the field."
          },
          "doubleValues": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDoubleValues",
            "description": "*beta* The double value of the field."
          },
          "enumValues": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchStringValues",
            "description": "*beta* The enum value of the field."
          },
          "filterValues": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchStringValues",
            "description": "*deprecated* The filter value of the field."
          },
          "htmlValues": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchStringValues",
            "description": "*beta* The html value of the field."
          },
          "integerValues": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchIntegerValues",
            "description": "*beta* The integer value of the field."
          },
          "name": {
            "description": "*beta* The name of the field.",
            "type": "string"
          },
          "objectValues": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchObjectValues",
            "description": "*beta* The object value of the field."
          },
          "stringValues": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchStringValues",
            "description": "*deprecated* The string value of the field."
          },
          "textValues": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchStringValues",
            "description": "*beta* The string value of the field."
          },
          "timestampValues": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchStringValues",
            "description": "*beta* The timestamp value of the field."
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchObjectValues": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/indexing.datasources.items#ObjectValues\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchObjectValues",
        "properties": {
          "values": {
            "description": "*beta* The values of the field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchPhoto": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/Person#Photo\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchPhoto",
        "properties": {
          "url": {
            "description": "The photo of the person.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchPost": {
        "description": "\n    The user has selected one or more facet buckets on the user interface.\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchPost",
        "properties": {
          "attachmentsCount": {
            "description": "The number of attachments of post",
            "type": "string"
          },
          "authorDetails": {
            "description": "The author details object of post: {id, name}",
            "type": "string"
          },
          "comments": {
            "description": "The number of comments of post",
            "type": "string"
          },
          "customContentTypeTags": {
            "description": "The customContentTypeTags list of post",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instance": {
            "description": "The instance id of post",
            "type": "string"
          },
          "instanceDetails": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails",
            "description": "Instance details object : {id, name}"
          },
          "likes": {
            "description": "The number of likes of post",
            "type": "string"
          },
          "parentContentDetails": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesParentDetails",
            "description": "Instance details object : {id, name}"
          },
          "postType": {
            "description": "The article properties.",
            "type": "string"
          },
          "slug": {
            "description": "The localized human-readable name of post slug",
            "type": "string"
          },
          "tags": {
            "description": "The tags list of post",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tagsDetails": {
            "description": "Metadatas details list object : [{id, name, parent: {id, name}}]",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails"
            },
            "type": "array"
          },
          "thumbnail": {
            "description": "The thumbnail of the post.",
            "type": "string"
          },
          "uid": {
            "description": "The uid of post",
            "type": "string"
          },
          "url": {
            "description": "The url of post.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchQueryRequest": {
        "description": "\n    A CloudSearch search query request.\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchQueryRequest",
        "properties": {
          "callId": {
            "description": "*beta* The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "*beta* \n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "instanceId": {
            "description": "*beta* The ID of the instance.",
            "type": "string"
          },
          "lang": {
            "description": "*beta* The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "query": {
            "description": "*beta* The query used to filter the result.",
            "type": "string"
          },
          "sources": {
            "description": "*beta* The list of sources to query.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesQuerySourceDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchQueryResponse": {
        "description": "\n    A CloudSearch query response conforming to our frontend expectations.\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchQueryResponse",
        "properties": {
          "callId": {
            "description": "*beta* The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "*beta* \n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "facets": {
            "description": "*beta* The list of returned items.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchFacetResult"
            },
            "type": "array"
          },
          "items": {
            "description": "*beta* The list of returned items.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSearchResult"
            },
            "type": "array"
          },
          "more": {
            "description": "*beta* Whether there are more results.",
            "type": "boolean"
          },
          "resultCountEstimate": {
            "description": "*beta* The estimated number of results.",
            "type": "string"
          },
          "resultCountExact": {
            "description": "*beta* The exact number of results.",
            "type": "string"
          },
          "spellResults": {
            "description": "*beta* The spelling suggestions for the typed query string.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSpellResult"
            },
            "type": "array"
          },
          "tabs": {
            "description": "*beta* The tabs to show.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesDataSourceDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSearchResult": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#SearchResult\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSearchResult",
        "properties": {
          "article": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchArticle",
            "description": "*beta* If this result is an article, a subset of the article."
          },
          "directoryEntry": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchDirectoryEntry",
            "description": "*beta* If this result is an directory entry, a subset of the article."
          },
          "media": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchMedia",
            "description": "*beta* If this result is a media, a subset of the media."
          },
          "metadata": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchMetadata",
            "description": "*beta* A set of metadata concerning the document."
          },
          "post": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchPost",
            "description": "*beta* If this result is a post, a subset of the post."
          },
          "snippet": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesSnippet",
            "description": "*beta* The excerpt of the document that matches the query string."
          },
          "title": {
            "description": "*beta* The title of the found document.",
            "type": "string"
          },
          "url": {
            "description": "*beta* The address at which the document may be found.",
            "type": "string"
          },
          "user": {
            "$ref": "User",
            "description": "*beta* If this result is a user, a subset of the user."
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSourceCustomFieldsResponse": {
        "description": "\n    The response to list all the custom fields for a given source.\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSourceCustomFieldsResponse",
        "properties": {
          "callId": {
            "description": "*beta* The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "*beta* The custom fields for the given source",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCustomField"
            },
            "type": "array"
          },
          "source": {
            "description": "*beta* The source to which the custom fields are related.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSourceIdRequest": {
        "description": "\n    The request to list all the custom fields for a given source.\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSourceIdRequest",
        "properties": {
          "callId": {
            "description": "*beta* The ID of the call.",
            "type": "string"
          },
          "source": {
            "description": "*beta* The source to ask custom fields for.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSpellResult": {
        "description": "\n    https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#facetresult\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSpellResult",
        "properties": {
          "suggestedQuery": {
            "description": "*beta* proposed query string.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchStringValues": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/indexing.datasources.items#StringValues\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchStringValues",
        "properties": {
          "values": {
            "description": "*beta* The values of the field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSuggestRequest": {
        "description": "\n    A CloudSearch search suggest request.\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSuggestRequest",
        "properties": {
          "query": {
            "description": "*beta* The query used to filter the result.",
            "type": "string"
          },
          "sources": {
            "description": "*beta* The list of sources to query.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSuggestResponse": {
        "description": "\n    A CloudSearch suggest response conforming to our frontend expectations.\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSuggestResponse",
        "properties": {
          "items": {
            "description": "*beta* The list of returned items.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSuggestResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSuggestResult": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#SearchResult\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchSuggestResult",
        "properties": {
          "name": {
            "description": "*beta* The name of the suggestion.",
            "type": "string"
          },
          "peopleSuggestion": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesPeopleSuggestion",
            "description": "*beta* A set of metadata concerning the document."
          },
          "querySuggestion": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesQuerySuggestion",
            "description": "*beta* The excerpt of the document that matches the query string."
          },
          "suggestedQuery": {
            "description": "*beta* The suggested query string.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesCustomField": {
        "id": "ServerSearchCloudsearchCloudsearchMessagesCustomField",
        "properties": {
          "enabled": {
            "description": "*beta* Whether this field has been enabled by the administrator.",
            "type": "boolean"
          },
          "icon": {
            "description": "*beta* The icon associated to the source.",
            "type": "string"
          },
          "layout": {
            "description": "*beta* The layout of the field (OneColumn, TwoColumn).",
            "type": "string"
          },
          "localizedName": {
            "description": "*beta* The localized human-readable name of the field.",
            "type": "string"
          },
          "name": {
            "description": "*beta* The name of this field.",
            "type": "string"
          },
          "order": {
            "description": "*beta* The order of the field.",
            "type": "string"
          },
          "path": {
            "description": "*beta* The path of the field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesDataSourceDescription": {
        "description": "\n    A datasource description that allows our frontend to display a well-looking localized interface.\n\n    See Also:\n        https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/settings.datasources#DataSource\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesDataSourceDescription",
        "properties": {
          "customFields": {
            "description": "*beta* The custom fields for this source.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCustomField"
            },
            "type": "array"
          },
          "enabled": {
            "description": "*beta* Whether this datasource has been enabled by the administrator.",
            "type": "boolean"
          },
          "icon": {
            "description": "*beta* The icon associated to the source.",
            "type": "string"
          },
          "isMetadataVisible": {
            "description": "*beta* Whether the metadata will be visible for this source results.",
            "type": "boolean"
          },
          "isSnippetVisible": {
            "description": "*beta* Whether the snippet will be visible for this source results.",
            "type": "boolean"
          },
          "kind": {
            "description": "*beta* The kind of the source.",
            "type": "string"
          },
          "localizedName": {
            "description": "*beta* The localized human-readable name of the source.",
            "type": "string"
          },
          "order": {
            "description": "*beta* The order of the source.",
            "type": "string"
          },
          "resultsCount": {
            "description": "*beta* The number of results for this tab.",
            "type": "string"
          },
          "template": {
            "description": "*beta* The template of the source.",
            "type": "string"
          },
          "uid": {
            "description": "*beta* The uid of the source.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesEmailAddress": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/Person#EmailAddress\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesEmailAddress",
        "properties": {
          "emailAddress": {
            "description": "The email address of the owner.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesEntityDetails": {
        "id": "ServerSearchCloudsearchCloudsearchMessagesEntityDetails",
        "properties": {
          "icon": {
            "description": "The icon of the entity.",
            "type": "string"
          },
          "id": {
            "description": "The entity id",
            "type": "string"
          },
          "name": {
            "description": "The localized human-readable name of the entity.",
            "type": "string"
          },
          "parent": {
            "$ref": "ServerSearchCloudsearchCloudsearchMessagesParentDetails",
            "description": "The parent of the entity."
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesMatchRanges": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#matchrange\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesMatchRanges",
        "properties": {
          "end": {
            "description": "The end index at which the query string has been found.",
            "type": "string"
          },
          "start": {
            "description": "The start index at which the query string has been found.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesOwner": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/Person\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesOwner",
        "properties": {
          "emailAddresses": {
            "description": "The email addresses of the owners.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesEmailAddress"
            },
            "type": "array"
          },
          "personNames": {
            "description": "The names of the owners.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesPersonName"
            },
            "type": "array"
          },
          "photos": {
            "description": "The photos of the owners.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesCloudSearchPhoto"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesParentDetails": {
        "id": "ServerSearchCloudsearchCloudsearchMessagesParentDetails",
        "properties": {
          "id": {
            "description": "The parent id",
            "type": "string"
          },
          "instance": {
            "description": "The instance ID of the parent.",
            "type": "string"
          },
          "name": {
            "description": "The localized human-readable name of the parent.",
            "type": "string"
          },
          "slug": {
            "description": "The slug of the parent.",
            "type": "string"
          },
          "title": {
            "description": "The localized human-readable title of the parent.",
            "type": "string"
          },
          "uid": {
            "description": "The UID of the parent.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesPeopleSuggestion": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#SearchResult\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesPeopleSuggestion",
        "properties": {
          "person": {
            "$ref": "User",
            "description": "*beta* The suggested person."
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesPersonName": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1alpha/Person#Name\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesPersonName",
        "properties": {
          "displayName": {
            "description": "The name of the person.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesQueryFilter": {
        "id": "ServerSearchCloudsearchCloudsearchMessagesQueryFilter",
        "properties": {
          "kind": {
            "description": "*beta* The type of the filter.",
            "type": "string"
          },
          "name": {
            "description": "*beta* The name of the operator.",
            "type": "string"
          },
          "values": {
            "description": "*beta* The list of values for this query filter.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesQueryFilterOptions": {
        "id": "ServerSearchCloudsearchCloudsearchMessagesQueryFilterOptions",
        "properties": {
          "filters": {
            "description": "*beta* The list of filters for this query.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesQueryFilter"
            },
            "type": "array"
          },
          "objectType": {
            "description": "*beta* The name of the object Type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesQuerySourceDescription": {
        "id": "ServerSearchCloudsearchCloudsearchMessagesQuerySourceDescription",
        "properties": {
          "filterOptions": {
            "description": "*beta* The filters for this source.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesQueryFilterOptions"
            },
            "type": "array"
          },
          "source": {
            "description": "*beta* The uid of the source.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesQuerySuggestion": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#SearchResult\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesQuerySuggestion",
        "properties": {
          "suggestion": {
            "description": "*beta* The suggested query string.",
            "type": "string"
          },
          "type": {
            "description": "*beta* The name of the suggestion.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchCloudsearchCloudsearchMessagesSnippet": {
        "description": "\n    See https://developers.google.com/cloud-search/docs/reference/rest/v1beta1/query/search#Snippet\n    ",
        "id": "ServerSearchCloudsearchCloudsearchMessagesSnippet",
        "properties": {
          "matchRanges": {
            "description": "*beta* The start and end indexes where the query string has been found.",
            "items": {
              "$ref": "ServerSearchCloudsearchCloudsearchMessagesMatchRanges"
            },
            "type": "array"
          },
          "snippet": {
            "description": "*beta* The excerpt of the document that matches the query string.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchSearchMessagesContentAndMediaListResponse": {
        "id": "ServerSearchSearchMessagesContentAndMediaListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerSearchSearchMessagesSearchContentAndMediaRequest": {
        "id": "ServerSearchSearchMessagesSearchContentAndMediaRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "contentStatus": {
            "description": "\n    The status of the element.<br>\n    Acceptable values are:<br>\n     - \"DRAFT\": The model is a draft.<br>\n     - \"REFUSED\": The model has been rejected.<br>\n     - \"TO_VALIDATE\": The model is pending validation.<br>\n     - \"LIVE\": The model is validated.<br>\n     - \"ARCHIVE\": The model is archived.<br>\n     - \"DELETED\": The model is deleted.\n    ",
            "type": "string"
          },
          "contentType": {
            "description": "\n        The types of content used to filter the search result.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "currentInstance": {
            "description": "The ID of the current instance.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customer": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "excludedContentType": {
            "description": "\n        The types of content excluded from the search.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instance": {
            "description": "The list of instance identifiers.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchSearchMessagesSearchContentRequest": {
        "id": "ServerSearchSearchMessagesSearchContentRequest",
        "properties": {
          "author": {
            "description": "The creator of the content.",
            "type": "string"
          },
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "currentInstance": {
            "description": "The ID of the current instance.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customContentType": {
            "description": "\n        The custom type of the content.<br>\n        This is only applicable if type is custom.\n        ",
            "type": "string"
          },
          "customContentTypeTags": {
            "description": "The tags of the custom content type.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customer": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "endDate": {
            "description": "The end date (Format: UTC date-time).",
            "type": "string"
          },
          "endDateFrom": {
            "description": "\n        The content end date should be newer than this date (Format: UTC date-time).\n        ",
            "type": "string"
          },
          "endDateTo": {
            "description": "\n        The content end date should be older than this date (Format: UTC date-time).\n        ",
            "type": "string"
          },
          "excludeType": {
            "description": "\n        The types of content excluded from the search.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "externalKey": {
            "description": "The external key to link a content, directory entry or other.",
            "format": "int64",
            "type": "string"
          },
          "feed": {
            "description": "\n        The list of user groups used to filter the search result.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instance": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "instanceIds": {
            "description": "The list of instance identifiers.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isFeatured": {
            "description": "Whether the content is a breaking news.",
            "type": "boolean"
          },
          "isPinned": {
            "description": "Whether to filter by pinned posts or not.",
            "type": "boolean"
          },
          "lang": {
            "description": "\n        The list of languages. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "metadata": {
            "description": "The list of metadata required for a model to be part of the result.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "orMetadata": {
            "description": "The list of metadata in which a model needs to have at least one of them to be part of the result.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          },
          "startDate": {
            "description": "The start date (Format: UTC date-time).",
            "type": "string"
          },
          "tags": {
            "description": "The tags of the content.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "description": "\n        The types of content used to filter the search result.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSearchSearchMessagesSearchDirectoryEntryRequest": {
        "id": "ServerSearchSearchMessagesSearchDirectoryEntryRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "currentInstance": {
            "description": "The ID of the current instance.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customer": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "directory": {
            "description": "The directory in which the entries are retrieved.",
            "type": "string"
          },
          "endDate": {
            "description": "The end date (Format: UTC date-time).",
            "type": "string"
          },
          "feeds": {
            "description": "\n        The list of user groups used to filter the search result.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includeUserEntries": {
            "default": "True",
            "description": "\n        Whether the user entries are included in the search. (Default: true)\n        ",
            "type": "boolean"
          },
          "instance": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "metadata": {
            "description": "\n        The list of metadata used to filter the search result.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          },
          "startDate": {
            "description": "The start date (Format: UTC date-time).",
            "type": "string"
          },
          "status": {
            "description": "\n    The status of the element.<br>\n    Acceptable values are:<br>\n     - \"DRAFT\": The model is a draft.<br>\n     - \"REFUSED\": The model has been rejected.<br>\n     - \"TO_VALIDATE\": The model is pending validation.<br>\n     - \"LIVE\": The model is validated.<br>\n     - \"ARCHIVE\": The model is archived.<br>\n     - \"DELETED\": The model is deleted.\n    ",
            "type": "string"
          },
          "user": {
            "description": "The user processing the search.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchSearchMessagesSearchDirectoryEntryResponse": {
        "id": "ServerSearchSearchMessagesSearchDirectoryEntryResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "DirectoryEntry"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          },
          "queryId": {
            "description": "The id of the query.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchSearchMessagesSearchDirectoryRequest": {
        "id": "ServerSearchSearchMessagesSearchDirectoryRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customer": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "feeds": {
            "description": "\n        The list of user groups used to filter the search result.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instance": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "metadata": {
            "description": "\n        The list of metadata used to filter the search result.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          },
          "status": {
            "description": "\n    The status of the element.<br>\n    Acceptable values are:<br>\n     - \"DRAFT\": The model is a draft.<br>\n     - \"REFUSED\": The model has been rejected.<br>\n     - \"TO_VALIDATE\": The model is pending validation.<br>\n     - \"LIVE\": The model is validated.<br>\n     - \"ARCHIVE\": The model is archived.<br>\n     - \"DELETED\": The model is deleted.\n    ",
            "type": "string"
          },
          "type": {
            "description": "The content type used to filter the search result.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSearchSearchMessagesSearchDirectoryResponse": {
        "id": "ServerSearchSearchMessagesSearchDirectoryResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Directory"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerSearchSearchMessagesSearchMediaRequest": {
        "id": "ServerSearchSearchMessagesSearchMediaRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "currentInstance": {
            "description": "The ID of the current instance.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customer": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "endDate": {
            "description": "The end date (Format: UTC date-time).",
            "type": "string"
          },
          "ext": {
            "description": "The extension of the file.",
            "type": "string"
          },
          "ids": {
            "description": "The list of media IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instance": {
            "description": "The list of instance identifiers.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lang": {
            "description": "The language. (Format: xx)<br>\n    Acceptable values are:<br>\n     - \"cn\": Chinese<br>\n     - \"en\": English<br>\n     - \"es\": Spanish<br>\n     - \"fr\": French<br>\n     - \"it\": Italian<br>\n     - \"nl\": Dutch<br>\n     - \"pl\": Polish<br>\n     - \"pt\": Portuguese<br>\n     - \"tr\": Turkish<br>\n     - \"cs\": Czech<br>\n     - \"sv\": Swedish<br>\n     - \"de\": German<br>\n     - \"ru\": Russian<br>\n     - \"jp\": Japanese<br>\n     - \"pt_br\": Brazilian Portuguese\n    ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "mimeType": {
            "description": "The type of the file.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the media.",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          },
          "startDate": {
            "description": "The start date (Format: UTC date-time).",
            "type": "string"
          },
          "type": {
            "description": "\n        The types of media used to filter the search result.\n        ",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerSocialActivityActivityMessagesActivityGroupListResponse": {
        "description": "\n    Message for activity group list\n    ",
        "id": "ServerSocialActivityActivityMessagesActivityGroupListResponse",
        "properties": {
          "count": {
            "description": "Total number of items, might be more than the number of items.",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Activity"
            },
            "type": "array"
          },
          "usersCount": {
            "description": "Total number of unique users who made the action.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSocialActivityActivityMessagesActivityGroupRequest": {
        "description": "\n    Message for activities group list request\n    ",
        "id": "ServerSocialActivityActivityMessagesActivityGroupRequest",
        "properties": {
          "actions": {
            "description": "Filter results with this list of actions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "contentTypes": {
            "description": "Filter results with this list of contentTypes.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fields": {
            "description": "The list of fields that will be returned with the response.",
            "type": "string"
          },
          "instanceId": {
            "description": "The ID of the instance.",
            "type": "string"
          },
          "userId": {
            "description": "Fetch only the activities from this user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerSocialActivityActivityMessagesActivityGroupResponseResource": {
        "description": "\n    Message for activities list response\n    ",
        "id": "ServerSocialActivityActivityMessagesActivityGroupResponseResource",
        "properties": {
          "comment": {
            "$ref": "ServerSocialActivityActivityMessagesActivityGroupListResponse",
            "description": "The comment activities in the group."
          },
          "contentDetails": {
            "description": "The group content details.",
            "type": "string"
          },
          "create": {
            "$ref": "ServerSocialActivityActivityMessagesActivityGroupListResponse",
            "description": "The create activities in the group."
          },
          "id": {
            "description": "Unique group identifier.",
            "type": "string"
          },
          "like": {
            "$ref": "ServerSocialActivityActivityMessagesActivityGroupListResponse",
            "description": "The like activities in the group."
          },
          "profile": {
            "$ref": "ServerSocialActivityActivityMessagesActivityGroupListResponse",
            "description": "The profile update activities in the group."
          },
          "update": {
            "$ref": "ServerSocialActivityActivityMessagesActivityGroupListResponse",
            "description": "The update activities in the group."
          }
        },
        "type": "object"
      },
      "ServerSocialActivityActivityMessagesActivityGroupsResponse": {
        "description": "\n    Message for activities list response\n    ",
        "id": "ServerSocialActivityActivityMessagesActivityGroupsResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerSocialActivityActivityMessagesActivityGroupResponseResource"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerSocialSubscriptionSubscriptionMessagesSubscriptionContentsListResponse": {
        "description": "\n    List of contents included in subscriptions\n    ",
        "id": "ServerSocialSubscriptionSubscriptionMessagesSubscriptionContentsListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Content"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerSocialSubscriptionSubscriptionMessagesSubscriptionListResponse": {
        "description": "\n    Subscription list response message\n    ",
        "id": "ServerSocialSubscriptionSubscriptionMessagesSubscriptionListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Subscription"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerSocialSubscriptionSubscriptionMessagesSubscriptionUsersListResponse": {
        "description": "\n    List of users included in subscriptions\n    ",
        "id": "ServerSocialSubscriptionSubscriptionMessagesSubscriptionUsersListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "User"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerStreamStreamMessagesConfigurationDeleteMultiRequest": {
        "description": "\n    Request message for stream/configuration/deleteMulti\n    ",
        "id": "ServerStreamStreamMessagesConfigurationDeleteMultiRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "configurationIds": {
            "description": "An array of stream configuration IDs.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerStreamStreamMessagesConfigurationListRequest": {
        "description": "\n    Request message for stream/configuration/list\n    ",
        "id": "ServerStreamStreamMessagesConfigurationListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "configurationIds": {
            "description": "An array of stream configuration IDs.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerStreamStreamMessagesConfigurationListResponse": {
        "description": "\n    Response message for stream/configuration/list\n    ",
        "id": "ServerStreamStreamMessagesConfigurationListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "StreamConf"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerStreamStreamMessagesConfigurationMessage": {
        "description": "\n    Generic message containing a call ID and a list of stream configurations.\n    ",
        "id": "ServerStreamStreamMessagesConfigurationMessage",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "configurations": {
            "description": "An array of stream configurations.",
            "items": {
              "$ref": "StreamConf"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerStreamStreamMessagesContentListRequest": {
        "description": "\n    Request message for stream/content/list\n    ",
        "id": "ServerStreamStreamMessagesContentListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "configurationId": {
            "description": "The ID of the stream configuration.",
            "format": "int64",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerStreamStreamMessagesContentListResponse": {
        "description": "\n    Response message for stream/content/list\n    ",
        "id": "ServerStreamStreamMessagesContentListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Content"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerStreamStreamMessagesListRequest": {
        "description": "\n    Request message for stream/list\n    ",
        "id": "ServerStreamStreamMessagesListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerStreamStreamMessagesListResponse": {
        "description": "\n    Reponse message for stream/list\n    ",
        "id": "ServerStreamStreamMessagesListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "ServerStreamStreamMessagesStreamMessage"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerStreamStreamMessagesStreamMessage": {
        "description": "\n    Message containing a stream configuration and its top contents. To be used in StreamResponse\n    ",
        "id": "ServerStreamStreamMessagesStreamMessage",
        "properties": {
          "configuration": {
            "$ref": "StreamConf",
            "description": "The stream configuration."
          },
          "contents": {
            "description": "An array of top contents.",
            "items": {
              "$ref": "Content"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerStyleStyleMessagesStyleListResponse": {
        "id": "ServerStyleStyleMessagesStyleListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Style"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerStyleStyleMessagesStyleSheetSaveRequest": {
        "id": "ServerStyleStyleMessagesStyleSheetSaveRequest",
        "properties": {
          "content": {
            "description": "The content of the stylesheet.",
            "type": "string"
          },
          "kind": {
            "description": "The type of the stylesheet.",
            "type": "string"
          },
          "styleId": {
            "description": "The ID of the style.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerTagsTagsMessagesTagListResponse": {
        "description": "\n    Resource for a response of a tag's list request\n    ",
        "id": "ServerTagsTagsMessagesTagListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Tag"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerTemplateTemplateMessagesErrorReason": {
        "description": "\n    Error and its relative object\n    ",
        "id": "ServerTemplateTemplateMessagesErrorReason",
        "properties": {
          "reason": {
            "description": "The error description.",
            "type": "string"
          },
          "target": {
            "$ref": "Template",
            "description": "The invalid template."
          }
        },
        "type": "object"
      },
      "ServerTemplateTemplateMessagesSaveTemplateMultiRequest": {
        "description": "\n    Resource for a list of templates to save\n    ",
        "id": "ServerTemplateTemplateMessagesSaveTemplateMultiRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Template"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerTemplateTemplateMessagesTemplateListResponse": {
        "description": "\n    Resource for a response of a Template's list request\n    ",
        "id": "ServerTemplateTemplateMessagesTemplateListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "errors": {
            "description": "The list of errors and their relative target.",
            "items": {
              "$ref": "ServerTemplateTemplateMessagesErrorReason"
            },
            "type": "array"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Template"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerTranslateTranslateMessagesTranslateRequest": {
        "description": "\n    Resource to get a translation\n    ",
        "id": "ServerTranslateTranslateMessagesTranslateRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "contentText": {
            "description": "The text to translate.",
            "type": "string"
          },
          "sourceLang": {
            "description": "The text language (Format ISO639-1 Code).",
            "type": "string"
          },
          "targetLang": {
            "description": "The language for the result (Format ISO639-1 Code).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerTranslateTranslateMessagesTranslateResponse": {
        "description": "\n    Resource to send back the translation\n    ",
        "id": "ServerTranslateTranslateMessagesTranslateResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "contentText": {
            "description": "The translated text.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerTutorialTutorialMessagesTutorialListResponse": {
        "description": "\n    Resource for a response of a tutorial list request\n    ",
        "id": "ServerTutorialTutorialMessagesTutorialListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Tutorial"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerUserOrganizationChartOrganizationChartMessagesOrganizationChartResponse": {
        "id": "ServerUserOrganizationChartOrganizationChartMessagesOrganizationChartResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "manager": {
            "$ref": "User",
            "description": "The profile of the manager of the user."
          },
          "sameLevel": {
            "description": "The profiles of the users with the same manager as the user.",
            "items": {
              "$ref": "User"
            },
            "type": "array"
          },
          "subLevel": {
            "description": "The profiles of the users with the user as their manager.",
            "items": {
              "$ref": "User"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerUserUserMessagesTokenResponse": {
        "description": "\n    Response the token.\n    ",
        "id": "ServerUserUserMessagesTokenResponse",
        "properties": {
          "accessToken": {
            "description": "The access token to call the LumApps API.",
            "type": "string"
          },
          "expiresAt": {
            "description": "The expiration date of the token.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerUserUserMessagesUserDirectoryListRequest": {
        "description": "\n    Message used to list users according to a user directory.\n    ",
        "id": "ServerUserUserMessagesUserDirectoryListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "contentId": {
            "description": "The ID of the content for which users are contributors.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customerId": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "feeds": {
            "description": "\n            The list of user groups used to filter the search result.\n            ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "firstName": {
            "description": "The first name of the user.",
            "type": "string"
          },
          "lastName": {
            "description": "The last name of the user.",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "primaryEmail": {
            "description": "The primary email of the user.",
            "type": "string"
          },
          "profileCriteria": {
            "description": "A search criteria. (Format: JSON object)",
            "type": "string"
          },
          "query": {
            "description": "The query used to filter the result.",
            "type": "string"
          },
          "registeredSince": {
            "description": "The number of days since the user is registered.",
            "type": "string"
          },
          "showHidden": {
            "description": "\n            Whether hidden user should be displayed. (Default: false)\n            ",
            "type": "boolean"
          },
          "sortOrder": {
            "description": "\n    The sort order defined by the property name used to sort.<br>\n    Descending sort order is denoted by a hyphen (-) preceding the property name;\n    omitting the hyphen specifies ascending order by default.\n    ",
            "type": "string"
          },
          "status": {
            "description": "\n    The status of the user.<br>\n    Acceptable values are:<br>\n     - \"ENABLED\": The user account is still live. (default)<br>\n     - \"DISABLED\": The user account has been deactivated.\n    ",
            "type": "string"
          },
          "types": {
            "description": "\n            The list of user account types used to filter the search result.<br>\n            Acceptable values are:<br>\n             - \"EXTERNAL\": External account.<br>\n             - \"GOOGLE\": Google account.\n            ",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerUserUserMessagesUserListResponse": {
        "description": "\n    Resource for a User list response\n    ",
        "id": "ServerUserUserMessagesUserListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "User"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerWeatherWeatherMessagesWeatherResponse": {
        "description": "\n    Resource for a weather\n    ",
        "id": "ServerWeatherWeatherMessagesWeatherResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "city": {
            "description": "The city for which we have fetched the weather.",
            "type": "string"
          },
          "forecast": {
            "description": "The result of the weather.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerWebhookWebhookMessagesWebhookListRequest": {
        "id": "ServerWebhookWebhookMessagesWebhookListRequest",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "customerId": {
            "description": "The ID of the customer.",
            "type": "string"
          },
          "maxResults": {
            "default": "30",
            "description": "Maximum results returned. Acceptable values are 1 to MAX_INT, inclusive. (Default: 30)",
            "type": "string"
          },
          "status": {
            "description": "\n    The status of the webhook.<br>\n    Acceptable values are:<br>\n    - \"LIVE\": the webhook is up and the handshake was successful.<br>\n    - \"ARCHIVE\" the webhook has been disabled.<br>\n    - \"DELETED\": the webhook has been deleted.<br>\n    - \"PENDING\": the webhook has been saved but no handshake have been tried yet.<br>\n    - \"REFUSED\": the webhook has been saved but the handshake has been refused.\n    ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServerWebhookWebhookMessagesWebhookListResponse": {
        "id": "ServerWebhookWebhookMessagesWebhookListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Webhook"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerWebhookWebhookMessagesWebhookPreferenceResponse": {
        "id": "ServerWebhookWebhookMessagesWebhookPreferenceResponse",
        "properties": {
          "hook": {
            "description": "Webhook id.",
            "type": "string"
          },
          "notify": {
            "description": "Whether the user will be notified or not.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerWidgetWidgetMessagesWidgetListResponse": {
        "description": "\n    Resource for a response of a Widget's list request\n    ",
        "id": "ServerWidgetWidgetMessagesWidgetListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "cursor": {
            "description": "\n    The cursor for continuing a previous request on the next page.\n    This should be set to the value of 'cursor' from the previous response.\n    ",
            "type": "string"
          },
          "items": {
            "description": "The list of returned items.",
            "items": {
              "$ref": "Widget"
            },
            "type": "array"
          },
          "more": {
            "description": "Whether there are more results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServerWidgetWidgetMessagesWidgetTypeListResponse": {
        "description": "\n    Resource for a Widget types list request\n    ",
        "id": "ServerWidgetWidgetMessagesWidgetTypeListResponse",
        "properties": {
          "callId": {
            "description": "The ID of the call.",
            "type": "string"
          },
          "items": {
            "description": "The widget type list.",
            "items": {
              "$ref": "ServerWidgetWidgetMessagesWidgetTypeResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerWidgetWidgetMessagesWidgetTypeResource": {
        "description": "\n    Resource for a WidgetType\n    ",
        "id": "ServerWidgetWidgetMessagesWidgetTypeResource",
        "properties": {
          "name": {
            "description": "The widget type name.",
            "type": "string"
          },
          "value": {
            "description": "The widget type value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Slide": {
        "id": "Slide",
        "properties": {
          "id": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "string"
          },
          "servingUrl": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SpammerInfo": {
        "id": "SpammerInfo",
        "properties": {
          "lastReportDate": {
            "type": "string"
          },
          "nbReported": {
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StockExchange": {
        "id": "StockExchange",
        "properties": {
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "values": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "StreamConf": {
        "id": "StreamConf",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "feedIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "filterFields": {
            "$ref": "FilterFields"
          },
          "id": {
            "type": "string"
          },
          "isViewLocked": {
            "type": "boolean"
          },
          "label": {
            "type": "string"
          },
          "limit": {
            "default": "3",
            "format": "int32",
            "type": "integer"
          },
          "priority": {
            "format": "int32",
            "type": "integer"
          },
          "uid": {
            "type": "string"
          },
          "viewMode": {
            "default": "LIST",
            "enum": [
              "LIST",
              "SPOTLIGHT"
            ],
            "enumDescriptions": [
              "",
              ""
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Style": {
        "id": "Style",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "stylesheets": {
            "items": {
              "$ref": "ResourceFile"
            },
            "type": "array"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Subscription": {
        "id": "Subscription",
        "properties": {
          "customerKey": {
            "type": "string"
          },
          "followerFeedKey": {
            "type": "string"
          },
          "followerUserDetails": {
            "type": "string"
          },
          "followerUserKey": {
            "type": "string"
          },
          "followingContentDetails": {
            "type": "string"
          },
          "followingContentKey": {
            "type": "string"
          },
          "followingContentType": {
            "type": "string"
          },
          "followingSearchQuery": {
            "type": "string"
          },
          "followingUserDetails": {
            "type": "string"
          },
          "followingUserKey": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instanceKey": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "properties": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemInfo": {
        "id": "SystemInfo",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          },
          "lastUpdaterId": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "statusChangedAt": {
            "type": "string"
          },
          "statusChangedAuthorId": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Tag": {
        "id": "Tag",
        "properties": {
          "customer": {
            "type": "string"
          },
          "functionalInnerId": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Template": {
        "id": "Template",
        "properties": {
          "basicMode": {
            "type": "boolean"
          },
          "components": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "contentType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "customContentType": {
            "type": "string"
          },
          "customContentTypeTags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customer": {
            "type": "string"
          },
          "feedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fixedLayout": {
            "type": "boolean"
          },
          "fixedWidgets": {
            "type": "boolean"
          },
          "functionalInnerId": {
            "type": "string"
          },
          "header": {
            "type": "string"
          },
          "heritable": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "metadata": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "visibilityInheritedOnly": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "TimeSlot": {
        "id": "TimeSlot",
        "properties": {
          "endAt": {
            "type": "string"
          },
          "startAt": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Tutorial": {
        "id": "Tutorial",
        "properties": {
          "displayAgain": {
            "type": "boolean"
          },
          "displayAgainTime": {
            "type": "string"
          },
          "endAt": {
            "type": "string"
          },
          "feeds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "functionalInnerId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "slides": {
            "items": {
              "$ref": "Slide"
            },
            "type": "array"
          },
          "startAt": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "id": "User",
        "properties": {
          "accountType": {
            "type": "string"
          },
          "alternateEmail": {
            "type": "string"
          },
          "apiProfile": {
            "type": "string"
          },
          "changePasswordAtNextLogin": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "customProfile": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "devices": {
            "items": {
              "$ref": "Device"
            },
            "type": "array"
          },
          "directoryFavorites": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "email": {
            "type": "string"
          },
          "emailNotifications": {
            "$ref": "UserEmailNotification"
          },
          "expirationDate": {
            "type": "string"
          },
          "externalDirectoryUrl": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "gamification": {
            "$ref": "UserGamification"
          },
          "hiddenDirectoryFavorites": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "instancesSuperAdmin": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isDesigner": {
            "type": "boolean"
          },
          "isGod": {
            "type": "boolean"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isSuperAdmin": {
            "type": "boolean"
          },
          "lang": {
            "type": "string"
          },
          "langs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lastName": {
            "type": "string"
          },
          "lastSynchronization": {
            "type": "string"
          },
          "msRefreshToken": {
            "type": "string"
          },
          "msToken": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string"
          },
          "profileStatus": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "settings": {
            "$ref": "UserSettings"
          },
          "status": {
            "default": "enabled",
            "type": "string"
          },
          "subscriptions": {
            "items": {
              "$ref": "UserSubscription"
            },
            "type": "array"
          },
          "synchronized": {
            "type": "boolean"
          },
          "tutorials": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "unreadNotificationCount": {
            "format": "int32",
            "type": "integer"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserContent": {
        "id": "UserContent",
        "properties": {
          "content": {
            "type": "string"
          },
          "functionalInnerId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "values": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserEmailNotification": {
        "id": "UserEmailNotification",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "delay": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserGamification": {
        "id": "UserGamification",
        "properties": {
          "badge": {
            "$ref": "RewardMedia"
          },
          "badgeId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "points": {
            "$ref": "LeaderboardPoints"
          },
          "rank": {
            "$ref": "LeaderboardPoints"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "userRewardId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserGoalResult": {
        "id": "UserGoalResult",
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customerId": {
            "type": "string"
          },
          "goalDetails": {
            "type": "string"
          },
          "goalId": {
            "type": "string"
          },
          "goalReached": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "instanceDetails": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "nbCompletion": {
            "default": "1",
            "format": "int32",
            "type": "integer"
          },
          "pendingPoints": {
            "format": "int32",
            "type": "integer"
          },
          "points": {
            "format": "int32",
            "type": "integer"
          },
          "questDetails": {
            "type": "string"
          },
          "questId": {
            "type": "string"
          },
          "questReached": {
            "type": "boolean"
          },
          "scopes": {
            "items": {
              "$ref": "UserGoalResultScope"
            },
            "type": "array"
          },
          "uid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserGoalResultScope": {
        "id": "UserGoalResultScope",
        "properties": {
          "nbCompletion": {
            "default": "1",
            "format": "int32",
            "type": "integer"
          },
          "scopeDetails": {
            "type": "string"
          },
          "scopeId": {
            "type": "string"
          },
          "scopeKind": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserNotificationsStatus": {
        "id": "UserNotificationsStatus",
        "properties": {
          "comment": {
            "default": "True",
            "type": "boolean"
          },
          "like": {
            "default": "True",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UserProtoIdUidUrlProfileIdEmailFirstNameLastNameLangLangsPropertiesSubscriptionsIsSuperAdminApiProfileCustomerSynchronizedDevicesChangePasswordAtNextLoginStatusAccountTypeInstancesSuperAdminDirectoryFavoritesHiddenDirectoryFavoritesCreatedAtUpdatedAtCustomProfileEmailNotificationsProfilePictureIsHiddenAlternateEmailLastSynchronizationExpirationDateProfileStatusExternalDirectoryUrlSettingsUnreadNotificationCountProfilePictureUrlTutorialsGamificationFullNameIsGodIsDesignerMsTokenMsRefreshTokenPasswordContentId": {
        "id": "UserProtoIdUidUrlProfileIdEmailFirstNameLastNameLangLangsPropertiesSubscriptionsIsSuperAdminApiProfileCustomerSynchronizedDevicesChangePasswordAtNextLoginStatusAccountTypeInstancesSuperAdminDirectoryFavoritesHiddenDirectoryFavoritesCreatedAtUpdatedAtCustomProfileEmailNotificationsProfilePictureIsHiddenAlternateEmailLastSynchronizationExpirationDateProfileStatusExternalDirectoryUrlSettingsUnreadNotificationCountProfilePictureUrlTutorialsGamificationFullNameIsGodIsDesignerMsTokenMsRefreshTokenPasswordContentId",
        "properties": {
          "accountType": {
            "type": "string"
          },
          "alternateEmail": {
            "type": "string"
          },
          "apiProfile": {
            "type": "string"
          },
          "changePasswordAtNextLogin": {
            "type": "boolean"
          },
          "contentId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "customProfile": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "devices": {
            "items": {
              "$ref": "Device"
            },
            "type": "array"
          },
          "directoryFavorites": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "email": {
            "type": "string"
          },
          "emailNotifications": {
            "$ref": "UserEmailNotification"
          },
          "expirationDate": {
            "type": "string"
          },
          "externalDirectoryUrl": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "gamification": {
            "$ref": "UserGamification"
          },
          "hiddenDirectoryFavorites": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "instancesSuperAdmin": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isDesigner": {
            "type": "boolean"
          },
          "isGod": {
            "type": "boolean"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isSuperAdmin": {
            "type": "boolean"
          },
          "lang": {
            "type": "string"
          },
          "langs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lastName": {
            "type": "string"
          },
          "lastSynchronization": {
            "type": "string"
          },
          "msRefreshToken": {
            "type": "string"
          },
          "msToken": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string"
          },
          "profileStatus": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "settings": {
            "$ref": "UserSettings"
          },
          "status": {
            "default": "enabled",
            "type": "string"
          },
          "subscriptions": {
            "items": {
              "$ref": "UserSubscription"
            },
            "type": "array"
          },
          "synchronized": {
            "type": "boolean"
          },
          "tutorials": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "unreadNotificationCount": {
            "format": "int32",
            "type": "integer"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserProtoIdUidUrlProfileIdEmailFirstNameLastNameLangLangsPropertiesSubscriptionsIsSuperAdminApiProfileCustomerSynchronizedDevicesChangePasswordAtNextLoginStatusAccountTypeInstancesSuperAdminDirectoryFavoritesHiddenDirectoryFavoritesCreatedAtUpdatedAtCustomProfileEmailNotificationsProfilePictureIsHiddenAlternateEmailLastSynchronizationExpirationDateProfileStatusExternalDirectoryUrlSettingsUnreadNotificationCountProfilePictureUrlTutorialsGamificationFullNameIsGodIsDesignerMsTokenMsRefreshTokenPasswordRePassword": {
        "id": "UserProtoIdUidUrlProfileIdEmailFirstNameLastNameLangLangsPropertiesSubscriptionsIsSuperAdminApiProfileCustomerSynchronizedDevicesChangePasswordAtNextLoginStatusAccountTypeInstancesSuperAdminDirectoryFavoritesHiddenDirectoryFavoritesCreatedAtUpdatedAtCustomProfileEmailNotificationsProfilePictureIsHiddenAlternateEmailLastSynchronizationExpirationDateProfileStatusExternalDirectoryUrlSettingsUnreadNotificationCountProfilePictureUrlTutorialsGamificationFullNameIsGodIsDesignerMsTokenMsRefreshTokenPasswordRePassword",
        "properties": {
          "accountType": {
            "type": "string"
          },
          "alternateEmail": {
            "type": "string"
          },
          "apiProfile": {
            "type": "string"
          },
          "changePasswordAtNextLogin": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "customProfile": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "devices": {
            "items": {
              "$ref": "Device"
            },
            "type": "array"
          },
          "directoryFavorites": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "email": {
            "type": "string"
          },
          "emailNotifications": {
            "$ref": "UserEmailNotification"
          },
          "expirationDate": {
            "type": "string"
          },
          "externalDirectoryUrl": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "gamification": {
            "$ref": "UserGamification"
          },
          "hiddenDirectoryFavorites": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "instancesSuperAdmin": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isDesigner": {
            "type": "boolean"
          },
          "isGod": {
            "type": "boolean"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isSuperAdmin": {
            "type": "boolean"
          },
          "lang": {
            "type": "string"
          },
          "langs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lastName": {
            "type": "string"
          },
          "lastSynchronization": {
            "type": "string"
          },
          "msRefreshToken": {
            "type": "string"
          },
          "msToken": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "profileId": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string"
          },
          "profileStatus": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "rePassword": {
            "type": "string"
          },
          "settings": {
            "$ref": "UserSettings"
          },
          "status": {
            "default": "enabled",
            "type": "string"
          },
          "subscriptions": {
            "items": {
              "$ref": "UserSubscription"
            },
            "type": "array"
          },
          "synchronized": {
            "type": "boolean"
          },
          "tutorials": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "unreadNotificationCount": {
            "format": "int32",
            "type": "integer"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserProtoLangLangsPropertiesShowTutorialTutorialsEmailNotificationsPasswordRePasswordCurrentPasswordAlternateEmailSettings": {
        "id": "UserProtoLangLangsPropertiesShowTutorialTutorialsEmailNotificationsPasswordRePasswordCurrentPasswordAlternateEmailSettings",
        "properties": {
          "alternateEmail": {
            "type": "string"
          },
          "currentPassword": {
            "type": "string"
          },
          "emailNotifications": {
            "$ref": "UserEmailNotification"
          },
          "lang": {
            "type": "string"
          },
          "langs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "password": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "rePassword": {
            "type": "string"
          },
          "settings": {
            "$ref": "UserSettings"
          },
          "showTutorial": {
            "type": "boolean"
          },
          "tutorials": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserProtoProfileStatus": {
        "id": "UserProtoProfileStatus",
        "properties": {
          "profileStatus": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserReward": {
        "id": "UserReward",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "goals": {
            "items": {
              "$ref": "Goal"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "instanceId": {
            "type": "string"
          },
          "questId": {
            "type": "string"
          },
          "received": {
            "default": "1",
            "format": "int32",
            "type": "integer"
          },
          "rewardId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "visible": {
            "default": "True",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UserSettings": {
        "id": "UserSettings",
        "properties": {
          "notificationPreferences": {
            "$ref": "NotificationPreferences"
          },
          "notifications": {
            "$ref": "UserNotificationsStatus"
          },
          "social": {
            "$ref": "UserSocialSettings"
          }
        },
        "type": "object"
      },
      "UserSocialSettings": {
        "id": "UserSocialSettings",
        "properties": {
          "isActivityVisible": {
            "default": "True",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UserSubscription": {
        "id": "UserSubscription",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "feed": {
            "type": "string"
          },
          "hasModelVersion": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          },
          "prefer": {
            "type": "boolean"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "systemInfo": {
            "$ref": "SystemInfo"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Webhook": {
        "id": "Webhook",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "WebhookProtoCustomerNameFamilyUrlDescriptionIdUidStatus": {
        "id": "WebhookProtoCustomerNameFamilyUrlDescriptionIdUidStatus",
        "properties": {
          "customer": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "WebhookProtoCustomerNameFamilyUrlDescriptionIdUidStatusCreatedAtUpdatedAtSecurityToken": {
        "id": "WebhookProtoCustomerNameFamilyUrlDescriptionIdUidStatusCreatedAtUpdatedAtSecurityToken",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "securityToken": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "WebhookProtoUid": {
        "id": "WebhookProtoUid",
        "properties": {
          "uid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Widget": {
        "id": "Widget",
        "properties": {
          "customer": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "feedKeys": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "isMainWidget": {
            "type": "boolean"
          },
          "isOverride": {
            "type": "boolean"
          },
          "placeholder": {
            "type": "string"
          },
          "properties": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "status": {
            "default": "LIVE",
            "type": "string"
          },
          "style": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "widgetType": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "servicePath": "lumsites/v1/",
    "version": "v1"
  }